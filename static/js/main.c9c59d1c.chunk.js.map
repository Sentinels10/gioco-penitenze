{"version":3,"sources":["actions lazy /^/.//.*$/ groupOptions: {} namespace object","translations.js","useSpecialGames.js","useGameLogic.js","TimerChallengeComponent.js","GameUI.js","DrinkingGameApp.js","index.js","assets/pointing-glove.png"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","translations","it","appName","appDescription","startButton","backButton","nextButton","doneButton","payButton","enterButton","resetButton","startGameButton","startTimerButton","playersScreenTitle","roomsScreenTitle","unlockGameTitle","playerInputPlaceholder","addPlayerLabel","notEnoughPlayersError","gameOverMessage","actionsCompletedMessage","tapToContinueMessage","returnToRoomsMessage","unlockMoreGamesMessage","gameSelection","title","description","continueButton","selectedGamesTitle","selectedGamesDescription","noGamesSelectedError","games","truthOrDare","name","wouldYouRather","nonHoMai","freeGameEndedTitle","freeGameEndedMessage","purchaseButton","processingPayment","timerChallenge","timeUp","timeRemaining","startTimer","timerStarted","completed","failed","paymentOptions","price","loadingMessage","rooms","color","specialGames","pointFinger","infamata","choosing","truth","dare","debt","questoOQuello","chatDetective","tuttoHaUnPrezzo","tuttiQuelliChe","penitenzeGruppo","penitenzaRandom","chiEPiuProbabile","happyHour","oneVsOne","specialGamesTitles","wouldYouRatherExplanation","truthDareOptions","selectOption","debtExplanation","chooseOption","noActionAvailable","penaltyAlternatives","questions","statements","debts","buttonLabel","activeDebtsTitle","debtDescription","logMessages","neonRouletteStats","redRoomStats","darkRoomStats","coppieStats","partyStats","totalStats","noActionsInPool","missingSpecialGame","truthDareIntro","truthDareNextPlayerIntro","en","fr","de","useSpecialGames","props","players","selectedRoom","currentPlayerIndex","actionsCounter","setCurrentAction","loadBackupActions","MAX_ACTIONS_PER_GAME","gameMode","selectedGames","activeSpecialGame","setActiveSpecialGame","useState","specialGamePlayer","setSpecialGamePlayer","specialGamePositions","setSpecialGamePositions","specialGamesShown","setSpecialGamesShown","truthDarePlayers","setTruthDarePlayers","currentTruthDareIndex","setCurrentTruthDareIndex","currentTruthDareChoice","setCurrentTruthDareChoice","truthDareContent","setTruthDareContent","truthDareState","setTruthDareState","usedTruthQuestions","setUsedTruthQuestions","usedDareQuestions","setUsedDareQuestions","wouldYouRatherContent","setWouldYouRatherContent","questoOQuelloContent","setQuestoOQuelloContent","isTimerActive","setIsTimerActive","timerSeconds","setTimerSeconds","timerChallengeContent","setTimerChallengeContent","debtList","setDebtList","getValidSpecialGamesForGameMode","validGames","push","console","log","getValidSpecialGames","roomId","redRoom","darkRoom","party","coppie","neonRoulette","sort","Math","random","handleTruthOrDareGame","playerIndex","backupActions","allPlayers","startIndex","orderedPlayers","slice","introText","replace","text","handleNonHoMaiGame","randomPlayerIndex","gameText","playerName","formattedText","handleWouldYouRatherGame","options","selectedContent","floor","length","handleQuestoOQuelloGame","handleTimerChallengeGame","fallbackText","MIN_ACTIONS_BETWEEN_SPECIAL_GAMES","initializeSpecialGames","async","positions","validSpecialGames","numSpecialGames","min","startPosition","availableRange","interval","max","i","basePosition","randomOffset","gameType","position","minSpacing","maxOffset","shouldShowSpecialGame","counter","matchingPosition","find","pos","findNextSpecialGame","handleSpecialGame","error","prev","randomCount","finalText","handleTruthDareChoice","choice","currentPlayer","player","status","createdAt","Date","toISOString","debtText","selectedRoomId","truthDareGame","allOptions","currentUsedQuestions","shouldResetUsedList","selectUnusedQuestion","usedQuestions","availableOptions","filter","option","includes","substring","choiceText","getSpecialGameMessage","nextTurnAfterSpecialGame","nextTurnCallback","nextPlayer","nextIntroText","timer","setInterval","prevSeconds","clearInterval","useGameLogic","language","setLanguage","gameState","setGameState","setPlayers","inputPlayers","setInputPlayers","setCurrentPlayerIndex","currentAction","setSelectedRoom","previousAction","setPreviousAction","setSelectedGames","setActionsCounter","isLoading","setIsLoading","loadingProgress","setLoadingProgress","currentRoomIndex","setCurrentRoomIndex","roomActionsPool","setRoomActionsPool","giochi","currentActionIndex","setCurrentActionIndex","groupActionsPool","setGroupActionsPool","groupActionPositions","setGroupActionPositions","groupActionsShown","setGroupActionsShown","hasPlayedFreeGame","setHasPlayedFreeGame","hasPaid","setHasPaid","selectedPaymentOption","setSelectedPaymentOption","isProcessingPayment","setIsProcessingPayment","isFirstActionLoaded","setIsFirstActionLoaded","useEffect","storedHasPaid","localStorage","getItem","storedHasPlayedFreeGame","storedLanguage","_roomActionsPool$pool","poolKey","retryTimeout","setTimeout","updateCurrentAction","clearTimeout","addPlayerInput","newId","p","startGamesMode","prepareGamesPool","gamesPool","selectedGamesCount","values","selected","instancesPerGame","extraInstances","gameIndex","instances","finalPool","a","startsWith","backupActionsFileName","backupActionsModule","default","warn","enError","itError","updateCurrentActionWithPool","_actualPool$roomId","_actionText","_actionText2","poolToUse","arguments","undefined","actualPool","currentPool","index","currentPoolAction","actionText","otherPlayers","randomPlayerName","randomIndex","groupAction","updatedPool","splice","nextGameToShow","fallbackTexts","adjustedIndex","attempts","tempAction","questionPenaltyRegex","match","penaltyCount","randomQuestionAlt","penaltyRegex","randomAlt","nextTurn","afterSpecialAction","setItem","nextPlayerIndex","resetGame","changeLanguage","newLanguage","newRooms","newRoomIndex","findIndex","room","openLanguageSelector","enterPlayerSetup","updatePlayerName","input","removePlayerInput","startGame","validPlayers","trim","alert","handleKeyPress","key","nextInput","document","getElementById","focus","selectRoom","_newRoomActionsPool$r","_newRoomActionsPool$r2","_newRoomActionsPool$r3","_newRoomActionsPool$r4","groupActions","shuffledGroupActions","newRoomActionsPool","redRoomActions","darkRoomActions","coppieActions","partyActions","specialGameActions","forEach","gameData","Array","isArray","rules","actions","roomContent","maxPerCategory","selectedRedRoomActions","selectedDarkRoomActions","selectedCoppieActions","selectedPartyActions","selectedSpecialGameActions","shuffledActions","backupActionsForRoom","shuffledBackupActions","_newRoomActionsPool$r5","goBack","selectPaymentOption","processPayment","resetPaywallState","removeItem","toggleGameSelection","proceedWithSelectedGames","some","TimerChallengeComponent","_ref","timerIntervalRef","useRef","current","React","createElement","className","style","display","flexDirection","alignItems","gap","width","height","borderRadius","backgroundColor","justifyContent","fontSize","fontWeight","boxShadow","animation","textAlign","onClick","border","cursor","transition","onMouseOver","target","transform","onMouseOut","marginTop","padding","jsx","GameUI","maxWidth","marginBottom","lineHeight","opacity","background","gridTemplateColumns","margin","letterSpacing","flex","marginRight","bottom","left","right","zIndex","disabled","overflowY","overflow","type","value","onChange","onKeyPress","placeholder","minHeight","maxHeight","newIndex","_","toUpperCase","whiteSpace","src","pointingGlove","alt","objectFit","returnToGamesMessage","d","join","top","borderTopColor","DrinkingGameApp","gameLogic","ReactDOM","createRoot","render","StrictMode"],"mappings":"4GAAA,IAAIA,EAAM,CACT,qBAAsB,CACrB,EACA,GAED,0BAA2B,CAC1B,EACA,GAED,qBAAsB,CACrB,EACA,GAED,0BAA2B,CAC1B,EACA,GAED,qBAAsB,CACrB,EACA,GAED,0BAA2B,CAC1B,EACA,IAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B,OAAOR,EAAoBK,EAAEG,EAAI,IAAIJ,MAAK,WACzC,OAAOJ,EAAoBU,EAAED,EAAI,MAGnCX,EAAoBa,KAAO,WAC1B,OAAOC,OAAOD,KAAKd,IAEpBC,EAAoBW,GAAK,GACzBI,EAAOC,QAAUhB,G,gFCy1BFiB,MAn4BM,CACnBC,GAAI,CAEFC,QAAS,SACTC,eAAgB,0FAGhBC,YAAa,SACbC,WAAY,WACZC,WAAY,OACZC,WAAY,QACZC,UAAW,OACXC,YAAa,QACbC,YAAa,oBACbC,gBAAiB,QACjBC,iBAAkB,2BAGlBC,mBAAoB,UACpBC,iBAAkB,QAClBC,gBAAiB,mBAGjBC,uBAAwB,oBACxBC,eAAgB,aAGhBC,sBAAuB,6CACvBC,gBAAiB,kBACjBC,wBAAyB,mCACzBC,qBAAsB,qBACtBC,qBAAsB,sCACtBC,uBAAwB,0BAGxBC,cAAe,CACbC,MAAO,SACPC,YAAa,sDACbC,eAAgB,WAChBC,mBAAoB,qBACpBC,yBAA0B,gCAC1BC,qBAAsB,4CACtBC,MAAO,CACLC,YAAa,CACXC,KAAM,sBACNP,YAAa,+DAEfQ,eAAgB,CACdD,KAAM,eACNP,YAAa,yDAEfS,SAAU,CACRF,KAAM,aACNP,YAAa,kDAMnBU,mBAAoB,8BACpBC,qBAAsB,4GACtBC,eAAgB,WAChBC,kBAAmB,kBAGnBC,eAAgB,CACdC,OAAQ,iBACRC,cAAe,8BACfC,WAAY,+BACZC,aAAc,kCACdC,UAAW,oBACXC,OAAQ,uCAIVC,eAAgB,CACd,CAAErD,GAAI,UAAWuC,KAAM,UAAWe,MAAO,OAAQtB,YAAa,sCAC9D,CAAEhC,GAAI,QAASuC,KAAM,WAASe,MAAO,OAAQtB,YAAa,sHAI5DuB,eAAgB,0BAGhBC,MAAO,CACL,CACExD,GAAI,QACJuC,KAAM,QACNP,YAAa,0CACbyB,MAAO,WAET,CACEzD,GAAI,UACJuC,KAAM,WACNP,YAAa,gCACbyB,MAAO,WAET,CACEzD,GAAI,WACJuC,KAAM,YACNP,YAAa,4CACbyB,MAAO,WAET,CACEzD,GAAI,SACJuC,KAAM,SACNP,YAAa,4CACbyB,MAAO,WAET,CACEzD,GAAI,SACJuC,KAAM,SACNP,YAAa,0CACbyB,MAAO,WAET,CACEzD,GAAI,eACJuC,KAAM,gBACNP,YAAa,sCACbyB,MAAO,YAKXC,aAAc,CACZC,YAAa,kEACbC,SAAU,+DACVtB,YAAa,CACXuB,SAAU,2DACVC,MAAO,gCACPC,KAAM,8BACNC,KAAM,8BAERxB,eAAgB,mGAChByB,cAAe,mKACfC,cAAe,0CACfC,gBAAiB,mDACjBC,eAAgB,kDAChBC,gBAAiB,4CACjBC,gBAAiB,4CACjB7B,SAAU,yHACV8B,iBAAkB,2JAClBC,UAAW,oFACXC,SAAU,OACV3B,eAAgB,8EAIlB4B,mBAAoB,CAClBf,YAAa,kBACbC,SAAU,WACVtB,YAAa,6BACbE,eAAgB,eAChByB,cAAe,kBACfC,cAAe,iBACfC,gBAAiB,qBACjBC,eAAgB,mBAChBC,gBAAiB,sBACjBC,gBAAiB,mBACjB7B,SAAU,aACV8B,iBAAkB,gCAClBC,UAAW,aACXC,SAAU,OACV3B,eAAgB,iBAIlB6B,0BAA2B,gDAG3BC,iBAAkB,CAChBC,aAAc,wBACdf,MAAO,YACPC,KAAM,UACNC,KAAM,SACNc,gBAAiB,8EACjBC,aAAc,qBAIhBC,kBAAmB,6BAGnBC,oBAAqB,CACnBC,UAAW,CACT,wCACA,4CACA,2CAEFC,WAAY,CACV,oCACA,oCACA,sCACA,wCACA,gCACA,kCACA,0CACA,oCACA,wCAKJC,MAAO,CACLC,YAAa,eACbC,iBAAkB,iBAClBC,gBAAiB,8DAInBC,YAAa,CACXC,kBAAmB,uBACnBC,aAAc,2BACdC,cAAe,4BACfC,YAAa,yBACbC,WAAY,wBACZC,WAAY,yBACZC,gBAAiB,2CACjBC,mBAAoB,gEAItBC,eAAgB,wSAChBC,yBAA0B,oFAG5BC,GAAI,CAEF3F,QAAS,SACTC,eAAgB,6EAGhBC,YAAa,QACbC,WAAY,OACZC,WAAY,OACZC,WAAY,OACZC,UAAW,MACXC,YAAa,QACbC,YAAa,oBACbC,gBAAiB,QACjBC,iBAAkB,2BAGlBC,mBAAoB,UACpBC,iBAAkB,QAClBC,gBAAiB,kBAGjBC,uBAAwB,oBACxBC,eAAgB,aAGhBC,sBAAuB,qCACvBC,gBAAiB,aACjBC,wBAAyB,iCACzBC,qBAAsB,kBACtBC,qBAAsB,2BACtBC,uBAAwB,oBAGxBC,cAAe,CACbC,MAAO,QACPC,YAAa,oDACbC,eAAgB,WAChBC,mBAAoB,iBACpBC,yBAA0B,6BAC1BC,qBAAsB,wCACtBC,MAAO,CACLC,YAAa,CACXC,KAAM,gBACNP,YAAa,oDAEfQ,eAAgB,CACdD,KAAM,mBACNP,YAAa,iEAEfS,SAAU,CACRF,KAAM,oBACNP,YAAa,oDAMnBU,mBAAoB,mBACpBC,qBAAsB,4FACtBC,eAAgB,WAChBC,kBAAmB,gBAGnBC,eAAgB,CACdC,OAAQ,aACRC,cAAe,6BACfC,WAAY,4BACZC,aAAc,sCACdC,UAAW,uBACXC,OAAQ,iCAIVC,eAAgB,CACd,CAAErD,GAAI,UAAWuC,KAAM,UAAWe,MAAO,OAAQtB,YAAa,4BAC9D,CAAEhC,GAAI,QAASuC,KAAM,MAAOe,MAAO,OAAQtB,YAAa,qHAI1DuB,eAAgB,aAGhBC,MAAO,CACL,CACExD,GAAI,QACJuC,KAAM,QACNP,YAAa,sCACbyB,MAAO,WAET,CACEzD,GAAI,UACJuC,KAAM,WACNP,YAAa,kCACbyB,MAAO,WAET,CACEzD,GAAI,WACJuC,KAAM,YACNP,YAAa,4CACbyB,MAAO,WAET,CACEzD,GAAI,SACJuC,KAAM,UACNP,YAAa,+CACbyB,MAAO,WAET,CACEzD,GAAI,SACJuC,KAAM,QACNP,YAAa,0CACbyB,MAAO,WAET,CACEzD,GAAI,eACJuC,KAAM,gBACNP,YAAa,0BACbyB,MAAO,YAKXC,aAAc,CACZC,YAAa,kEACbC,SAAU,qEACVtB,YAAa,CACXuB,SAAU,qDACVC,MAAO,wBACPC,KAAM,uBACNC,KAAM,wBAERxB,eAAgB,iGAChByB,cAAe,yJACfC,cAAe,sCACfC,gBAAiB,wDACjBC,eAAgB,iDAChBC,gBAAiB,0CACjBC,gBAAiB,2CACjB7B,SAAU,4HACV8B,iBAAkB,8JAClBC,UAAW,uFACXC,SAAU,OACV3B,eAAgB,oFAIlB4B,mBAAoB,CAClBf,YAAa,mBACbC,SAAU,SACVtB,YAAa,sBACbE,eAAgB,mBAChByB,cAAe,eACfC,cAAe,iBACfC,gBAAiB,yBACjBC,eAAgB,gBAChBC,gBAAiB,kBACjBC,gBAAiB,mBACjB7B,SAAU,eACV8B,iBAAkB,wBAClBC,UAAW,aACXC,SAAU,OACV3B,eAAgB,oBAIlB6B,0BAA2B,0HAG3BC,iBAAkB,CAChBC,aAAc,oBACdf,MAAO,QACPC,KAAM,OACNC,KAAM,OACNc,gBAAiB,qEACjBC,aAAc,oBAIhBC,kBAAmB,sBAGnBC,oBAAqB,CACnBC,UAAW,CACT,2CACA,iDACA,qCAEFC,WAAY,CACV,mCACA,wCACA,mCACA,4BACA,kCACA,mDACA,yCACA,qCAKJC,MAAO,CACLC,YAAa,eACbC,iBAAkB,gBAClBC,gBAAiB,qDAInBC,YAAa,CACXC,kBAAmB,uBACnBC,aAAc,4BACdC,cAAe,6BACfC,YAAa,2BACbC,WAAY,yBACZC,WAAY,yBACZC,gBAAiB,yCACjBC,mBAAoB,8DAItBC,eAAgB,0QAChBC,yBAA0B,yEAG5BE,GAAI,CAEF5F,QAAS,SACTC,eAAgB,4FAGhBC,YAAa,YACbC,WAAY,SACZC,WAAY,UACZC,WAAY,aACZC,UAAW,QACXC,YAAa,SACbC,YAAa,qCACbC,gBAAiB,cACjBC,iBAAkB,4BAGlBC,mBAAoB,UACpBC,iBAAkB,SAClBC,gBAAiB,sBAGjBC,uBAAwB,gBACxBC,eAAgB,iBAGhBC,sBAAuB,4CACvBC,gBAAiB,kBACjBC,wBAAyB,4CACzBC,qBAAsB,wBACtBC,qBAAsB,4CACtBC,uBAAwB,4BAGxBC,cAAe,CACbC,MAAO,OACPC,YAAa,kEACbC,eAAgB,YAChBC,mBAAoB,0BACpBC,yBAA0B,4CAC1BC,qBAAsB,kDACtBC,MAAO,CACLC,YAAa,CACXC,KAAM,yBACNP,YAAa,gEAEfQ,eAAgB,CACdD,KAAM,uBACNP,YAAa,oEAEfS,SAAU,CACRF,KAAM,iBACNP,YAAa,gEAMnBU,mBAAoB,+BACpBC,qBAAsB,iIACtBC,eAAgB,UAChBC,kBAAmB,gBAGnBC,eAAgB,CACdC,OAAQ,sBACRC,cAAe,4BACfC,WAAY,gCACZC,aAAc,wCACdC,UAAW,sBACXC,OAAQ,kDAIVC,eAAgB,CACd,CAAErD,GAAI,UAAWuC,KAAM,UAAWe,MAAO,OAAQtB,YAAa,+CAC9D,CAAEhC,GAAI,QAASuC,KAAM,MAAOe,MAAO,OAAQtB,YAAa,mIAI1DuB,eAAgB,yBAGhBC,MAAO,CACL,CACExD,GAAI,QACJuC,KAAM,QACNP,YAAa,6CACbyB,MAAO,WAET,CACEzD,GAAI,UACJuC,KAAM,WACNP,YAAa,yCACbyB,MAAO,WAET,CACEzD,GAAI,WACJuC,KAAM,YACNP,YAAa,sDACbyB,MAAO,WAET,CACEzD,GAAI,SACJuC,KAAM,UACNP,YAAa,sDACbyB,MAAO,WAET,CACEzD,GAAI,SACJuC,KAAM,OACNP,YAAa,sDACbyB,MAAO,WAET,CACEzD,GAAI,eACJuC,KAAM,gBACNP,YAAa,4CACbyB,MAAO,YAKXC,aAAc,CACZC,YAAa,uEACbC,SAAU,qEACVtB,YAAa,CACXuB,SAAU,6DACVC,MAAO,kCACPC,KAAM,4BACNC,KAAM,4BAERxB,eAAgB,+HAChByB,cAAe,qLACfC,cAAe,0CACfC,gBAAiB,8CACjBC,eAAgB,6CAChBC,gBAAiB,kDACjBC,gBAAiB,0DACjB7B,SAAU,mJACV8B,iBAAkB,4LAClBC,UAAW,qGACXC,SAAU,OACV3B,eAAgB,qGAIlB4B,mBAAoB,CAClBf,YAAa,mBACbC,SAAU,UACVtB,YAAa,gCACbE,eAAgB,uBAChByB,cAAe,eACfC,cAAe,uBACfC,gBAAiB,iBACjBC,eAAgB,gBAChBC,gBAAiB,4BACjBC,gBAAiB,gCACjB7B,SAAU,iBACV8B,iBAAkB,iCAClBC,UAAW,aACXC,SAAU,OACV3B,eAAgB,+BAIlB6B,0BAA2B,4JAG3BC,iBAAkB,CAChBC,aAAc,8BACdf,MAAO,eACPC,KAAM,SACNC,KAAM,QACNc,gBAAiB,kFACjBC,aAAc,yBAIhBC,kBAAmB,2BAGnBC,oBAAqB,CACnBC,UAAW,CACT,wDACA,2DACA,iDAEFC,WAAY,CACV,2CACA,oDACA,sCACA,mCACA,2CACA,yDACA,+CACA,6CAKJC,MAAO,CACLC,YAAa,eACbC,iBAAkB,kBAClBC,gBAAiB,kEAInBC,YAAa,CACXC,kBAAmB,8BACnBC,aAAc,4BACdC,cAAe,6BACfC,YAAa,2BACbC,WAAY,yBACZC,WAAY,yBACZC,gBAAiB,sDACjBC,mBAAoB,kEAItBC,eAAgB,4UAChBC,yBAA0B,yFAG5BG,GAAI,CAEF7F,QAAS,SACTC,eAAgB,4FAGhBC,YAAa,UACbC,WAAY,YACZC,WAAY,SACZC,WAAY,WACZC,UAAW,SACXC,YAAa,YACbC,YAAa,6BACbC,gBAAiB,QACjBC,iBAAkB,6BAGlBC,mBAAoB,UACpBC,iBAAkB,WAClBC,gBAAiB,qBAGjBC,uBAAwB,uBACxBC,eAAgB,wBAGhBC,sBAAuB,sDACvBC,gBAAiB,iBACjBC,wBAAyB,4CACzBC,qBAAsB,0BACtBC,qBAAsB,oCACtBC,uBAAwB,6BAGxBC,cAAe,CACbC,MAAO,SACPC,YAAa,4EACbC,eAAgB,SAChBC,mBAAoB,wBACpBC,yBAA0B,2CAC1BC,qBAAsB,2DACtBC,MAAO,CACLC,YAAa,CACXC,KAAM,wBACNP,YAAa,+DAEfQ,eAAgB,CACdD,KAAM,2BACNP,YAAa,+EAEfS,SAAU,CACRF,KAAM,eACNP,YAAa,gEAMnBU,mBAAoB,6BACpBC,qBAAsB,yHACtBC,eAAgB,SAChBC,kBAAmB,kBAGnBC,eAAgB,CACdC,OAAQ,eACRC,cAAe,gCACfC,WAAY,wCACZC,aAAc,qDACdC,UAAW,iCACXC,OAAQ,wCAIVC,eAAgB,CACd,CAAErD,GAAI,UAAWuC,KAAM,UAAWe,MAAO,OAAQtB,YAAa,4CAC9D,CAAEhC,GAAI,QAASuC,KAAM,MAAOe,MAAO,OAAQtB,YAAa,gIAI1DuB,eAAgB,kBAGhBC,MAAO,CACL,CACExD,GAAI,QACJuC,KAAM,QACNP,YAAa,0CACbyB,MAAO,WAET,CACEzD,GAAI,UACJuC,KAAM,WACNP,YAAa,gCACbyB,MAAO,WAET,CACEzD,GAAI,WACJuC,KAAM,YACNP,YAAa,wDACbyB,MAAO,WAET,CACEzD,GAAI,SACJuC,KAAM,QACNP,YAAa,4DACbyB,MAAO,WAET,CACEzD,GAAI,SACJuC,KAAM,SACNP,YAAa,yDACbyB,MAAO,WAET,CACEzD,GAAI,eACJuC,KAAM,gBACNP,YAAa,mCACbyB,MAAO,YAKXC,aAAc,CACZC,YAAa,iEACbC,SAAU,8EACVtB,YAAa,CACXuB,SAAU,kEACVC,MAAO,oCACPC,KAAM,mCACNC,KAAM,mCAERxB,eAAgB,mHAChByB,cAAe,iKACfC,cAAe,sCACfC,gBAAiB,2DACjBC,eAAgB,8CAChBC,gBAAiB,yCACjBC,gBAAiB,+CACjB7B,SAAU,+HACV8B,iBAAkB,mLAClBC,UAAW,uFACXC,SAAU,OACV3B,eAAgB,+GAIlB4B,mBAAoB,CAClBf,YAAa,wBACbC,SAAU,QACVtB,YAAa,gCACbE,eAAgB,2BAChByB,cAAe,gBACfC,cAAe,gBACfC,gBAAiB,yBACjBC,eAAgB,YAChBC,gBAAiB,iBACjBC,gBAAiB,uBACjB7B,SAAU,eACV8B,iBAAkB,0BAClBC,UAAW,aACXC,SAAU,OACV3B,eAAgB,yBAIlB6B,0BAA2B,qIAG3BC,iBAAkB,CAChBC,aAAc,6BACdf,MAAO,WACPC,KAAM,UACNC,KAAM,SACNc,gBAAiB,qHACjBC,aAAc,6BAIhBC,kBAAmB,4BAGnBC,oBAAqB,CACnBC,UAAW,CACT,8CACA,mDACA,sCAEFC,WAAY,CACV,yCACA,yCACA,oCACA,+BACA,oCACA,gDACA,4CACA,qCAKJC,MAAO,CACLC,YAAa,eACbC,iBAAkB,mBAClBC,gBAAiB,oFAInBC,YAAa,CACXC,kBAAmB,6BACnBC,aAAc,6BACdC,cAAe,8BACfC,YAAa,0BACbC,WAAY,0BACZC,WAAY,2BACZC,gBAAiB,4CACjBC,mBAAoB,kEAItBC,eAAgB,+UAChBC,yBAA0B,+FC1HfI,MAhwBUC,IACvB,MAAM,EACJtG,EAAC,QACDuG,EAAO,aACPC,EAAY,mBACZC,EAAkB,eAClBC,EAAc,iBACdC,EAAgB,kBAChBC,EAAiB,qBACjBC,EAAoB,SACpBC,EAAQ,cACRC,GACET,GAMGU,EAAmBC,GAAwBC,mBAAS,OACpDC,EAAmBC,GAAwBF,mBAAS,OACpDG,EAAsBC,GAA2BJ,mBAAS,KAC1DK,EAAmBC,GAAwBN,mBAAS,IAGpDO,EAAkBC,GAAuBR,mBAAS,KAClDS,EAAuBC,GAA4BV,mBAAS,IAC5DW,EAAwBC,GAA6BZ,mBAAS,OAC9Da,EAAkBC,GAAuBd,mBAAS,OAClDe,EAAgBC,GAAqBhB,mBAAS,aAG9CiB,EAAoBC,GAAyBlB,mBAAS,KACtDmB,EAAmBC,GAAwBpB,mBAAS,KAGpDqB,EAAuBC,GAA4BtB,mBAAS,OAG5DuB,EAAsBC,GAA2BxB,mBAAS,OAG1DyB,EAAeC,GAAoB1B,oBAAS,IAC5C2B,EAAcC,GAAmB5B,mBAAS,KAC1C6B,EAAuBC,GAA4B9B,mBAAS,OAG5D+B,EAAUC,GAAehC,mBAAS,IA4FnCiC,EAAkCA,KACtC,IAAKpC,EAAe,MAAO,GAE3B,MAAMqC,EAAa,GAenB,OAbIrC,EAAc1E,aAChB+G,EAAWC,KAAK,eAGdtC,EAAcxE,gBAChB6G,EAAWC,KAAK,kBAGdtC,EAAcvE,UAChB4G,EAAWC,KAAK,YAGlBC,QAAQC,IAAI,6BAA8BH,GACnCA,GAIHI,EAAwBC,GAgDT,CA7CjB,cACA,iBACA,gBACA,oBAIwB,CACxBC,QAAS,CACP,WACA,kBACA,iBACA,mBAEFC,SAAU,CACR,cACA,WACA,oBAEFC,MAAO,CACL,gBACA,kBACA,YACA,WAEFC,OAAQ,CACN,YAEFC,aAAc,CACZ,WACA,cACA,gBACA,kBACA,iBACA,kBACA,WACA,mBACA,YACA,WACA,kBACA,YAOoBL,IAAW,IAIjBM,KAAK,IAAMC,KAAKC,SAAW,IAgIzCC,EAAwBA,CAACC,EAAaC,KAC1Cd,QAAQC,IAAI,uCACZD,QAAQC,IAAI,eAAgBY,GAG5B,MAAME,EAAa,IAAI9D,GACjB+D,EAAaH,EAGbI,EAAiB,IAClBF,EAAWG,MAAMF,MACjBD,EAAWG,MAAM,EAAGF,IAIzB5C,EAAoB6C,GACpB3C,EAAyB,GACzBE,EAA0B,MAC1BE,EAAoB,MACpBE,EAAkB,YAGlBE,EAAsB,IACtBE,EAAqB,IAErBgB,QAAQC,IAAI,2BAA4BgB,GACxCjB,QAAQC,IAAI,+BAGZ,MAAMkB,EAAYzK,EAAEgG,eAAe0E,QAAQ,WAAYH,EAAe,IAGtE5D,EAAiB,CAAEgE,KAAMF,KAIrBG,EAAqBA,CAACR,EAAeS,KAEzC,MAAMC,EAAW9K,EAAEyD,aAAajB,SAC1BuI,EAAaxE,EAAQsE,GACrBG,EAAgBF,EAASJ,QAAQ,YAAaK,GAGpDpE,EAAiB,CAAEgE,KAAMK,KA2HrBC,EAA2BA,CAACb,EAAeS,KAG/C,MAAMpB,EAAsB,UAAb3C,EAAuB,SAAuB,OAAZN,QAAY,IAAZA,OAAY,EAAZA,EAAczG,KAAM,QAErE,GAAIqK,EAAc7H,gBACd6H,EAAc7H,eAAekH,GAAS,CAGxC,MAAMyB,EAAUd,EAAc7H,eAAekH,GAEvC0B,EAAkBD,EADJlB,KAAKoB,MAAMpB,KAAKC,SAAWiB,EAAQG,SACVV,KAG7CnC,EAAyB2C,GAGzB,MAAMJ,EAAaxE,EAAQsE,GAC3B,IAAIC,EAAW9K,EAAEyD,aAAalB,eAAemI,QAAQ,WAAYK,GAGjEpE,EAAiB,CACfgE,KAAM,GAAGG,QAAeK,QAAsBnL,EAAE0E,mCAIlD8D,EAAyB,6CACzB7B,EAAiB,CAAEgE,KAAM3K,EAAEyD,aAAalB,eAAemI,QAAQ,WAAYnE,EAAQsE,OAKjFS,EAA0BA,CAAClB,EAAeS,KAE9C,MAAMpB,EAAsB,UAAb3C,EAAuB,SAAuB,OAAZN,QAAY,IAAZA,OAAY,EAAZA,EAAczG,KAAM,QAErE,GAAIqK,EAAc3G,cACd2G,EAAc3G,aAAaO,eAC3BoG,EAAc3G,aAAaO,cAAcyF,GAAS,CAGpD,MAAMyB,EAAUd,EAAc3G,aAAaO,cAAcyF,GAEnD0B,EAAkBD,EADJlB,KAAKoB,MAAMpB,KAAKC,SAAWiB,EAAQG,SAIvD3C,EAAwByC,GAGxB,MAAMV,EAAYL,EAAc3G,aAAaO,cAAc2G,MAAQ,mBAG7DI,EAAaxE,EAAQsE,GACrBG,EAAgBP,EAAUC,QAAQ,YAAaK,GAGrDpE,EAAiB,CACfgE,KAAM,GAAGK,QAAoBG,UAE1B,CAEL,MAAMV,EAAYL,EAAc3G,aAAaO,cAAc2G,MAAQ,mBAC7DI,EAAaxE,EAAQsE,GACrBG,EAAgBP,EAAUC,QAAQ,YAAaK,GAErDrC,EAAwB,6CACxB/B,EAAiB,CAAEgE,KAAMK,MAKvBO,EAA2BA,CAACnB,EAAeS,KAE/C,MAAMpB,EAAsB,UAAb3C,EAAuB,SAAuB,OAAZN,QAAY,IAAZA,OAAY,EAAZA,EAAczG,KAAM,QAErE,GAAIqK,EAAc3G,cACd2G,EAAc3G,aAAaZ,gBAC3BuH,EAAc3G,aAAaZ,eAAe4G,GAAS,CAGrD,MAAMyB,EAAUd,EAAc3G,aAAaZ,eAAe4G,GAEpD0B,EAAkBD,EADJlB,KAAKoB,MAAMpB,KAAKC,SAAWiB,EAAQG,SAIvDrC,EAAyBmC,GACzBvC,GAAiB,GACjBE,EAAgB,IAGhB,MAAM2B,EAAYL,EAAc3G,aAAaZ,eAAe8H,KAGtDI,EAAaxE,EAAQsE,GACrBG,EAAgBP,EAAUC,QAAQ,YAAaK,GAGrDpE,EAAiB,CAAEgE,KAAMK,QACpB,CAELhC,EAAyB,2CACzB,MAAMwC,EAAexL,EAAEyD,aAAaZ,eAAe6H,QAAQ,WAAYnE,EAAQsE,IAC/ElE,EAAiB,CAAEgE,KAAMa,MA2H7B,MAAO,CAELC,kCAhtBwC,EAmtBxCzE,oBACAG,oBACA8B,WACAxB,mBACAI,yBACAE,mBACAE,iBACAM,wBACAE,uBACAE,gBACAE,eACAE,wBACA1B,uBAGAc,qBACAE,oBAGAqD,uBApsB6BC,UAC7BrC,QAAQC,IAAI,wCACZD,QAAQC,IAAI,UAAWE,GACvBH,QAAQC,IAAI,YAAazC,GACzBwC,QAAQC,IAAI,iBAAkBxC,GAE9BE,EAAqB,MACrBG,EAAqB,MACrBM,EAAoB,IACpBE,EAAyB,GACzBE,EAA0B,MAC1BE,EAAoB,MACpBE,EAAkB,YAClBgB,EAAY,IACZV,EAAyB,MACzBE,EAAwB,MACxBE,GAAiB,GACjBE,EAAgB,IAChBE,EAAyB,MACzBxB,EAAqB,GAGrBY,EAAsB,IACtBE,EAAqB,IAGrB,MAAMsD,EAAY,GAGlB,GAAiB,UAAb9E,EAAsB,CACxB,MAAM+E,EAAoB1C,IAE1B,GAAiC,IAA7B0C,EAAkBR,OAGpB,OAFA/B,QAAQC,IAAI,yCACZjC,EAAwB,IAK1B,MAAMwE,EAAkB9B,KAAK+B,IAAI,GAA+B,EAA3BF,EAAkBR,QAGjDW,EAAgB,EAEhBC,EADcpF,EAAuB,EACNmF,EAG/BE,EAAWlC,KAAKmC,IAAI,EAAGnC,KAAKoB,MAAMa,EAAiBH,IAEzD,IAAK,IAAIM,EAAI,EAAGA,EAAIN,EAAiBM,IAAK,CACxC,MAAMC,EAAeL,EAAiBI,EAAIF,EACpCI,EAAetC,KAAKoB,MAAsB,EAAhBpB,KAAKC,UAG/BsC,EAAWV,EAAkBO,EAAIP,EAAkBR,QAEzDO,EAAUvC,KAAK,CACbmD,SAAUH,EAAeC,EACzBC,SAAUA,SAGT,CAEL,MAAMV,EAAoBrC,EAAqBC,GACzCqC,EAAkB9B,KAAK+B,IAAI,GAAIF,EAAkBR,QAEjDW,EAAgB,EAEhBC,EADcpF,EAAuB,EACNmF,EAC/BE,EAAWlC,KAAKoB,MAAMa,EAAiBH,GACvCW,EAxGgC,EA0GtC,IAAK,IAAIL,EAAI,EAAGA,EAAIN,EAAiBM,IAAK,CACxC,MAAMC,EAAeL,EAAiBI,EAAIF,EACpCQ,EAAY1C,KAAKmC,IAAI,EAAGnC,KAAK+B,IAAIG,EAAWO,EAAY,IACxDH,EAAetC,KAAKoB,MAAMpB,KAAKC,SAAWyC,GAEhDd,EAAUvC,KAAK,CACbmD,SAAUH,EAAeC,EACzBC,SAAUV,EAAkBO,EAAIP,EAAkBR,WAKxD/B,QAAQC,IAAI,oCAAqCqC,GACjDtE,EAAwBsE,IAgnBxBe,sBA5hB4BA,CAACC,EAASnD,KAQtC,GAPAH,QAAQC,IAAI,uCACZD,QAAQC,IAAI,WAAYqD,GACxBtD,QAAQC,IAAI,UAAWE,GACvBH,QAAQC,IAAI,YAAazC,GACzBwC,QAAQC,IAAI,qBAAsBvC,GAClCsC,QAAQC,IAAI,wBAAyBlC,IAEhCoC,GAAUzC,EAEb,OADAsC,QAAQC,IAAI,iEACL,EAIT,MAAMsD,EAAmBxF,EAAqByF,KAC5CC,GAAOA,EAAIP,WAAaI,GAK1B,OAFAtD,QAAQC,IAAI,oBAAqBsD,KAExBA,GAygBTG,oBArgB0BA,CAACJ,EAASnD,KAMpC,GALAH,QAAQC,IAAI,qCACZD,QAAQC,IAAI,WAAYqD,GACxBtD,QAAQC,IAAI,UAAWE,GACvBH,QAAQC,IAAI,YAAazC,IAEpB2C,EAAQ,OAAO,KAGpB,MAAMoD,EAAmBxF,EAAqByF,KAC5CC,GAAOA,EAAIP,WAAaI,GAK1B,OAFAtD,QAAQC,IAAI,wCAAyCsD,GAE9CA,EAAmBA,EAAiBN,SAAW,MAuftDU,kBAnfwBtB,UAOxB,GANArC,QAAQC,IAAI,mCACZD,QAAQC,IAAI,YAAagD,GACzBjD,QAAQC,IAAI,YAAazC,GACzBwC,QAAQC,IAAI,6BAA8BvC,GAGtCA,EAEF,YADAsC,QAAQC,IAAI,0CAKd,MAAMa,QAAsBxD,IAG5B,IAAKwD,EAAc3G,eAAiB2G,EAAc3G,aAAa8I,GAE7D,YADAjD,QAAQ4D,MAAM,GAAGlN,EAAEuF,YAAYQ,mBAAmB2E,QAAQ,SAAU6B,IAMtE,MAAM1B,EAAoBb,KAAKoB,MAAMpB,KAAKC,SAAW1D,EAAQ8E,QAa7D,OAZAjE,EAAqBb,EAAQsE,IAG7B5D,EAAqBsF,GAGrB/E,EAAqB2F,GAAQA,EAAO,GAEpC7D,QAAQC,IAAI,gCAAiCgD,GAC7CjD,QAAQC,IAAI,4BAA6BhD,EAAQsE,IAGzC0B,GACN,IAAK,cAEHrC,EAAsBW,EAAmBT,GACzC,MAEF,IAAK,iBAEHa,EAAyBb,EAAeS,GACxC,MAEF,IAAK,gBAEHS,EAAwBlB,EAAeS,GACvC,MAEF,IAAK,iBAEHU,EAAyBnB,EAAeS,GACxC,MAEF,IAAK,WAEHD,EAAmBR,EAAeS,GAClC,MAEF,QAEE,MAAMC,EAAWV,EAAc3G,aAAa8I,GAAU5B,KAGhDI,EAAaxE,EAAQsE,GACrBG,EAAgBF,EAASJ,QAAQ,YAAaK,GAG9CqC,EAAcpD,KAAKoB,MAAsB,EAAhBpB,KAAKC,UAAgB,EAC9CoD,EAAYrC,EAAcN,QAAQ,WAAY0C,GAGpDzG,EAAiB,CAAEgE,KAAM0C,MAya7BC,sBAlV4B3B,UAC5BrC,QAAQC,IAAI,uCACZD,QAAQC,IAAI,UAAWgE,GACvBjE,QAAQC,IAAI,yBAA0B5B,GAEtCG,EAA0ByF,GAC1BrF,EAAkB,aAGlB,MAAMkC,QAAsBxD,IAG5B,GAAe,SAAX2G,EAAmB,CAErB,MAAMC,EAAgB/F,EAAiBE,GAGvCuB,EAAYiE,GAAQ,IACfA,EACH,CACEM,OAAQD,EACRzL,YAAa/B,EAAEmF,MAAMG,gBACrBoI,OAAQ,SACRC,WAAW,IAAIC,MAAOC,iBAK1B7F,EAAoBhI,EAAE2E,iBAAiBE,iBAGvC,MAAMiJ,EAAW9N,EAAEyD,aAAapB,YAAY0B,KAAK2G,QAAQ,WAAY8C,GAGrE,YAFA7G,EAAiB,CAAEgE,KAAMmD,IAO3B,MAAMC,EAA8B,UAAbjH,EAAuB,SAAuB,OAAZN,QAAY,IAAZA,OAAY,EAAZA,EAAczG,KAAM,QAG7E,GAAIqK,EAAc4D,eACd5D,EAAc4D,cAAcT,IAC5BnD,EAAc4D,cAAcT,GAAQQ,GAAiB,CAGvD,MAAME,EAAa7D,EAAc4D,cAAcT,GAAQQ,GACjDG,EAAkC,UAAXX,EAAqBpF,EAAqBE,GAEjE,gBAAE8C,EAAe,oBAAEgD,GApFAC,EAACH,EAAYI,KACxC/E,QAAQC,IAAI,sCACZD,QAAQC,IAAI,iBAAkB0E,EAAW5C,QACzC/B,QAAQC,IAAI,kBAAmB8E,EAAchD,QAG7C,MAAMiD,EAAmBL,EAAWM,OAAOC,IACxCH,EAAcI,SAASD,IAM1B,GAHAlF,QAAQC,IAAI,qBAAsB+E,EAAiBjD,QAGnB,IAA5BiD,EAAiBjD,OAEnB,OADA/B,QAAQC,IAAI,oCACL,CACL4B,gBAAiB8C,EAAWjE,KAAKoB,MAAMpB,KAAKC,SAAWgE,EAAW5C,SAClE8C,qBAAqB,GAKzB,MACMhD,EAAkBmD,EADJtE,KAAKoB,MAAMpB,KAAKC,SAAWqE,EAAiBjD,SAKhE,OAFA/B,QAAQC,IAAI,qBAAsB4B,EAAgBuD,UAAU,EAAG,IAAM,OAE9D,CACLvD,kBACAgD,qBAAqB,IAuD4BC,CAAqBH,EAAYC,GAGnE,UAAXX,EAEAnF,EADE+F,EACoB,CAAChD,GAEDgC,GAAQ,IAAIA,EAAMhC,IAIxC7C,EADE6F,EACmB,CAAChD,GAEDgC,GAAQ,IAAIA,EAAMhC,IAK3CnD,EAAoBmD,GAGpB,MAAMwD,EAAwB,UAAXpB,EACfvN,EAAEyD,aAAapB,YAAYwB,MAC3B7D,EAAEyD,aAAapB,YAAYyB,KAEzB0J,EAAgB/F,EAAiBE,GACjCqD,EAAgB2D,EAAWjE,QAAQ,WAAY8C,GACrD7G,EAAiB,CAAEgE,KAAMK,SAGzBhD,EAAoB,gDAmQtB4G,sBAjI4BA,KAC5B,IAAK5H,EAAmB,MAAO,GAE/B,OAAQA,GACN,IAAK,cACH,MAAuB,aAAnBiB,EACKjI,EAAEyD,aAAapB,YAAYuB,SAAS8G,QAAQ,WAAYjD,EAAiBE,IAE9C,UAA3BE,EACH7H,EAAEyD,aAAapB,YAAYwB,MAAM6G,QAAQ,WAAYjD,EAAiBE,IAC3C,SAA3BE,EACE7H,EAAEyD,aAAapB,YAAYyB,KAAK4G,QAAQ,WAAYjD,EAAiBE,IACrE3H,EAAEyD,aAAapB,YAAY0B,KAAK2G,QAAQ,WAAYjD,EAAiBE,IAG/E,IAAK,iBACH,OAAO3H,EAAEyD,aAAalB,eAAemI,QAAQ,WAAYvD,GAE3D,IAAK,gBACH,OAAOnH,EAAEyD,aAAaO,cAAc0G,QAAQ,WAAYvD,GAE1D,IAAK,iBACH,OAAOnH,EAAEyD,aAAaZ,eAAe6H,QAAQ,WAAYvD,GAE3D,IAAK,WACH,OAAOnH,EAAEyD,aAAajB,SAASkI,QAAQ,WAAYvD,GAErD,QACE,OAAInH,EAAEyD,aAAauD,GACVhH,EAAEyD,aAAauD,GAAmB0D,QAAQ,WAAYvD,GAExD,KAmGX0H,yBA9FgCC,IAShC,GARAxF,QAAQC,IAAI,0CACZD,QAAQC,IAAI,6BAA8BvC,GAC1CsC,QAAQC,IAAI,kBAAmBtB,GAC/BqB,QAAQC,IAAI,yBAA0B5B,GACtC2B,QAAQC,IAAI,2BAA4B9B,EAAiB4D,QACzD/B,QAAQC,IAAI,YAAazC,GAGC,gBAAtBE,EAGF,GAAiB,UAAbF,EACFwC,QAAQC,IAAI,6DAIZ,GAAI5B,EAAwBF,EAAiB4D,OAAS,EAAG,CACvD/B,QAAQC,IAAI,oCAEZ3B,EAAyBuF,GAAQA,EAAO,GACxCrF,EAA0B,MAC1BE,EAAoB,MACpBE,EAAkB,YAGlB,MAAM6G,EAAatH,EAAiBE,EAAwB,GACtDqH,EAAgBhP,EAAEiG,yBAAyByE,QAAQ,WAAYqE,GAGrE,YAFApI,EAAiB,CAAEgE,KAAMqE,IAO/B1F,QAAQC,IAAI,yCAGZtC,EAAqB,MACrBG,EAAqB,MACrBU,EAA0B,MAC1BE,EAAoB,MACpBE,EAAkB,YAClBM,EAAyB,MACzBE,EAAwB,MACxBE,GAAiB,GACjBE,EAAgB,IAChBE,EAAyB,MAGC,gBAAtBhC,IACFoB,EAAsB,IACtBE,EAAqB,IACrBgB,QAAQC,IAAI,+DAGdD,QAAQC,IAAI,sCAGRuF,GACFA,GAAiB,IAmCnB9L,WArJiBA,KACjB4F,GAAiB,GACjBE,EAAgB,IAGhB,MAAMmG,EAAQC,YAAY,KACxBpG,EAAgBqG,GACVA,GAAe,GACjBC,cAAcH,GACdrG,GAAiB,GACV,GAEFuG,EAAc,IAEtB,QCuhBQE,MA3oCMA,KAEnB,MAAOC,EAAUC,GAAerI,mBAAS,MAEnClH,EAAIK,EAAaiP,IAGhBE,EAAWC,GAAgBvI,mBAAS,YACpCX,EAASmJ,GAAcxI,mBAAS,KAChCyI,EAAcC,GAAmB1I,mBAAS,CAAC,CAAEnH,GAAI,EAAGuC,KAAM,OAC1DmE,EAAoBoJ,GAAyB3I,mBAAS,IACtD4I,EAAenJ,GAAoBO,mBAAS,OAC5CV,EAAcuJ,GAAmB7I,mBAAS,OAC1C8I,EAAgBC,GAAqB/I,mBAAS,OAG9CH,EAAemJ,GAAoBhJ,mBAAS,CACjD7E,aAAa,EACbE,gBAAgB,EAChBC,UAAU,KAILkE,EAAgByJ,GAAqBjJ,mBAAS,IAK9CkJ,EAAWC,GAAgBnJ,oBAAS,IACpCoJ,EAAiBC,GAAsBrJ,mBAAS,IAGhDsJ,EAAkBC,GAAuBvJ,mBAAS,IAGlDwJ,EAAiBC,GAAsBzJ,mBAAS,CACrDwC,QAAS,GACTC,SAAU,GACVE,OAAQ,GACRD,MAAO,GACPgH,OAAQ,GACR9G,aAAc,MAIT+G,EAAoBC,GAAyB5J,mBAAS,CAC3DwC,QAAS,EACTC,SAAU,EACVE,OAAQ,EACRD,MAAO,EACPgH,OAAQ,EACR9G,aAAc,KAITiH,EAAkBC,GAAuB9J,mBAAS,KAElD+J,EAAsBC,GAA2BhK,mBAAS,KAE1DiK,EAAmBC,GAAwBlK,mBAAS,IAGpDmK,EAAmBC,GAAwBpK,oBAAS,IACpDqK,EAASC,GAActK,oBAAS,IAChCuK,EAAuBC,GAA4BxK,mBAAS,OAC5DyK,EAAqBC,GAA0B1K,oBAAS,IAGxD2K,EAAqBC,GAA0B5K,oBAAS,GAGzDzD,EAAe4C,EAAgB,CACnCrG,IACAuG,UACAC,eACAC,qBACAC,iBACAC,mBACAC,qBACAC,qBAtD2B,GAuD3BC,SAA+B,YAAT,OAAZN,QAAY,IAAZA,OAAY,EAAZA,EAAczG,IAAkB,QAAU,QACpDgH,kBAIFgL,oBAAU,KAER,MAAMC,EAAoD,SAApCC,aAAaC,QAAQ,WACrCC,EAAwE,SAA9CF,aAAaC,QAAQ,qBAC/CE,EAAiBH,aAAaC,QAAQ,YAExCF,GACFR,GAAW,GAGTW,GACFb,GAAqB,GAGnBc,GAAkB/R,EAAa+R,IACjC7C,EAAY6C,IAEb,IAGHL,oBAAU,KACR,GAAkB,YAAdvC,GAA2BhJ,IAAiBqL,EAAqB,CAAC,IAADQ,EACnE/I,QAAQC,IAAI,4CACZD,QAAQC,IAAI,aAAciG,GAC1BlG,QAAQC,IAAI,gBAA6B,OAAZ/C,QAAY,IAAZA,OAAY,EAAZA,EAAczG,IAC3CuJ,QAAQC,IAAI,uBAAwBsI,GAEpC,MAAMS,EAAU9L,EAAazG,GAK7B,GAJAuJ,QAAQC,IAAI,WAAY+I,GACxBhJ,QAAQC,IAAI,2BAAoD,QAA1B8I,EAAE3B,EAAgB4B,UAAQ,IAAAD,OAAA,EAAxBA,EAA0BhH,UAG9DqF,EAAgB4B,IAAY5B,EAAgB4B,GAASjH,OAAS,GAM3D,CACL/B,QAAQC,IAAI,kCAEZ,MAAMgJ,EAAeC,WAAW,KAC1B9B,EAAgB4B,IAAY5B,EAAgB4B,GAASjH,OAAS,IAChE/B,QAAQC,IAAI,6CACZkJ,KACAX,GAAuB,KAExB,KAEH,MAAO,IAAMY,aAAaH,GAhB1BjJ,QAAQC,IAAI,uCACZiJ,WAAW,KACTC,KACAX,GAAuB,IACtB,OAeN,CAACtC,EAAWhJ,EAAcqL,EAAqBnB,IAGlD,MAyDMiC,EAAiBA,KACrB,GAAIhD,EAAatE,OAAS,GAAI,CAC5B,MAAMuH,EAAQjD,EAAatE,OAAS,EAChCrB,KAAKmC,OAAOwD,EAAaxQ,IAAI0T,GAAKA,EAAE9S,KAAO,EAC3C,EACJ6P,EAAgB,IAAID,EAAc,CAAE5P,GAAI6S,EAAOtQ,KAAM,QAuCnDwQ,EAAiBnH,UACrBrC,QAAQC,IAAI,gCACZD,QAAQC,IAAI,iBAAkBxC,GAE9BsJ,GAAa,GACbyB,GAAuB,GAEvB,IAEE,IAAK,IAAI1F,EAAI,EAAGA,GAAK,IAAKA,GAAK,GAC7BmE,EAAmBnE,SACb,IAAI5M,QAAQC,GAAW+S,WAAW/S,EAAS,MAInD0Q,EAAkB,GAGlB1M,EAAaiI,uBAAuB,gBAG9BqH,KAGNjC,EAAsB3D,IAAI,IACrBA,EACHyD,OAAQ,KAIVX,EAAkB,MAGlB,MAAMpF,EAAoBb,KAAKoB,MAAMpB,KAAKC,SAAW1D,EAAQ8E,QAC7DwE,EAAsBhF,SAGhB,IAAIrL,QAAQC,GAAW+S,WAAW/S,EAAS,MAGjDgQ,EAAa,WAGb+C,WAAW,KACTlJ,QAAQC,IAAI,+CACZkJ,KACAX,GAAuB,IACtB,KAEH,MAAO5E,GACP5D,QAAQ4D,MAAM,wCAAuCA,GACtD,QACCmD,GAAa,KAKX0C,GAAmBpH,gBACK/E,KAA5B,MACMoM,EAAY,GAGZC,EAAqB/S,OAAOgT,OAAOnM,GAAewH,OAAO4E,GAAYA,GAAU9H,OAErF/B,QAAQC,IAAI,2CAGZ,MACM6J,EAAmBpJ,KAAKoB,MADP,GAC8B6H,GAC/CI,EAFiB,GAEiBJ,EAExC,IAAIK,EAAY,EAEhB,GAAIvM,EAAc1E,YAAa,CAC7B,MAAMkR,EAAYH,GAAoBE,EAAYD,EAAiB,EAAI,GACvE,IAAK,IAAIjH,EAAI,EAAGA,EAAImH,EAAWnH,IAC7B4G,EAAU3J,KAAK,CAAEsB,KAAM,6BAEzB2I,IAGF,GAAIvM,EAAcxE,eAAgB,CAChC,MAAMgR,EAAYH,GAAoBE,EAAYD,EAAiB,EAAI,GACvE,IAAK,IAAIjH,EAAI,EAAGA,EAAImH,EAAWnH,IAC7B4G,EAAU3J,KAAK,CAAEsB,KAAM,gCAEzB2I,IAGF,GAAIvM,EAAcvE,SAAU,CAC1B,MAAM+Q,EAAYH,GAAoBE,EAAYD,EAAiB,EAAI,GACvE,IAAK,IAAIjH,EAAI,EAAGA,EAAImH,EAAWnH,IAC7B4G,EAAU3J,KAAK,CAAEsB,KAAM,0BAEzB2I,IAIF,MAAME,EAAYR,EAAUjJ,KAAK,IAAMC,KAAKC,SAAW,IAGvD0G,EAAmBxD,IAAI,IAClBA,EACHyD,OAAQ4C,KAGVlK,QAAQC,IAAI,2BAA4BiK,EAAUnI,OAAQ,WAC1D/B,QAAQC,IAAI,wBAAyB0J,GACrC3J,QAAQC,IAAI,2BAA4BiK,EAAUjF,OAAOkF,GAAKA,EAAE9I,KAAK+I,WAAW,kBAAkBrI,QAClG/B,QAAQC,IAAI,kBAAmBiK,EAAUjF,OAAOkF,IAAMA,EAAE9I,KAAK+I,WAAW,kBAAkBrI,SAkB5FM,eAAe/E,KACb,IAEE,MAAM+M,EAAwB,iBAAiBrE,SAC/C,IAAIsE,EAGJ,IAIE,OAFAA,QAA4B,MAAO,KAAaD,GAChDrK,QAAQC,IAAI,oCAAoCoK,GACzCC,EAAoBC,QAC3B,MAAO3G,GACP5D,QAAQwK,KAAK,uCAAuCH,KAA0BzG,GAG9E,IAGE,OAFA0G,QAA4B,gCAC5BtK,QAAQC,IAAI,4CACLqK,EAAoBC,QAC3B,MAAOE,GACPzK,QAAQwK,KAAK,+CAAgDC,GAG7D,IAGE,OAFAH,QAA4B,gCAC5BtK,QAAQC,IAAI,4CACLqK,EAAoBC,QAC3B,MAAOG,GAEP,OADA1K,QAAQ4D,MAAM,iDAAkD8G,GACzD,MAIb,MAAO9G,GAEP,OADA5D,QAAQ4D,MAAM,0DAA2DA,GAClE,IAKX,MAiRM+G,GAA8BtI,iBAA6B,IAADuI,EAAAC,EAAAC,EAAA,IAArBC,EAASC,UAAAjJ,OAAA,QAAAkJ,IAAAD,UAAA,GAAAA,UAAA,GAAG,KACrD,MAAME,EAAaH,GAAa3D,EAC1BjH,EAAqB,OAAZjD,QAAY,IAAZA,OAAY,EAAZA,EAAczG,GAE7B,IAAK0J,EAAQ,OAEbH,QAAQC,IAAI,6CACZD,QAAQC,IAAI,UAAWE,GACvBH,QAAQC,IAAI,kBAAmB7C,GAC/B4C,QAAQC,IAAI,wBAAyB8K,GACrC/K,QAAQC,IAAI,uBAA0C,QAApB2K,EAAEM,EAAW/K,UAAO,IAAAyK,OAAA,EAAlBA,EAAoB7I,cAG5BzE,KAG5B,GAAe,WAAX6C,EAAqB,CACvB,MAAMgL,EAAcD,EAAW/K,GAC/B,IAAIiL,EAAQ7D,EAAmBpH,GAE/B,IAAKgL,GAAsC,IAAvBA,EAAYpJ,OAG9B,OAFA1E,EAAiB,CAAEgE,KAAM3K,EAAE+E,yBAC3BoL,EAAkBhD,GAAQA,EAAO,GAQnC,MAAMwH,EAAoBF,EAHNC,EAAQD,EAAYpJ,QAIxC,IAAIuJ,EAAaD,EAAkBhK,KAGnC,GAAIiK,EAAWlB,WAAW,iBAAkB,CAC1C,MAAMnH,EAAWqI,EAAWlK,QAAQ,gBAAiB,IAKrD,OAJApB,QAAQC,IAAI,2CAA4CgD,cAGlD9I,EAAawJ,kBAAkBV,GAKvC,GAAIqI,EAAWnG,SAAS,aAAc,CACpC,MAAMjB,EAAgBjH,EAAQE,GAC9B,IAAIoO,EAAetO,EAAQgI,OAAOd,GAAUA,IAAWD,GAEvD,GAAIqH,EAAaxJ,OAAS,EAAG,CAC3B,MACMyJ,EAAmBD,EADC7K,KAAKoB,MAAMpB,KAAKC,SAAW4K,EAAaxJ,SAElEuJ,EAAaA,EAAWlK,QAAQ,aAAcoK,QAE9CF,EAAaA,EAAWlK,QAAQ,aAAc,iBAalD,OARAuF,EAAkB0E,EAAkBhK,MAGpChE,EAAiB,CAAEgE,KAAMiK,SAGzBzE,EAAkBhD,GAAQA,EAAO,GAOnC,GAAI4D,EAAiB1F,OAAS,GAC1B4F,EAAqBxC,SAAS/H,IAC9ByK,EAAoB,EAAG,CAGzB,MAAM4D,EAAc/K,KAAKoB,MAAMpB,KAAKC,SAAW8G,EAAiB1F,QAC1D2J,EAAcjE,EAAiBgE,GAG/BE,EAAc,IAAIlE,GAaxB,OAZAkE,EAAYC,OAAOH,EAAa,GAChC/D,EAAoBiE,GAGpBtO,EAAiB,CAAEgE,KAAMqK,EAAYrK,OAGrCyG,EAAqBjE,GAAQA,EAAO,QAGpCgD,EAAkBhD,GAAQA,EAAO,GAOnC,GADA7D,QAAQC,IAAI,gCACR9F,EAAakJ,sBAAsBjG,EAAgB+C,GAAS,CAC9DH,QAAQC,IAAI,6BAGZ,MAAM4L,EAAiB1R,EAAauJ,oBAAoBtG,EAAgB+C,GAIxE,GAHAH,QAAQC,IAAI,qBAAsB4L,GAG9BA,EAGF,OAFA7L,QAAQC,IAAI,yBAA0B4L,cAChC1R,EAAawJ,kBAAkBkI,GAKzC,MAAMV,EAAcD,EAAW/K,GAC/B,IAAIiL,EAAQ7D,EAAmBpH,GAO/B,GALAH,QAAQC,IAAI,yCACZD,QAAQC,IAAI,sBAAkC,OAAXkL,QAAW,IAAXA,OAAW,EAAXA,EAAapJ,QAChD/B,QAAQC,IAAI,SAAUmL,IAGjBD,GAAsC,IAAvBA,EAAYpJ,OAAc,CAI5C,GAHA/B,QAAQC,IAAIvJ,EAAEuF,YAAYO,iBAGX,iBAAX2D,EAA2B,CAE7B,MAAM2L,EAAgB,CACpB,CAAEzK,KAAM3K,EAAE+E,mBACV,CAAE4F,KAAM3K,EAAE+E,mBACV,CAAE4F,KAAM3K,EAAE+E,oBAGZ,GAAIqQ,EAAc/J,OAAS,EAAG,CAC5B,MAAM0J,EAAc/K,KAAKoB,MAAMpB,KAAKC,SAAWmL,EAAc/J,QAC7D1E,EAAiB,CAAEgE,KAAMyK,EAAcL,GAAapK,YAEpDhE,EAAiB,CAAEgE,KAAM3K,EAAE+E,yBAK7B4B,EAAiB,CAAEgE,KAAM3K,EAAE+E,oBAM7B,YAFAoL,EAAkBhD,GAAQA,EAAO,GAMnC,IAAIkI,EAAgBX,EAAQD,EAAYpJ,OAGxC,GAAuB,OAAnB2E,EAAyB,CAE3B,IAAIsF,EAAW,EACXC,EAAad,EAAYY,GAAe1K,KAE5C,KAAO4K,IAAevF,GAAkBsF,EAAW,GAAKb,EAAYpJ,OAAS,GAE3EqJ,GAASA,EAAQ,GAAKD,EAAYpJ,OAClCgK,EAAgBX,EAChBa,EAAad,EAAYY,GAAe1K,KACxC2K,IAIED,IAAkBxE,EAAmBpH,IACvCqH,EAAsB3D,IAAI,IACrBA,EACH,CAAC1D,GAAS4L,KAMhB,IAAIT,EAAaH,EAAYY,GAAe1K,KAO5C,GALArB,QAAQC,IAAI,iCACZD,QAAQC,IAAI,iBAAkB8L,GAC9B/L,QAAQC,IAAI,cAAyB,QAAZ4K,EAAES,SAAU,IAAAT,OAAA,EAAVA,EAAYzF,UAAU,EAAG,MAGhDkG,EAAWnG,SAAS,aAAc,CAEpC,MAAMjB,EAAgBjH,EAAQE,GAG9B,IAAIoO,EAAetO,EAAQgI,OAAOd,GAAUA,IAAWD,GAEvD,GAAIqH,EAAaxJ,OAAS,EAAG,CAE3B,MACMyJ,EAAmBD,EADC7K,KAAKoB,MAAMpB,KAAKC,SAAW4K,EAAaxJ,SAIlEuJ,EAAaA,EAAWlK,QAAQ,aAAcoK,QAG9CF,EAAaA,EAAWlK,QAAQ,aAAc,iBAKlD,GAAIkK,EAAWnG,SAAS,KAAM,CAE5B,MAAM+G,EAAuB,oCACvBC,EAAQb,EAAWa,MAAMD,GAE/B,GAAIC,EAAO,CACT,MAAMC,EAAeD,EAAM,GAGrBE,EAAoB3V,EAAEgF,oBAAoBC,UAC9C+E,KAAKoB,MAAMpB,KAAKC,SAAWjK,EAAEgF,oBAAoBC,UAAUoG,SAC3DX,QAAQ,UAAWgL,GAGrBd,EAAaA,EAAWlK,QAAQ,sCAAoCiL,QAInE,CACH,MAAMC,EAAe,yDACfH,EAAQb,EAAWa,MAAMG,GAE/B,GAAIH,EAAO,CACT,MAAMC,EAAeD,EAAM,GAGrBI,EAAY7V,EAAEgF,oBAAoBE,WACtC8E,KAAKoB,MAAMpB,KAAKC,SAAWjK,EAAEgF,oBAAoBE,WAAWmG,SAC5DX,QAAQ,UAAWgL,GAGrBd,EAAaA,EAAWlK,QAAQkL,EAAc,IAAIC,IAKtD5F,EAAkBwE,EAAYY,GAAe1K,MAG7ChE,EAAiB,CAAEgE,KAAMiK,IAEzBtL,QAAQC,IAAI,kCACZD,QAAQC,IAAI,oBAA+B,QAAZ6K,EAAEQ,SAAU,IAAAR,OAAA,EAAVA,EAAY1F,UAAU,EAAG,MAG1DyB,EAAkBhD,GAAQA,EAAO,IAI7BsF,GAAsBA,IAAMwB,GAA4B,MAGxD6B,GAAW,WAAiC,IAAhCC,EAAkBzB,UAAAjJ,OAAA,QAAAkJ,IAAAD,UAAA,IAAAA,UAAA,GAClC,MAAM7K,EAAqB,OAAZjD,QAAY,IAAZA,OAAY,EAAZA,EAAczG,GAS7B,GAPAuJ,QAAQC,IAAI,0BACZD,QAAQC,IAAI,sBAAuBwM,GACnCzM,QAAQC,IAAI,qBAAsB9F,EAAauD,mBAC/CsC,QAAQC,IAAI,kBAAmB7C,GAC/B4C,QAAQC,IAAI,UAAWE,GAGnB/C,GAAkBG,GAOpB,OALAyK,GAAqB,GACrBW,aAAa+D,QAAQ,oBAAqB,aAG1CvG,EAAa,YAaf,GARKhM,EAAauD,oBAAqB+O,GACrCjF,EAAsB3D,IAAI,IACrBA,EACH,CAAC1D,GAAS0D,EAAK1D,GAAU,KAKzBlD,EAAQ8E,QAAU,EACpBmH,WAAW,KACTC,MACC,QAHL,CASA,IAAKhP,EAAauD,mBAAqB+O,EAAoB,CAEzD,IAAIE,EACJ,GACEA,EAAkBjM,KAAKoB,MAAMpB,KAAKC,SAAW1D,EAAQ8E,cAC9C4K,IAAoBxP,GAE7BoJ,EAAsBoG,GAIxBzD,WAAW,KACTC,MACC,MA2CCyD,GAAYA,KAChBzG,EAAa,WACbC,EAAW,IACXE,EAAgB,CAAC,CAAE7P,GAAI,EAAGuC,KAAM,MAChCuN,EAAsB,GACtBlJ,EAAiB,MACjBoJ,EAAgB,MAChBE,EAAkB,MAClBE,EAAkB,GAClB2B,GAAuB,GACvB5B,EAAiB,CACf7N,aAAa,EACbE,gBAAgB,EAChBC,UAAU,IAIZwO,EAAoB,IACpBE,EAAwB,IACxBE,EAAqB,IAsCvB,MAAO,CAELvK,qBA5iC2B,GA6iC3B4E,kCAAmChI,EAAagI,kCAGhD6D,WACAtP,IACAwP,YACAjJ,UACAoJ,eACAlJ,qBACAqJ,gBACAtJ,eACA4J,YACAE,kBACAE,mBACAa,oBACAE,UACAE,wBACAE,sBACAjL,iBAGAK,gBAGAC,kBAAmBvD,EAAauD,kBAChCG,kBAAmB1D,EAAa0D,kBAChC8B,SAAUxF,EAAawF,SACvBxB,iBAAkBhE,EAAagE,iBAC/BI,uBAAwBpE,EAAaoE,uBACrCE,iBAAkBtE,EAAasE,iBAC/BE,eAAgBxE,EAAawE,eAC7BM,sBAAuB9E,EAAa8E,sBACpCI,cAAelF,EAAakF,cAC5BE,aAAcpF,EAAaoF,aAC3BE,sBAAuBtF,EAAasF,sBAGpCoN,eA/9BsBC,IACtB,GAAI/V,EAAa+V,KACf7G,EAAY6G,GACZnE,aAAa+D,QAAQ,WAAYI,GAG7B5P,GAAgBgK,GAAoB,GAAG,CAEzC,MAAM/G,EAASjD,EAAazG,GACtBsW,EAAWhW,EAAa+V,GAAa7S,MACrC+S,EAAeD,EAASE,UAAUC,GAAQA,EAAKzW,KAAO0J,GAExD6M,GAAgB,IAClB7F,EAAoB6F,GACpBvG,EAAgBsG,EAASC,OAk9B/BG,qBA38B2BA,KAC3BhH,EAAa,sBA28BbiH,iBAv8BuBA,KAGrBjH,EADE4B,IAAsBE,EACX,UAEA,gBAm8BfoB,iBACAgE,iBAh6BuBA,CAAC5W,EAAIuC,KAC5BsN,EACED,EAAaxQ,IAAIyX,GACfA,EAAM7W,KAAOA,EAAK,IAAK6W,EAAOtU,QAASsU,KA85B3CC,kBAx5ByB9W,IACrB4P,EAAatE,OAAS,GACxBuE,EAAgBD,EAAapB,OAAOqI,GAASA,EAAM7W,KAAOA,KAu5B5D+W,UAl5BgBA,KAEhB,MAAMC,EAAepH,EAClBpB,OAAOqI,GAA+B,KAAtBA,EAAMtU,KAAK0U,QAC3B7X,IAAIyX,GAASA,EAAMtU,KAAK0U,QAEvBD,EAAa1L,OAAS,EACxB4L,MAAMjX,EAAEuB,wBAIVmO,EAAWqH,GAGXtH,EAAa,mBAq4BbyH,eAhxBqBA,CAACvX,EAAGI,EAAI2U,KAC7B,GAAc,UAAV/U,EAAEwX,IACJ,GAAIzC,IAAU/E,EAAatE,OAAS,EAElCsH,QACK,CAEL,MAAMyE,EAAYC,SAASC,eAAe,iBAAgB5C,EAAQ,IAC9D0C,GAAWA,EAAUG,UAywB7BC,WA1tBiB7L,UAOjB,GANArC,QAAQC,IAAI,4BACZD,QAAQC,IAAI,iBAAkBiN,EAAKzW,IAEnCgQ,EAAgByG,GAGA,WAAZA,EAAKzW,GAQP,OANAmQ,EAAiB,CACf7N,aAAa,EACbE,gBAAgB,EAChBC,UAAU,SAEZiN,EAAa,iBAIfY,GAAa,GACbyB,GAAuB,GAEvB,IAAK,IAAD2F,EAAAC,EAAAC,EAAAC,EAEF,MAAMxN,QAAsBxD,KAG5B,IAAK,IAAIwF,EAAI,EAAGA,GAAK,IAAKA,GAAK,GAC7BmE,EAAmBnE,SACb,IAAI5M,QAAQC,GAAW+S,WAAW/S,EAAS,MAUnD,GANA0Q,EAAkB,GAGlB1M,EAAaiI,uBAAuB8K,EAAKzW,IAGrCqK,EAAcyN,cAAgBzN,EAAcyN,aAAaxM,OAAS,EAAG,CAEvE,MAAMyM,EAAuB,IAAI1N,EAAcyN,cAC5C9N,KAAK,IAAMC,KAAKC,SAAW,IAC3BO,MAAM,EAAG,IAEZwG,EAAoB8G,GAGpB,MAAMlM,EAAY,GAIZI,EAAgB,EAEhBC,EADcpF,GACiBmF,EAI/BE,EAAWlC,KAAKoB,MAAMa,EAAiB,GAGvCQ,EAAa,EAGnB,IAAK,IAAIL,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAE1B,MAAMC,EAAeL,EAAiBI,EAAIF,EAIpCQ,EAAY1C,KAAKmC,IAAI,EAAGnC,KAAK+B,IAAIG,EAAWO,EAAY,IACxDH,EAAetC,KAAKoB,MAAMpB,KAAKC,SAAWyC,GAEhDd,EAAUvC,KAAKgD,EAAeC,GAGhC4E,EAAwBtF,GACxBwF,EAAqB,GAIvB,IAAI2G,EAAqB,GAGzB,GAAgB,iBAAZvB,EAAKzW,GAAuB,CAE9B,IAAIiY,EAAiB,GACjBC,EAAkB,GAClBC,EAAgB,GAChBC,EAAe,GACfC,EAAqB,GAGrBhO,EAAcV,SAAWU,EAAcV,QAAQ2B,OAAS,IAC1D2M,EAAiB,IAAI5N,EAAcV,UAGjCU,EAAcT,UAAYS,EAAcT,SAAS0B,OAAS,IAC5D4M,EAAkB,IAAI7N,EAAcT,WAGlCS,EAAcP,QAAUO,EAAcP,OAAOwB,OAAS,IACxD6M,EAAgB,IAAI9N,EAAcP,SAGhCO,EAAcR,OAASQ,EAAcR,MAAMyB,OAAS,IACtD8M,EAAe,IAAI/N,EAAcR,QAI/BQ,EAAc3G,cAEhBvD,OAAOgT,OAAO9I,EAAc3G,cAAc4U,QAAQC,IACxB,kBAAbA,GAAyBA,EAAS3N,MAC3CyN,EAAmB/O,KAAK,CAAEsB,KAAM2N,EAAS3N,OAInB,kBAAb2N,IACLA,EAAS5O,SAAW6O,MAAMC,QAAQF,EAAS5O,WAC7C0O,EAAqB,IAAIA,KAAuBE,EAAS5O,QAAQvK,IAAIwL,IAAI,CAAOA,YAE9E2N,EAAS3O,UAAY4O,MAAMC,QAAQF,EAAS3O,YAC9CyO,EAAqB,IAAIA,KAAuBE,EAAS3O,SAASxK,IAAIwL,IAAI,CAAOA,YAE/E2N,EAAS1O,OAAS2O,MAAMC,QAAQF,EAAS1O,SAC3CwO,EAAqB,IAAIA,KAAuBE,EAAS1O,MAAMzK,IAAIwL,IAAI,CAAOA,YAE5E2N,EAASG,OAASF,MAAMC,QAAQF,EAASG,SAC3CL,EAAqB,IAAIA,KAAuBE,EAASG,MAAMtZ,IAAIwL,IAAI,CAAOA,YAE5E2N,EAASI,SAAWH,MAAMC,QAAQF,EAASI,WAC7CN,EAAqB,IAAIA,KAAuBE,EAASI,QAAQvZ,IAAIwL,IAAI,CAAOA,eAOxF,MAAMgO,EAAc,CAClBjP,QAAS,CAAEiB,KAAM3K,EAAE+E,mBACnB4E,SAAU,CAAEgB,KAAM3K,EAAE+E,mBACpB8E,OAAQ,CAAEc,KAAM3K,EAAE+E,mBAClB6E,MAAO,CAAEe,KAAM3K,EAAE+E,oBAGfiT,EAAe3M,OAAS,GAAKsN,EAAYjP,UAC3CsO,EAAiB,IAAIA,KAAmBW,EAAYjP,UAGlDuO,EAAgB5M,OAAS,GAAKsN,EAAYhP,WAC5CsO,EAAkB,IAAIA,KAAoBU,EAAYhP,WAGpDuO,EAAc7M,OAAS,GAAKsN,EAAY9O,SAC1CqO,EAAgB,IAAIA,KAAkBS,EAAY9O,SAGhDsO,EAAa9M,OAAS,GAAKsN,EAAY/O,QACzCuO,EAAe,IAAIA,KAAiBQ,EAAY/O,QAIlDoO,EAAiBA,EAAejO,KAAK,IAAMC,KAAKC,SAAW,IAC3DgO,EAAkBA,EAAgBlO,KAAK,IAAMC,KAAKC,SAAW,IAC7DiO,EAAgBA,EAAcnO,KAAK,IAAMC,KAAKC,SAAW,IACzDkO,EAAeA,EAAapO,KAAK,IAAMC,KAAKC,SAAW,IACvDmO,EAAqBA,EAAmBrO,KAAK,IAAMC,KAAKC,SAAW,IAGnE,MAAM2O,EAAiB,GAGjBC,EAAyBb,EAAexN,MAAM,EAAGR,KAAK+B,IAAI6M,EAAgBZ,EAAe3M,SACzFyN,EAA0Bb,EAAgBzN,MAAM,EAAGR,KAAK+B,IAAI6M,EAAgBX,EAAgB5M,SAC5F0N,EAAwBb,EAAc1N,MAAM,EAAGR,KAAK+B,IAAI6M,EAAgBV,EAAc7M,SACtF2N,EAAuBb,EAAa3N,MAAM,EAAGR,KAAK+B,IAAI6M,EAAgBT,EAAa9M,SACnF4N,EAA6Bb,EAAmB5N,MAAM,EAAGR,KAAK+B,IAAI6M,EAAgBR,EAAmB/M,SAYrG6N,EATkB,IACnBL,KACAC,KACAC,KACAC,KACAC,GAImClP,KAAK,IAAMC,KAAKC,SAAW,IAEnEX,QAAQC,IAAIvJ,EAAEuF,YAAYC,mBAC1B8D,QAAQC,IAAIvJ,EAAEuF,YAAYE,aAAaiF,QAAQ,UAAWmO,EAAuBxN,SACjF/B,QAAQC,IAAIvJ,EAAEuF,YAAYG,cAAcgF,QAAQ,UAAWoO,EAAwBzN,SACnF/B,QAAQC,IAAIvJ,EAAEuF,YAAYI,YAAY+E,QAAQ,UAAWqO,EAAsB1N,SAC/E/B,QAAQC,IAAIvJ,EAAEuF,YAAYK,WAAW8E,QAAQ,UAAWsO,EAAqB3N,SAC7E/B,QAAQC,IAAI,kBAAoB0P,EAA2B5N,OAAS,WACpE/B,QAAQC,IAAIvJ,EAAEuF,YAAYM,WAAW6E,QAAQ,UAAWwO,EAAgB7N,SAExE0M,EAAqB,IAChBrH,EACH5G,aAAcoP,OAIb,CAEH,MAAMC,EAAuB/O,EAAcoM,EAAKzW,KAAO,GAEvD,GAAIoZ,EAAqB9N,OAAS,EAAG,CAEnC,MAAM+N,EAAwB,IAAID,GAC/BpP,KAAK,IAAMC,KAAKC,SAAW,IAC3BO,MAAM,EAAGR,KAAKmC,IAAItF,IAA0B,KAE/CkR,EAAqB,IAChBrH,EACH,CAAC8F,EAAKzW,IAAKqZ,QAIbrB,EAAqB,IAChBrH,EACH,CAAC8F,EAAKzW,IAAK,IAKjBuJ,QAAQC,IAAI,oCACZD,QAAQC,IAAI,QAASiN,EAAKzW,IAC1BuJ,QAAQC,IAAI,iBAA6C,QAA7BkO,EAAEM,EAAmBvB,EAAKzW,WAAG,IAAA0X,OAAA,EAA3BA,EAA6BpM,QAC3D/B,QAAQC,IAAI,gBAA4C,QAA7BmO,EAAEK,EAAmBvB,EAAKzW,WAAG,IAAA2X,GAAK,QAALC,EAA3BD,EAA8B,UAAE,IAAAC,GAAM,QAANC,EAAhCD,EAAkChN,YAAI,IAAAiN,OAAX,EAA3BA,EAAwClJ,UAAU,EAAG,KAGlFiC,EAAmBoH,GAGnBjH,EAAsB3D,IAAI,IACrBA,EACH,CAACqJ,EAAKzW,IAAK,KAIbkQ,EAAkB,MAGlB,MAAMpF,EAAoBb,KAAKoB,MAAMpB,KAAKC,SAAW1D,EAAQ8E,QAC7DwE,EAAsBhF,SAGhB,IAAIrL,QAAQC,GAAW+S,WAAW/S,EAAS,MAGjDgQ,EAAa,WAGb+C,WAAW,KAAO,IAAD6G,EACf/P,QAAQC,IAAI,yCACZD,QAAQC,IAAI,cAA0C,QAA7B8P,EAAEtB,EAAmBvB,EAAKzW,WAAG,IAAAsZ,OAAA,EAA3BA,EAA6BhO,QACpD0M,EAAmBvB,EAAKzW,KAAOgY,EAAmBvB,EAAKzW,IAAIsL,OAAS,IACtE/B,QAAQC,IAAI,wCACZ0K,GAA4B8D,GAC5BjG,GAAuB,KAExB,KAEH,MAAO5E,GACP5D,QAAQ4D,MAAM,UAAWA,GAC1B,QACCmD,GAAa,KA+cfyF,YACAjH,yBAlJ+BA,KAC/BpL,EAAaoL,yBAAyBiH,KAkJtCwD,OA9IaA,KACb,OAAQ9J,GACN,IAAK,gBACHC,EAAa,iBACb,MACF,IAAK,cACHA,EAAa,WACb,MACF,IAAK,gBACHA,EAAa,eACb,MACF,IAAK,UACHA,EAAa,iBACb,MACF,IAAK,WAGDA,EADE4B,IAAsBE,EACX,UAEA,iBAEf,MACF,IAAK,UAGL,IAAK,oBACH9B,EAAa,aAqHjByG,aACAqD,oBAvF2B/K,IAC3BkD,EAAyBlD,IAuFzBgL,eAnFqBA,KAChB/H,IAELG,GAAuB,GAGvBY,WAAW,KAEThB,GAAW,GACXS,aAAa+D,QAAQ,UAAW,QAEhCpE,GAAuB,GACvBF,EAAyB,MAGzBjC,EAAa,YACZ,OAoEHgK,kBAhEwBA,KACxBxH,aAAayH,WAAW,WACxBzH,aAAayH,WAAW,qBACxBlI,GAAW,GACXF,GAAqB,GACrB4E,MA8DAyD,oBA78B2BpN,IAC3B2D,EAAiB/C,IAAI,IAChBA,EACH,CAACZ,IAAYY,EAAKZ,OA28BpBqN,yBAv8B+BA,KAEN1Z,OAAOgT,OAAOnM,GAAe8S,KAAK1G,GAAYA,GAQvEL,IALEmE,MAAMjX,EAAE6B,cAAcM,uBAq8BxBmL,sBAAuB7J,EAAa6J,sBACpCsB,sBAAuBnL,EAAamL,sBACpC5L,WAAYS,EAAaT,WAGzByN,sBACAhB,iBC5/BWqK,MAhJiBC,IAAgC,IAA/B,sBAAEhR,GAAuBgR,EACxD,MAAOpR,EAAeC,GAAoB1B,oBAAS,IAC5C2B,EAAcC,GAAmB5B,mBAAS,IAC3C8S,EAAmBC,iBAAO,MAuChC,OARAlI,oBAAU,IACD,KACDiI,EAAiBE,SACnB9K,cAAc4K,EAAiBE,UAGlC,IAGDC,IAAAC,cAAA,OAAKC,UAAU,6BACX1R,EAwBAwR,IAAAC,cAAA,OAAKE,MAAO,CACVC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,IAAK,SAELP,IAAAC,cAAA,OAAKE,MAAO,CACVK,MAAO,QACPC,OAAQ,QACRC,aAAc,MACdC,gBAAiBjS,EAAe,GAAK,UAAYA,EAAe,EAAI,UAAY,UAChF0R,QAAS,OACTE,WAAY,SACZM,eAAgB,SAChBC,SAAU,OACVC,WAAY,OACZzX,MAAO,QACP0X,UAAW,YAAYrS,EAAe,GAAK,UAAYA,EAAe,EAAI,UAAY,cACtFsS,UAAWtS,GAAgB,EAAI,oBAAsB,SAEpDA,GAEHsR,IAAAC,cAAA,KAAGE,MAAO,CACRU,SAAU,OACVxX,MAAO,UACP4X,UAAW,WACV,oBACiBvS,EAAa,MAlDnCsR,IAAAC,cAAA,UACEiB,QAxCWrY,KACjBsG,QAAQC,IAAI,kBAGZT,EAAgB,IAChBF,GAAiB,GAGboR,EAAiBE,UACnB9K,cAAc4K,EAAiBE,SAC/BF,EAAiBE,QAAU,MAI7BF,EAAiBE,QAAUhL,YAAY,KACrCpG,EAAgBqE,GACVA,GAAQ,GACViC,cAAc4K,EAAiBE,SAC/BF,EAAiBE,QAAU,KAC3BtR,GAAiB,GACV,GAEFuE,EAAO,IAEf,MAiBGmN,MAAO,CACLQ,gBAAiB,UACjBtX,MAAO,QACP8X,OAAQ,OACRT,aAAc,MACdF,MAAO,OACPC,OAAQ,OACRI,SAAU,OACVO,OAAQ,UACRhB,QAAS,OACTE,WAAY,SACZM,eAAgB,SAChBG,UAAW,qCACXM,WAAY,YAEdC,YAAc9b,GAAMA,EAAE+b,OAAOpB,MAAMqB,UAAY,aAC/CC,WAAajc,GAAMA,EAAE+b,OAAOpB,MAAMqB,UAAY,YAC/C,gBAoCF5S,GACCoR,IAAAC,cAAA,OAAKE,MAAO,CACVuB,UAAW,OACXC,QAAS,OACThB,gBAAiB,YACjBD,aAAc,OACdO,UAAW,WAEXjB,IAAAC,cAAA,KAAGE,MAAO,CAAEU,SAAU,OAAQC,WAAY,SACvClS,KAKLJ,GAAkC,IAAjBE,GACjBsR,IAAAC,cAAA,KAAGE,MAAO,CACRU,SAAU,OACVxX,MAAO,UACPyX,WAAY,OACZG,UAAW,WACV,uCAKLjB,IAAAC,cAAA,SAAO2B,IAAI,QAAQ,0X,gBC4+CVC,MAhmDC1V,IACd,MAAM,EAEJtG,EAAC,SACDsP,EAAQ,UAGRE,EAAS,QACTjJ,EAAO,aACPoJ,EAAY,mBACZlJ,EAAkB,cAClBqJ,EAAa,aACbtJ,EAAY,UACZ4J,EAAS,iBACTI,EAAgB,SAGhB1J,EAAQ,cACRC,EAAa,kBAGbC,EAAiB,kBACjBG,EAAiB,SACjB8B,EAAQ,iBACRxB,EAAgB,uBAChBI,EAAsB,iBACtBE,EAAgB,eAChBE,EAAc,sBAGdM,EAAqB,cAGrBI,EAAa,aACbE,EAAY,sBACZE,EAAqB,kBAGrBsI,EAAiB,QACjBE,EAAO,sBACPE,EAAqB,oBACrBE,EAAmB,eAGnBwE,EAAc,qBACdM,EAAoB,iBACpBC,EAAgB,eAChB/D,EAAc,iBACdgE,EAAgB,kBAChBE,EAAiB,UACjBC,EAAS,eACTI,EAAc,WACdM,EAAU,SACV1B,EAAQ,yBACRjH,EAAwB,sBACxBvB,EAAqB,OACrBgM,EAAM,kBACNG,EAAiB,sBACjB7K,EAAqB,oBAGrB+K,EAAmB,yBACnBC,EAAwB,WAGxB5W,EAAU,oBAGVyN,EAAmB,oBACnB8I,EAAmB,eACnBC,EAAc,qBACd3S,GACEP,EAGJ,OACE6T,IAAAC,cAAA,OAAKC,UAAU,iBAEE,YAAd7K,GACC2K,IAAAC,cAAA,OAAKC,UAAU,wBAAwBC,MAAO,CAC5CQ,gBAAiB,UACjBtX,MAAO,UACP+W,QAAS,OACTC,cAAe,SACfO,eAAgB,SAChBN,WAAY,SACZG,OAAQ,QACRkB,QAAS,SAET3B,IAAAC,cAAA,OAAKE,MAAO,CACVc,UAAW,SACXa,SAAU,UAEV9B,IAAAC,cAAA,MAAIE,MAAO,CACTU,SAAU,OACVkB,aAAc,OACdjB,WAAY,SACVjb,EAAEO,SACN4Z,IAAAC,cAAA,KAAGE,MAAO,CACRU,SAAU,OACVkB,aAAc,OACd1Y,MAAO,UACP2Y,WAAY,QACVnc,EAAEQ,gBAEN2Z,IAAAC,cAAA,UACEiB,QAAS3E,EACT4D,MAAO,CACLK,MAAO,OACPG,gBAAiB,UACjBtX,MAAO,UACP8X,OAAQ,OACRT,aAAc,OACdiB,QAAS,OACTd,SAAU,OACVC,WAAY,OACZM,OAAQ,UACRW,aAAc,SAGflc,EAAES,aAGL0Z,IAAAC,cAAA,UACEiB,QAAS5E,EACT6D,MAAO,CACLK,MAAO,OACPG,gBAAiB,cACjBtX,MAAO,UACP8X,OAAQ,oBACRT,aAAc,OACdiB,QAAS,OACTd,SAAU,OACVC,WAAY,OACZM,OAAQ,YAGI,OAAbjM,EAAoB,oCACP,OAAbA,EAAoB,mCACP,OAAbA,EAAoB,uCACpB,mCAAe,MAAiB,OAAbA,EAAoB,gBACR,OAAbA,EAAoB,kBACP,OAAbA,EAAoB,oBACpB,qBAIrB6K,IAAAC,cAAA,OAAKE,MAAO,CAAEuB,UAAW,OAAQO,QAAS,KACxCjC,IAAAC,cAAA,UACEiB,QAAS5B,EACTa,MAAO,CACL+B,WAAY,OACZf,OAAQ,iBACR9X,MAAO,OACPsY,QAAS,WACTd,SAAU,OACVH,aAAc,MACdU,OAAQ,YAGTvb,EAAEe,gBAQE,kBAAdyO,GACC2K,IAAAC,cAAA,OAAKC,UAAU,+BAA+BC,MAAO,CACnDQ,gBAAiB,UACjBtX,MAAO,UACPsY,QAAS,aACTvB,QAAS,OACTC,cAAe,SACfI,OAAQ,UAERT,IAAAC,cAAA,OAAKE,MAAO,CACVC,QAAS,OACT+B,oBAAqB,gBACrB7B,WAAY,SACZqB,QAAS,SACTI,aAAc,SAEd/B,IAAAC,cAAA,OAAKE,MAAO,CAAEC,QAAS,OAAQQ,eAAgB,WAC7CZ,IAAAC,cAAA,UACEiB,QAAS/B,EACTgB,MAAO,CACL+B,WAAY,OACZf,OAAQ,OACR9X,MAAO,UACPwX,SAAU,OACVO,OAAQ,UACRO,QAAS,QAEZ,WAKH3B,IAAAC,cAAA,MAAIE,MAAO,CACTiC,OAAQ,EACRnB,UAAW,SACXH,WAAY,SACZD,SAAU,OACVwB,cAAe,QAEdxc,EAAE6B,cAAcC,OAGnBqY,IAAAC,cAAA,aAGFD,IAAAC,cAAA,OAAKE,MAAO,CACVmC,KAAM,EACNlC,QAAS,OACTC,cAAe,SACfsB,QAAS,SACTI,aAAc,SAEd/B,IAAAC,cAAA,KAAGE,MAAO,CACRU,SAAU,OACVxX,MAAO,UACP4X,UAAW,SACXc,aAAc,OACdC,WAAY,QAEXnc,EAAE6B,cAAcE,aAGnBoY,IAAAC,cAAA,OAAKE,MAAO,CACVC,QAAS,OACTC,cAAe,SACfE,IAAK,SAGLP,IAAAC,cAAA,OACEiB,QAASA,IAAM1B,EAAoB,eACnCW,MAAO,CACLQ,gBAAiB/T,EAAc1E,YAAc,YAAc,UAC3DiZ,OAAQvU,EAAc1E,YAAc,oBAAsB,wBAC1DwY,aAAc,OACdiB,QAAS,OACTvB,QAAS,OACTE,WAAY,SACZc,OAAQ,UACRC,WAAY,aAGdrB,IAAAC,cAAA,OAAKE,MAAO,CACVK,MAAO,OACPC,OAAQ,OACRU,OAAQ,oBACRT,aAAc,MACd6B,YAAa,OACbnC,QAAS,OACTE,WAAY,SACZM,eAAgB,SAChBD,gBAAiB/T,EAAc1E,YAAc,UAAY,gBAExD0E,EAAc1E,aACb8X,IAAAC,cAAA,QAAME,MAAO,CAAE9W,MAAO,UAAWwX,SAAU,SAAU,WAGzDb,IAAAC,cAAA,OAAKE,MAAO,CAAEmC,KAAM,IAClBtC,IAAAC,cAAA,MAAIE,MAAO,CACTU,SAAU,OACVC,WAAY,OACZsB,OAAQ,EACRL,aAAc,QAEblc,EAAE6B,cAAcO,MAAMC,YAAYC,MAErC6X,IAAAC,cAAA,KAAGE,MAAO,CACRU,SAAU,OACVxX,MAAO,UACP+Y,OAAQ,IAEPvc,EAAE6B,cAAcO,MAAMC,YAAYN,eAMzCoY,IAAAC,cAAA,OACEiB,QAASA,IAAM1B,EAAoB,kBACnCW,MAAO,CACLQ,gBAAiB/T,EAAcxE,eAAiB,YAAc,UAC9D+Y,OAAQvU,EAAcxE,eAAiB,oBAAsB,wBAC7DsY,aAAc,OACdiB,QAAS,OACTvB,QAAS,OACTE,WAAY,SACZc,OAAQ,UACRC,WAAY,aAGdrB,IAAAC,cAAA,OAAKE,MAAO,CACVK,MAAO,OACPC,OAAQ,OACRU,OAAQ,oBACRT,aAAc,MACd6B,YAAa,OACbnC,QAAS,OACTE,WAAY,SACZM,eAAgB,SAChBD,gBAAiB/T,EAAcxE,eAAiB,UAAY,gBAE3DwE,EAAcxE,gBACb4X,IAAAC,cAAA,QAAME,MAAO,CAAE9W,MAAO,UAAWwX,SAAU,SAAU,WAGzDb,IAAAC,cAAA,OAAKE,MAAO,CAAEmC,KAAM,IAClBtC,IAAAC,cAAA,MAAIE,MAAO,CACTU,SAAU,OACVC,WAAY,OACZsB,OAAQ,EACRL,aAAc,QAEblc,EAAE6B,cAAcO,MAAMG,eAAeD,MAExC6X,IAAAC,cAAA,KAAGE,MAAO,CACRU,SAAU,OACVxX,MAAO,UACP+Y,OAAQ,IAEPvc,EAAE6B,cAAcO,MAAMG,eAAeR,eAM5CoY,IAAAC,cAAA,OACEiB,QAASA,IAAM1B,EAAoB,YACnCW,MAAO,CACLQ,gBAAiB/T,EAAcvE,SAAW,YAAc,UACxD8Y,OAAQvU,EAAcvE,SAAW,oBAAsB,wBACvDqY,aAAc,OACdiB,QAAS,OACTvB,QAAS,OACTE,WAAY,SACZc,OAAQ,UACRC,WAAY,aAGdrB,IAAAC,cAAA,OAAKE,MAAO,CACVK,MAAO,OACPC,OAAQ,OACRU,OAAQ,oBACRT,aAAc,MACd6B,YAAa,OACbnC,QAAS,OACTE,WAAY,SACZM,eAAgB,SAChBD,gBAAiB/T,EAAcvE,SAAW,UAAY,gBAErDuE,EAAcvE,UACb2X,IAAAC,cAAA,QAAME,MAAO,CAAE9W,MAAO,UAAWwX,SAAU,SAAU,WAGzDb,IAAAC,cAAA,OAAKE,MAAO,CAAEmC,KAAM,IAClBtC,IAAAC,cAAA,MAAIE,MAAO,CACTU,SAAU,OACVC,WAAY,OACZsB,OAAQ,EACRL,aAAc,QAEblc,EAAE6B,cAAcO,MAAMI,SAASF,MAElC6X,IAAAC,cAAA,KAAGE,MAAO,CACRU,SAAU,OACVxX,MAAO,UACP+Y,OAAQ,IAEPvc,EAAE6B,cAAcO,MAAMI,SAAST,iBAO1CoY,IAAAC,cAAA,OAAKE,MAAO,CACVwB,QAAS,IACTtP,SAAU,QACVmQ,OAAQ,EACRC,KAAM,EACNC,MAAO,EACP/B,gBAAiB,cACjBgC,OAAQ,KAER3C,IAAAC,cAAA,UACEiB,QAASzB,EACTmD,UAAW7c,OAAOgT,OAAOnM,GAAe8S,KAAK1G,GAAYA,GACzDmH,MAAO,CACLK,MAAO,OACPG,gBAAiB5a,OAAOgT,OAAOnM,GAAe8S,KAAK1G,GAAYA,GAAY,UAAY,UACvF3P,MAAO,UACP8X,OAAQ,OACRT,aAAc,IACdiB,QAAS,OACTd,SAAU,OACVC,WAAY,OACZM,OAAQrb,OAAOgT,OAAOnM,GAAe8S,KAAK1G,GAAYA,GAAY,UAAY,cAC9EoH,QAAS,OACTE,WAAY,SACZM,eAAgB,SAChBL,IAAK,SAGPP,IAAAC,cAAA,QAAME,MAAO,CAAEU,SAAU,SAAU,UAAQ,IAAEhb,EAAE6B,cAAcG,kBAOtD,sBAAdwN,GACC2K,IAAAC,cAAA,OAAKC,UAAU,mCAAmCC,MAAO,CACvDQ,gBAAiB,UACjBtX,MAAO,UACPsY,QAAS,aACTvB,QAAS,OACTC,cAAe,SACfI,OAAQ,UAERT,IAAAC,cAAA,OAAKE,MAAO,CACVC,QAAS,OACT+B,oBAAqB,gBACrB7B,WAAY,SACZqB,QAAS,SACTI,aAAc,SAEd/B,IAAAC,cAAA,OAAKE,MAAO,CAAEC,QAAS,OAAQQ,eAAgB,WAC7CZ,IAAAC,cAAA,UACEiB,QAAS/B,EACTgB,MAAO,CACL+B,WAAY,OACZf,OAAQ,OACR9X,MAAO,UACPwX,SAAU,OACVO,OAAQ,UACRO,QAAS,QAEZ,WAKH3B,IAAAC,cAAA,MAAIE,MAAO,CACTiC,OAAQ,EACRnB,UAAW,SACXH,WAAY,SACZD,SAAU,OACVwB,cAAe,QAED,OAAblN,EAAoB,SACP,OAAbA,EAAoB,WACP,OAAbA,EAAoB,SACpB,WAGH6K,IAAAC,cAAA,aAGFD,IAAAC,cAAA,OAAKE,MAAO,CACVmC,KAAM,EACNlC,QAAS,OACTC,cAAe,SACfsB,QAAS,SACTI,aAAc,OACdc,UAAW,SAEX7C,IAAAC,cAAA,OAAKE,MAAO,CACVC,QAAS,OACTC,cAAe,SACfE,IAAK,OACLmB,UAAW,SAEX1B,IAAAC,cAAA,UACEiB,QAASA,IAAMlF,EAAe,MAC9BmE,MAAO,CACLQ,gBAA8B,OAAbxL,EAAoB,UAAY,UACjDgM,OAAQ,OACRT,aAAc,OACdiB,QAAS,OACTvB,QAAS,OACTC,cAAe,MACfC,WAAY,SACZC,IAAK,OACLa,OAAQ,YAGVpB,IAAAC,cAAA,QAAME,MAAO,CAAEU,SAAU,SAAU,4BACnCb,IAAAC,cAAA,OAAKE,MAAO,CACVc,UAAW,OACXqB,KAAM,IAENtC,IAAAC,cAAA,MAAIE,MAAO,CACTU,SAAU,OACVxX,MAAO,UACP+Y,OAAQ,EACRL,aAAc,QACb,YAGH/B,IAAAC,cAAA,KAAGE,MAAO,CACRU,SAAU,OACVxX,MAAO,UACP+Y,OAAQ,IACP,sBAIS,OAAbjN,GACC6K,IAAAC,cAAA,QAAME,MAAO,CAAEU,SAAU,OAAQxX,MAAO,YAAa,WAIzD2W,IAAAC,cAAA,UACEiB,QAASA,IAAMlF,EAAe,MAC9BmE,MAAO,CACLQ,gBAA8B,OAAbxL,EAAoB,UAAY,UACjDgM,OAAQ,OACRT,aAAc,OACdiB,QAAS,OACTvB,QAAS,OACTC,cAAe,MACfC,WAAY,SACZC,IAAK,OACLa,OAAQ,YAGVpB,IAAAC,cAAA,QAAME,MAAO,CAAEU,SAAU,SAAU,4BACnCb,IAAAC,cAAA,OAAKE,MAAO,CACVc,UAAW,OACXqB,KAAM,IAENtC,IAAAC,cAAA,MAAIE,MAAO,CACTU,SAAU,OACVxX,MAAO,UACP+Y,OAAQ,EACRL,aAAc,QACb,WAGH/B,IAAAC,cAAA,KAAGE,MAAO,CACRU,SAAU,OACVxX,MAAO,UACP+Y,OAAQ,IACP,oBAIS,OAAbjN,GACC6K,IAAAC,cAAA,QAAME,MAAO,CAAEU,SAAU,OAAQxX,MAAO,YAAa,WAKzD2W,IAAAC,cAAA,UACEiB,QAASA,IAAMlF,EAAe,MAC9BmE,MAAO,CACLQ,gBAA8B,OAAbxL,EAAoB,UAAY,UACjDgM,OAAQ,OACRT,aAAc,OACdiB,QAAS,OACTvB,QAAS,OACTC,cAAe,MACfC,WAAY,SACZC,IAAK,OACLa,OAAQ,YAGVpB,IAAAC,cAAA,QAAME,MAAO,CAAEU,SAAU,SAAU,4BACnCb,IAAAC,cAAA,OAAKE,MAAO,CACVc,UAAW,OACXqB,KAAM,IAENtC,IAAAC,cAAA,MAAIE,MAAO,CACTU,SAAU,OACVxX,MAAO,UACP+Y,OAAQ,EACRL,aAAc,QACb,eAGH/B,IAAAC,cAAA,KAAGE,MAAO,CACRU,SAAU,OACVxX,MAAO,UACP+Y,OAAQ,IACP,yBAIS,OAAbjN,GACC6K,IAAAC,cAAA,QAAME,MAAO,CAAEU,SAAU,OAAQxX,MAAO,YAAa,WAKzD2W,IAAAC,cAAA,UACEiB,QAASA,IAAMlF,EAAe,MAC9BmE,MAAO,CACLQ,gBAA8B,OAAbxL,EAAoB,UAAY,UACjDgM,OAAQ,OACRT,aAAc,OACdiB,QAAS,OACTvB,QAAS,OACTC,cAAe,MACfC,WAAY,SACZC,IAAK,OACLa,OAAQ,YAGVpB,IAAAC,cAAA,QAAME,MAAO,CAAEU,SAAU,SAAU,4BACnCb,IAAAC,cAAA,OAAKE,MAAO,CACVc,UAAW,OACXqB,KAAM,IAENtC,IAAAC,cAAA,MAAIE,MAAO,CACTU,SAAU,OACVxX,MAAO,UACP+Y,OAAQ,EACRL,aAAc,QACb,WAGH/B,IAAAC,cAAA,KAAGE,MAAO,CACRU,SAAU,OACVxX,MAAO,UACP+Y,OAAQ,IACP,wBAIS,OAAbjN,GACC6K,IAAAC,cAAA,QAAME,MAAO,CAAEU,SAAU,OAAQxX,MAAO,YAAa,aAM7D2W,IAAAC,cAAA,OAAKE,MAAO,CACVwB,QAAS,IACTtP,SAAU,QACVmQ,OAAQ,EACRC,KAAM,EACNC,MAAO,EACP/B,gBAAiB,cACjBgC,OAAQ,KAER3C,IAAAC,cAAA,UACEiB,QAAS/B,EACTgB,MAAO,CACLK,MAAO,OACPG,gBAAiB,UACjBtX,MAAO,UACP8X,OAAQ,OACRT,aAAc,IACdiB,QAAS,OACTd,SAAU,OACVC,WAAY,OACZM,OAAQ,YAGI,OAAbjM,EAAoB,WACP,OAAbA,EAAoB,UACP,OAAbA,EAAoB,YACpB,mBAOM,gBAAdE,GACC2K,IAAAC,cAAA,OAAKC,UAAU,6BAA6BC,MAAO,CACjDQ,gBAAiB,UACjBtX,MAAO,UACPsY,QAAS,IACTvB,QAAS,OACTC,cAAe,SACfI,OAAQ,UAERT,IAAAC,cAAA,OAAKE,MAAO,CACVC,QAAS,OACT+B,oBAAqB,gBACrB7B,WAAY,SACZqB,QAAS,SACTI,aAAc,SAEd/B,IAAAC,cAAA,OAAKE,MAAO,CAAEC,QAAS,OAAQQ,eAAgB,WAC7CZ,IAAAC,cAAA,UACEiB,QAAS/B,EACTgB,MAAO,CACL+B,WAAY,OACZf,OAAQ,OACR9X,MAAO,UACPwX,SAAU,OACVO,OAAQ,UACRO,QAAS,QAEZ,WAKH3B,IAAAC,cAAA,MAAIE,MAAO,CACTiC,OAAQ,EACRnB,UAAW,SACXH,WAAY,SACZD,SAAU,OACVwB,cAAe,QAEdxc,EAAEkB,oBAGLiZ,IAAAC,cAAA,YAAW,KAGbD,IAAAC,cAAA,OAAKE,MAAO,CACVmC,KAAM,EACNX,QAAS,IACTvB,QAAS,OACTC,cAAe,SACfC,WAAY,SACZwC,SAAU,OACVf,aAAc,SAEbvM,EAAaxQ,IAAI,CAACyX,EAAOlC,IACxByF,IAAAC,cAAA,OAAKjD,IAAKP,EAAM7W,GAAIua,MAAO,CACzBC,QAAS,OACTE,WAAY,SACZC,IAAK,OACLC,MAAO,OACPsB,SAAU,QACVC,aAAc,OACdJ,QAAS,WAET3B,IAAAC,cAAA,SACEra,GAAI,gBAAgB2U,EACpBwI,KAAK,OACLC,MAAOvG,EAAMtU,KACb8a,SAAWzd,GAAMgX,EAAiBC,EAAM7W,GAAIJ,EAAE+b,OAAOyB,OACrDE,WAAa1d,GAAMuX,EAAevX,EAAGiX,EAAM7W,GAAI2U,GAC/C4I,YAAatd,EAAEqB,uBACfiZ,MAAO,CACLmC,KAAM,EACN3B,gBAAiB,UACjBtX,MAAO,UACP8X,OAAQ,OACRT,aAAc,OACdiB,QAAS,YACTd,SAAU,UAGdb,IAAAC,cAAA,UACEiB,QAASA,IAAMxE,EAAkBD,EAAM7W,IACvCgd,SAAUpN,EAAatE,QAAU,EACjCiP,MAAO,CACL+B,WAAY,OACZf,OAAQ,OACR9X,MAAO,UACPwX,SAAU,OACVO,OAAQ,UACRO,QAAS,OACTM,QAASzM,EAAatE,QAAU,EAAI,GAAM,IAE7C,wBAML8O,IAAAC,cAAA,UACEiB,QAAS1I,EACToK,SAAUpN,EAAatE,QAAU,GACjCiP,MAAO,CACLiC,OAAQ,eACRzB,gBAAiB,cACjBtX,MAAO,UACP8X,OAAQ,qBACRT,aAAc,OACdiB,QAAS,OACTvB,QAAS,OACTE,WAAY,SACZM,eAAgB,SAChBL,IAAK,OACLa,OAAQ,UACRP,SAAU,OACVL,MAAO,UAGTR,IAAAC,cAAA,QAAME,MAAO,CAAEU,SAAU,SAAU,UAAQ,IAAEhb,EAAEsB,iBAInD6Y,IAAAC,cAAA,OAAKE,MAAO,CACV9N,SAAU,QACVmQ,OAAQ,EACRC,KAAM,EACNC,MAAO,EACP/B,gBAAiB,gBAEjBX,IAAAC,cAAA,UACEiB,QAASvE,EACTwD,MAAO,CACLK,MAAO,OACPG,gBAA8B,UAAbhU,EAAuB,UAAY,UACpDtD,MAAO,UACP8X,OAAQ,OACRT,aAAc,IACdiB,QAAS,OACTd,SAAU,OACVC,WAAY,OACZM,OAAQ,UACRhB,QAAS,OACTE,WAAY,SACZM,eAAgB,SAChBL,IAAK,SAGPP,IAAAC,cAAA,QAAME,MAAO,CAAEU,SAAU,SAAU,UAAQ,IAAEhb,EAAEgB,mBAOxC,kBAAdwO,GACC2K,IAAAC,cAAA,OAAKC,UAAU,+BAA+BC,MAAO,CACnDQ,gBAAiB,UACjBtX,MAAO,UACPsY,QAAS,IACTvB,QAAS,OACTC,cAAe,SACfI,OAAQ,QACRoC,UAAW,SAEX7C,IAAAC,cAAA,OAAKE,MAAO,CACVC,QAAS,OACT+B,oBAAqB,gBACrB7B,WAAY,SACZqB,QAAS,SACTI,aAAc,SAEd/B,IAAAC,cAAA,OAAKE,MAAO,CAAEC,QAAS,OAAQQ,eAAgB,WAC7CZ,IAAAC,cAAA,UACEiB,QAAS/B,EACTgB,MAAO,CACL+B,WAAY,OACZf,OAAQ,OACR9X,MAAO,UACPwX,SAAU,OACVO,OAAQ,UACRO,QAAS,QAEZ,WAKH3B,IAAAC,cAAA,MAAIE,MAAO,CACTiC,OAAQ,EACRnB,UAAW,SACXH,WAAY,SACZD,SAAU,OACVwB,cAAe,QAEdxc,EAAEmB,kBAGLgZ,IAAAC,cAAA,aAGFD,IAAAC,cAAA,OAAKE,MAAO,CACVmC,KAAM,EACNlC,QAAS,OACTC,cAAe,SACfO,eAAgB,SAChBN,WAAY,SACZqB,QAAS,SACTyB,UAAW,QACXrB,aAAc,SAEd/B,IAAAC,cAAA,OAAKE,MAAO,CACVK,MAAO,QACPC,OAAQ,OACR2C,UAAW,QACXC,UAAW,OACX1C,gBAAiB9a,EAAEuD,MAAMiN,GAAkBhN,MAC3CqX,aAAc,OACdN,QAAS,OACTC,cAAe,SACfO,eAAgB,gBAChBN,WAAY,SACZqB,QAAS,OACTI,aAAc,SAEd/B,IAAAC,cAAA,OAAKE,MAAO,CAAEmC,KAAM,EAAGlC,QAAS,OAAQE,WAAY,SAAUM,eAAgB,WAC5EZ,IAAAC,cAAA,MAAIE,MAAO,CACTU,SAAU,OACVC,WAAY,OACZG,UAAW,SACX5X,MAA2C,YAApCxD,EAAEuD,MAAMiN,GAAkBhN,OACS,YAApCxD,EAAEuD,MAAMiN,GAAkBhN,OACU,YAApCxD,EAAEuD,MAAMiN,GAAkBhN,OACU,YAApCxD,EAAEuD,MAAMiN,GAAkBhN,MAAsB,UAAY,YAEjExD,EAAEuD,MAAMiN,GAAkBlO,OAI/B6X,IAAAC,cAAA,OAAKE,MAAO,CAAE4B,aAAc,SAC1B/B,IAAAC,cAAA,UACEiB,QAASA,IAAM7D,EAAWxX,EAAEuD,MAAMiN,IAClC8J,MAAO,CACLQ,gBAAiB,UACjBtX,MAAO,UACP8X,OAAQ,OACRT,aAAc,OACdiB,QAAS,YACTd,SAAU,OACVC,WAAY,OACZM,OAAQ,YAGTvb,EAAEc,cAIPqZ,IAAAC,cAAA,OAAKE,MAAO,CAAEiD,UAAW,OAAQhD,QAAS,OAAQE,WAAY,WAC5DN,IAAAC,cAAA,KAAGE,MAAO,CACRU,SAAU,OACVI,UAAW,SACX5X,MAA2C,YAApCxD,EAAEuD,MAAMiN,GAAkBhN,MAAsB,UACb,YAApCxD,EAAEuD,MAAMiN,GAAkBhN,MAAsB,wBACZ,YAApCxD,EAAEuD,MAAMiN,GAAkBhN,MAAsB,UACZ,YAApCxD,EAAEuD,MAAMiN,GAAkBhN,MAAsB,wBAChD,oBAELxD,EAAEuD,MAAMiN,GAAkBzO,eAKjCoY,IAAAC,cAAA,OAAKE,MAAO,CACVC,QAAS,OACTE,WAAY,SACZC,IAAK,OACLwB,aAAc,SAEd/B,IAAAC,cAAA,UACEiB,QAASA,KACP,MAAMoC,EAAgC,IAArBjN,EAAyBxQ,EAAEuD,MAAM8H,OAAS,EAAImF,EAAmB,EAClFC,EAAoBgN,IAEtBnD,MAAO,CACL+B,WAAY,OACZf,OAAQ,OACR9X,MAAO,UACPwX,SAAU,OACVO,OAAQ,UACRO,QAAS,SAEZ,UAID3B,IAAAC,cAAA,OAAKE,MAAO,CACVC,QAAS,OACTG,IAAK,QAEJ1a,EAAEuD,MAAMpE,IAAI,CAACue,EAAGhJ,IACfyF,IAAAC,cAAA,OACEjD,IAAKzC,EACL2G,QAASA,IAAM5K,EAAoBiE,GACnC4F,MAAO,CACLK,MAAO,OACPC,OAAQ,OACRC,aAAc,MACdC,gBAAiBpG,IAAUlE,EAAmB,UAAY,UAC1D+K,OAAQ,eAMhBpB,IAAAC,cAAA,UACEiB,QAASA,KACP,MAAMoC,EAAWjN,IAAqBxQ,EAAEuD,MAAM8H,OAAS,EAAI,EAAImF,EAAmB,EAClFC,EAAoBgN,IAEtBnD,MAAO,CACL+B,WAAY,OACZf,OAAQ,OACR9X,MAAO,UACPwX,SAAU,OACVO,OAAQ,UACRO,QAAS,SAEZ,aASM,YAAdtM,IAA4BhJ,GAA6B,UAAbM,IAC3CqT,IAAAC,cAAA,OAAKC,UAAU,wBAAwBC,MAAO,CAC5CQ,gBAAiB,UACjBtX,MAAO,UACPsY,QAAS,aACTvB,QAAS,OACTC,cAAe,SACfI,OAAQ,UAERT,IAAAC,cAAA,OAAKE,MAAO,CACVC,QAAS,OACT+B,oBAAqB,gBACrB7B,WAAY,SACZqB,QAAS,SACTI,aAAc,SAEd/B,IAAAC,cAAA,OAAKE,MAAO,CAAEC,QAAS,OAAQQ,eAAgB,WAC7CZ,IAAAC,cAAA,UACEiB,QAAS/B,EACTgB,MAAO,CACL+B,WAAY,OACZf,OAAQ,OACR9X,MAAO,UACPwX,SAAU,OACVO,OAAQ,UACRO,QAAS,QAEZ,WAKH3B,IAAAC,cAAA,MAAIE,MAAO,CACTiC,OAAQ,EACRnB,UAAW,SACXH,WAAY,SACZD,SAAU,OACVwB,cAAe,QAED,UAAb1V,EAAuB9G,EAAE6B,cAAcI,mBAAqBuE,EAAalE,KAAKqb,eAGjFxD,IAAAC,cAAA,YAAW,KAGbD,IAAAC,cAAA,OAAKE,MAAO,CACVmC,KAAM,EACNlC,QAAS,OACTC,cAAe,SACfsB,QAAS,SACTI,aAAc,SAEd/B,IAAAC,cAAA,MAAIE,MAAO,CACTU,SAAU,OACVC,WAAY,OACZG,UAAW,SACXmB,OAAQ,kBAEPvV,EAAqBhH,EAAEyE,mBAAqBzE,EAAEyE,mBAAmBuC,GAAqBA,EAAqBT,EAAQE,IAGtH0T,IAAAC,cAAA,OAAKE,MAAO,CACVQ,gBAAiB,UACjBD,aAAc,OACdiB,QAAS,YACTI,aAAc,OACdqB,UAAW,QACXhD,QAAS,OACTC,cAAe,SACfO,eAAgB,SAChBN,WAAY,WAEX3K,GACCqK,IAAAC,cAAA,KAAGE,MAAO,CACRU,SAAU,OACVmB,WAAY,MACZf,UAAW,SACXwC,WAAY,aAEX9N,EAAcnF,MAKI,mBAAtB3D,GACCmT,IAAAC,cAAA,OAAKE,MAAO,CACVuB,UAAW,OACXtB,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,IAAK,SAELP,IAAAC,cAACN,EAAuB,CAAC/Q,sBAAuBA,KAKnD/B,GAA2C,mBAAtBA,GAAgE,mBAAtBA,GAC9DmT,IAAAC,cAAA,KAAGE,MAAO,CACRuB,UAAW,OACXb,SAAU,OACVxX,MAAO,UACP4X,UAAW,WAEVxM,GAAyBA,KAKP,gBAAtB5H,GAA0D,aAAnBiB,GACtCkS,IAAAC,cAAA,OAAKE,MAAO,CACVC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,IAAK,OACLmB,UAAW,SAEX1B,IAAAC,cAAA,KAAGE,MAAO,CAAEU,SAAU,OAAQxX,MAAO,YAClCxD,EAAE2E,iBAAiBC,cAEtBuV,IAAAC,cAAA,OAAKE,MAAO,CACVC,QAAS,OACTG,IAAK,OACLK,eAAgB,WAEhBZ,IAAAC,cAAA,UACEiB,QAASA,IAAM/N,EAAsB,SACrCgN,MAAO,CACLQ,gBAAiB,UACjBtX,MAAO,QACP8X,OAAQ,OACRT,aAAc,MACdiB,QAAS,YACTd,SAAU,OACVC,WAAY,OACZM,OAAQ,YAGTvb,EAAE2E,iBAAiBd,OAEtBsW,IAAAC,cAAA,UACEiB,QAASA,IAAM/N,EAAsB,QACrCgN,MAAO,CACLQ,gBAAiB,UACjBtX,MAAO,QACP8X,OAAQ,OACRT,aAAc,MACdiB,QAAS,YACTd,SAAU,OACVC,WAAY,OACZM,OAAQ,YAGTvb,EAAE2E,iBAAiBb,MAEtBqW,IAAAC,cAAA,UACEiB,QAASA,IAAM/N,EAAsB,QACrCgN,MAAO,CACLQ,gBAAiB,UACjBtX,MAAO,QACP8X,OAAQ,OACRT,aAAc,MACdiB,QAAS,YACTd,SAAU,OACVC,WAAY,OACZM,OAAQ,YAGTvb,EAAE2E,iBAAiBZ,QAOL,gBAAtBiD,GAA0D,cAAnBiB,GACtCkS,IAAAC,cAAA,OAAKE,MAAO,CACVuB,UAAW,OACXC,QAAS,OACThB,gBAA4C,UAA3BjT,EAAqC,YACb,SAA3BA,EAAoC,YACpC,YACdgT,aAAc,OACdO,UAAW,WAEXjB,IAAAC,cAAA,MAAIE,MAAO,CACT4B,aAAc,OACd1Y,MAAkC,UAA3BqE,EAAqC,UACb,SAA3BA,EAAoC,UACpC,YAEwB,UAA3BA,EAAqC7H,EAAE2E,iBAAiBd,MAC9B,SAA3BgE,EAAoC7H,EAAE2E,iBAAiBb,KACvD9D,EAAE2E,iBAAiBZ,MAGpBgE,GACCoS,IAAAC,cAAA,KAAGE,MAAO,CAAEU,SAAU,SACnBjT,GAIuB,SAA3BF,GACCsS,IAAAC,cAAA,KAAGE,MAAO,CAAEU,SAAU,OAAQxX,MAAO,UAAWqY,UAAW,SACxD7b,EAAE2E,iBAAiBE,oBAQhCsV,IAAAC,cAAA,OAAKE,MAAO,CACVwB,QAAS,IACTtP,SAAU,QACVmQ,OAAQ,EACRC,KAAM,EACNC,MAAO,EACP/B,gBAAiB,cACjBgC,OAAQ,KAGe,gBAAtB9V,GAA0D,aAAnBiB,EAEtCkS,IAAAC,cAAA,UACEE,MAAO,CACLK,MAAO,OACPG,gBAAiB,UACjBtX,MAAO,UACP8X,OAAQ,OACRT,aAAc,IACdiB,QAAS,OACTd,SAAU,OACVC,WAAY,OACZM,OAAQ,cACRa,QAAS,KAGVpc,EAAE2E,iBAAiBG,cAEE,mBAAtBkC,IAA2C2B,GAAiBE,EAAe,EAE7EsR,IAAAC,cAAA,UACEiB,QAASA,IAAMrY,IACfsX,MAAO,CACLK,MAAO,OACPG,gBAAiB,UACjBtX,MAAO,UACP8X,OAAQ,OACRT,aAAc,IACdiB,QAAS,OACTd,SAAU,OACVC,WAAY,OACZM,OAAQ,YAGTvb,EAAEiB,kBAILkZ,IAAAC,cAAA,UACEiB,QAASA,KACHrU,EACF6H,IAEAiH,KAGJwE,MAAO,CACLK,MAAO,OACPG,gBAA8B,UAAbhU,EAAuB,UAAY,UACpDtD,MAAO,UACP8X,OAAQ,OACRT,aAAc,IACdiB,QAAS,OACTd,SAAU,OACVC,WAAY,OACZM,OAAQ,YAGTvb,EAAEW,cAQE,aAAd6O,GACC2K,IAAAC,cAAA,OACEC,UAAU,0BACVgB,QAASA,KAGL/B,KAKJgB,MAAO,CACLQ,gBAAiB,UACjBtX,MAAO,UACP+W,QAAS,OACTC,cAAe,SACfO,eAAgB,SAChBN,WAAY,SACZG,OAAQ,QACRkB,QAAS,OACTP,OAAQ,YAGVpB,IAAAC,cAAA,OAAKE,MAAO,CACVc,UAAW,SACXa,SAAU,UAEV9B,IAAAC,cAAA,MAAIE,MAAO,CACTU,SAAU,OACVkB,aAAc,OACdjB,WAAY,SAEXjb,EAAEwB,iBAGL2Y,IAAAC,cAAA,KAAGE,MAAO,CACRU,SAAU,OACVkB,aAAc,OACd1Y,MAAO,UACP2Y,WAAY,QAEXnc,EAAEyB,yBAA2BoF,EAC5B7G,EAAEyB,wBAAwBiJ,QAAQ,UAAW7D,GAC7C,uBAGJsT,IAAAC,cAAA,OAAKE,MAAO,CACVK,MAAO,QACPC,OAAQ,QACR2B,OAAQ,cACRpB,UAAW,kCAEXhB,IAAAC,cAAA,OACEyD,IAAKC,IACLC,IAAI,mBACJzD,MAAO,CACLK,MAAO,OACPC,OAAQ,OACRoD,UAAW,UACXzP,OAAQ,8BAKd4L,IAAAC,cAAA,KAAGE,MAAO,CACRU,SAAU,OACVxX,MAAoB,UAAbsD,EAAuB,UAAY,YAEzC9G,EAAE0B,qBAAuB1B,EAAE0B,qBAAqBgJ,QAC/C,WACA2G,IAAsBE,EACjBvR,EAAE4B,wBAA0B,0BAChB,UAAbkF,EACG9G,EAAEie,sBAAwB,oCAC1Bje,EAAE2B,sBAAwB,uCAC/B,yBAKRwY,IAAAC,cAAA,SAAO2B,IAAI,QAAQ,gZAgBR,YAAdvM,GACC2K,IAAAC,cAAA,OAAKC,UAAU,wBAAwBC,MAAO,CAC5CQ,gBAAiB,UACjBtX,MAAO,UACPsY,QAAS,aACTvB,QAAS,OACTC,cAAe,SACfI,OAAQ,UAERT,IAAAC,cAAA,OAAKE,MAAO,CACVC,QAAS,OACT+B,oBAAqB,gBACrB7B,WAAY,SACZqB,QAAS,SACTI,aAAc,SAEd/B,IAAAC,cAAA,OAAKE,MAAO,CAAEC,QAAS,OAAQQ,eAAgB,WAC7CZ,IAAAC,cAAA,UACEiB,QAAS/B,EACTgB,MAAO,CACL+B,WAAY,OACZf,OAAQ,OACR9X,MAAO,UACPwX,SAAU,OACVO,OAAQ,UACRO,QAAS,QAEZ,WAKH3B,IAAAC,cAAA,MAAIE,MAAO,CACTiC,OAAQ,EACRnB,UAAW,SACXH,WAAY,SACZD,SAAU,OACVwB,cAAe,QAEdxc,EAAEoB,iBAGL+Y,IAAAC,cAAA,YAAW,KAGbD,IAAAC,cAAA,OAAKE,MAAO,CACVmC,KAAM,EACNlC,QAAS,OACTC,cAAe,SACfsB,QAAS,WAET3B,IAAAC,cAAA,OAAKE,MAAO,CACVQ,gBAAiB,UACjBD,aAAc,OACdiB,QAAS,YACTI,aAAc,OACdd,UAAW,WAEXjB,IAAAC,cAAA,MAAIE,MAAO,CACTU,SAAU,OACVC,WAAY,OACZiB,aAAc,SAEblc,EAAEyC,oBAEL0X,IAAAC,cAAA,KAAGE,MAAO,CACRU,SAAU,OACVxX,MAAO,UACP2Y,WAAY,MACZD,aAAc,SAEblc,EAAE0C,sBAGLyX,IAAAC,cAAA,OAAKE,MAAO,CACVC,QAAS,OACTC,cAAe,SACfE,IAAK,OACLmB,UAAW,SAEV7b,EAAEoD,gBAAkBpD,EAAEoD,eAAejE,IAAIqP,GACxC2L,IAAAC,cAAA,OACEjD,IAAK3I,EAAOzO,GACZsb,QAASA,IAAM9B,GAAuBA,EAAoB/K,GAC1D8L,MAAO,CACLQ,iBAAsC,OAArBrJ,QAAqB,IAArBA,OAAqB,EAArBA,EAAuB1R,MAAOyO,EAAOzO,GAAK,YAAc,UACzEub,QAA6B,OAArB7J,QAAqB,IAArBA,OAAqB,EAArBA,EAAuB1R,MAAOyO,EAAOzO,GAAK,oBAAsB,wBACxE8a,aAAc,OACdiB,QAAS,OACTvB,QAAS,OACTC,cAAe,SACfe,OAAQ,UACRC,WAAY,aAGdrB,IAAAC,cAAA,OAAKE,MAAO,CACVC,QAAS,OACTQ,eAAgB,gBAChBN,WAAY,SACZyB,aAAc,SAEd/B,IAAAC,cAAA,MAAIE,MAAO,CACTU,SAAU,OACVC,WAAY,SAEXzM,EAAOlM,MAEV6X,IAAAC,cAAA,OAAKE,MAAO,CACVU,SAAU,OACVC,WAAY,OACZzX,MAAO,YACN,SACCgL,EAAOnL,QAGb8W,IAAAC,cAAA,KAAGE,MAAO,CACRU,SAAU,OACVxX,MAAO,UACP4X,UAAW,SAEV5M,EAAOzM,kBAQpBoY,IAAAC,cAAA,OAAKE,MAAO,CACVwB,QAAS,IACTtP,SAAU,QACVmQ,OAAQ,EACRC,KAAM,EACNC,MAAO,EACP/B,gBAAiB,cACjBgC,OAAQ,KAER3C,IAAAC,cAAA,UACEiB,QAAS7B,EACTuD,UAAWtL,GAAyBE,EACpC2I,MAAO,CACLK,MAAO,OACPG,gBAAiBrJ,EAAwB,UAAY,UACrDjO,MAAO,UACP8X,OAAQ,OACRT,aAAc,IACdiB,QAAS,OACTd,SAAU,OACVC,WAAY,OACZM,OAAQ9J,EAAwB,UAAY,cAC5C2K,QAASzK,EAAsB,GAAM,EACrC4I,QAAS,OACTE,WAAY,SACZM,eAAgB,SAChBL,IAAK,SAGN/I,EAAsB3R,EAAE4C,kBAAoB5C,EAAE2C,kBAOxC,YAAd6M,GAA2BvG,GAAYA,EAASoC,OAAS,GACxD8O,IAAAC,cAAA,OAAKE,MAAO,CACV9N,SAAU,QACVmQ,OAAQ,OACRE,MAAO,OACPC,OAAQ,MAER3C,IAAAC,cAAA,UACEiB,QAASA,IAAMpE,MAAM,GAAGjX,EAAEmF,MAAME,qBAAqB4D,EAASsF,OAAO2P,GAAkB,WAAbA,EAAExQ,QAAqBvO,IAAI+e,GAAK,KAAKA,EAAEzQ,WAAWyQ,EAAEnc,eAAeoc,KAAK,SAClJ7D,MAAO,CACLQ,gBAAiB,UACjBtX,MAAO,QACP8X,OAAQ,OACRT,aAAc,MACdF,MAAO,OACPC,OAAQ,OACRL,QAAS,OACTQ,eAAgB,SAChBN,WAAY,SACZO,SAAU,OACVE,UAAW,6BACXK,OAAQ,YAGTvb,EAAEmF,MAAMC,cAMdgL,GACC+J,IAAAC,cAAA,OAAKE,MAAO,CACV9N,SAAU,QACV4R,IAAK,EACLxB,KAAM,EACNC,MAAO,EACPF,OAAQ,EACR7B,gBAAiB,qBACjBP,QAAS,OACTQ,eAAgB,SAChBN,WAAY,SACZqC,OAAQ,MAER3C,IAAAC,cAAA,OAAKE,MAAO,CACVC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZjX,MAAO,YAEP2W,IAAAC,cAAA,OAAKE,MAAO,CACVK,MAAO,OACPC,OAAQ,OACRC,aAAc,MACdS,OAAQ,kCACR+C,eAAgB,UAChBlD,UAAW,+BACXe,aAAc,UAEhB/B,IAAAC,cAAA,KAAGE,MAAO,CACRU,SAAU,SACRhb,EAAEsD,gBAEN6W,IAAAC,cAAA,SAAO2B,IAAI,QAAQ,2HC9kDhBuC,MARSA,KAEtB,MAAMC,EAAYlP,IAGlB,OAAO8K,IAAAC,cAAC4B,EAAWuC,ICVRC,IAASC,WAAWpH,SAASC,eAAe,SACpDoH,OACHvE,IAAAC,cAACD,IAAMwE,WAAU,KACfxE,IAAAC,cAACkE,EAAe,S,sCCRpBne,EAAOC,QAAU,IAA0B,4C","file":"static/js/main.c9c59d1c.chunk.js","sourcesContent":["var map = {\n\t\"./backupActions_en\": [\n\t\t6,\n\t\t0\n\t],\n\t\"./backupActions_en.json\": [\n\t\t6,\n\t\t0\n\t],\n\t\"./backupActions_fr\": [\n\t\t8,\n\t\t2\n\t],\n\t\"./backupActions_fr.json\": [\n\t\t8,\n\t\t2\n\t],\n\t\"./backupActions_it\": [\n\t\t7,\n\t\t1\n\t],\n\t\"./backupActions_it.json\": [\n\t\t7,\n\t\t1\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 18;\nmodule.exports = webpackAsyncContext;","// translations.js - File che contiene tutte le traduzioni per l'app\r\n\r\nconst translations = {\r\n  it: {\r\n    // Testi generali dell'app\r\n    appName: \"FRIENZ\",\r\n    appDescription: \"Questo club è gestito da un AI. Lei formulerà domande sempre nuove e inaspettate.\",\r\n    \r\n    // Pulsanti e azioni comuni\r\n    startButton: \"INIZIA\",\r\n    backButton: \"Indietro\",\r\n    nextButton: \"NEXT\",\r\n    doneButton: \"FATTO\",\r\n    payButton: \"PAGA\",\r\n    enterButton: \"ENTRA\",\r\n    resetButton: \"Reset (Solo Test)\",\r\n    startGameButton: \"START\",\r\n    startTimerButton: \"⏱️ AVVIA TIMER\",\r\n    \r\n    // Titoli delle schermate\r\n    playersScreenTitle: \"PLAYERS\",\r\n    roomsScreenTitle: \"ROOMS\",\r\n    unlockGameTitle: \"SBLOCCA IL GIOCO\",\r\n    \r\n    // Placeholder e label\r\n    playerInputPlaceholder: \"Enter player name\",\r\n    addPlayerLabel: \"Add Player\",\r\n    \r\n    // Messaggi\r\n    notEnoughPlayersError: \"Inserisci almeno 2 giocatori per iniziare!\",\r\n    gameOverMessage: \"PARTITA FINITA!\",\r\n    actionsCompletedMessage: \"Avete completato {count} azioni!\",\r\n    tapToContinueMessage: \"Tocca per {action}\",\r\n    returnToRoomsMessage: \"tornare alla selezione delle stanze\",\r\n    unlockMoreGamesMessage: \"sbloccare altre partite\",\r\n    \r\n    // Sezione per la selezione giochi (ora parte della stanza giochi)\r\n    gameSelection: {\r\n      title: \"GIOCHI\",\r\n      description: \"Seleziona i giochi che vuoi includere nella partita\",\r\n      continueButton: \"CONTINUA\",\r\n      selectedGamesTitle: \"GIOCHI SELEZIONATI\",\r\n      selectedGamesDescription: \"Mix dei giochi che hai scelto\",\r\n      noGamesSelectedError: \"Seleziona almeno un gioco per continuare!\",\r\n      games: {\r\n        truthOrDare: {\r\n          name: \"Obbligo o Verità\",\r\n          description: \"Il classico gioco di verità e obbligo con opzione debito\"\r\n        },\r\n        wouldYouRather: {\r\n          name: \"Preferiresti\",\r\n          description: \"Domande difficili dove devi scegliere tra due opzioni\"\r\n        },\r\n        nonHoMai: {\r\n          name: \"Non ho mai\",\r\n          description: \"Confessa le cose che hai o non hai mai fatto\"\r\n        }\r\n      }\r\n    },\r\n    \r\n    // Schermata paywall\r\n    freeGameEndedTitle: \"Partita gratuita terminata!\",\r\n    freeGameEndedMessage: \"Hai utilizzato la tua partita gratuita. Sblocca l'app per giocare illimitatamente con tutti i tuoi amici!\",\r\n    purchaseButton: \"ACQUISTA\",\r\n    processingPayment: \"ELABORAZIONE...\",\r\n    \r\n    // Timer Challenge\r\n    timerChallenge: {\r\n      timeUp: \"TEMPO SCADUTO!\",\r\n      timeRemaining: \"Tempo rimanente: {seconds}s\",\r\n      startTimer: \"Clicca per avviare il timer!\",\r\n      timerStarted: \"Timer avviato! Inizia la sfida!\",\r\n      completed: \"Sfida completata!\",\r\n      failed: \"Tempo scaduto! Paga le penalità!\"\r\n    },\r\n    \r\n    // Opzioni di pagamento\r\n    paymentOptions: [\r\n      { id: 'premium', name: 'Premium', price: '4.99', description: 'Sblocca tutte le stanze per sempre' },\r\n      { id: 'prive', name: 'Privè', price: '9.99', description: \"L'AI ricorderà te e i tuoi amici, i vostri gusti, le vostre paure e vi farà domande sempre più personali\" }\r\n    ],\r\n    \r\n    // Loading\r\n    loadingMessage: \"Caricamento in corso...\",\r\n    \r\n    // Stanze\r\n    rooms: [\r\n      { \r\n        id: 'party', \r\n        name: 'Party', \r\n        description: 'Domande divertenti per animare la festa',\r\n        color: '#2563EB'\r\n      },\r\n      { \r\n        id: 'redRoom', \r\n        name: 'Red Room', \r\n        description: 'Domande piccanti e provocanti',\r\n        color: '#DC2626'\r\n      },\r\n      { \r\n        id: 'darkRoom', \r\n        name: 'Dark Room', \r\n        description: 'Non entrare se hai qualcosa da nascondere',\r\n        color: '#1F2937'\r\n      },\r\n      { \r\n        id: 'coppie', \r\n        name: 'Coppie', \r\n        description: 'Domande e sfide romantiche per innamorati',\r\n        color: '#EAB308'\r\n      },\r\n      { \r\n        id: 'giochi', \r\n        name: 'Giochi', \r\n        description: 'Seleziona e combina diversi mini-giochi',\r\n        color: '#8B5CF6'\r\n      },\r\n      { \r\n        id: 'neonRoulette', \r\n        name: 'Neon Roulette', \r\n        description: 'Mix casuale di tutte le modalità',\r\n        color: '#D946EF'\r\n      }\r\n    ],\r\n    \r\n    // Giochi speciali\r\n    specialGames: {\r\n      pointFinger: \"{player} sta scegliendo una caratteristica e tutti voteranno...\",\r\n      infamata: \"{player} sta decidendo a chi assegnare la domanda o sfida...\",\r\n      truthOrDare: {\r\n        choosing: \"{player} deve scegliere tra Verità, Obbligo o Debito!\",\r\n        truth: \"{player} ha scelto Verità!\",\r\n        dare: \"{player} ha scelto Obbligo!\",\r\n        debt: \"{player} ha scelto Debito!\"\r\n      },\r\n      wouldYouRather: \"{player} ha posto la domanda: Preferiresti? Tutti devono votare! La minoranza riceve penalità\",\r\n      questoOQuello: \"{player} ha attivato QUESTO O QUELLO! Tutti votano: alza la mano per la prima opzione, tienila abbassata per la seconda. Chi è in minoranza fa 3 penalità!\",\r\n      chatDetective: \"{player} è il detective di WhatsApp!\",\r\n      tuttoHaUnPrezzo: \"{player} ha avviato il gioco TUTTO HA UN PREZZO!\",\r\n      tuttiQuelliChe: \"{player} ha attivato il gioco TUTTI QUELLI CHE!\",\r\n      penitenzeGruppo: \"{player} ha attivato PENITENZE DI GRUPPO!\",\r\n      penitenzaRandom: \"{player} ha attivato le PENITENZE RANDOM!\",\r\n      nonHoMai: \"{player} ha iniziato il gioco NON HO MAI! Dopo di lui tocca al giocatore alla sua destra, finché non lo fanno tutti\",\r\n      chiEPiuProbabile: \"{player} ha attivato il gioco CHI È PIÙ PROBABILE CHE! Tutti votano contemporaneamente puntando il dito. Chi riceve più voti fa le penalità!\",\r\n      happyHour: \"{player} ha attivato HAPPY HOUR! Tutti ricevono {count} penalità! 🎉\",\r\n      oneVsOne: \"1V1!\",\r\n      timerChallenge: \"{player} ha attivato SFIDE A TEMPO! Clicca il timer per iniziare la sfida!\"\r\n    },\r\n    \r\n    // Terminologia giochi speciali\r\n    specialGamesTitles: {\r\n      pointFinger: \"PUNTARE IL DITO\",\r\n      infamata: \"INFAMATA\",\r\n      truthOrDare: \"OBBLIGO VERITÀ O DEBITO\",\r\n      wouldYouRather: \"PREFERIRESTI\",\r\n      questoOQuello: \"QUESTO O QUELLO\",\r\n      chatDetective: \"CHAT DETECTIVE\",\r\n      tuttoHaUnPrezzo: \"TUTTO HA UN PREZZO\",\r\n      tuttiQuelliChe: \"TUTTI QUELLI CHE\",\r\n      penitenzeGruppo: \"PENITENZE DI GRUPPO\",\r\n      penitenzaRandom: \"PENITENZE RANDOM\",\r\n      nonHoMai: \"NON HO MAI\",\r\n      chiEPiuProbabile: \"CHI È PIÙ PROBABILE CHE\",\r\n      happyHour: \"HAPPY HOUR\",\r\n      oneVsOne: \"1V1!\",\r\n      timerChallenge: \"SFIDE A TEMPO\"\r\n    },\r\n    \r\n    // Spiegazione del gioco \"preferiresti\"\r\n    wouldYouRatherExplanation: \"Votate contemporaneamente per alzata di mano!\",\r\n    \r\n    // Opzioni gioco Verità o Obbligo\r\n    truthDareOptions: {\r\n      selectOption: \"Seleziona un'opzione:\",\r\n      truth: \"VERITÀ\",\r\n      dare: \"OBBLIGO\",\r\n      debt: \"DEBITO\",\r\n      debtExplanation: \"Hai scelto di prendere un debito! Il gruppo deciderà quando riscattarlo.\",\r\n      chooseOption: \"SCEGLI UN'OPZIONE\"\r\n    },\r\n    \r\n    // Fallback\r\n    noActionAvailable: \"Nessuna azione disponibile\",\r\n    \r\n    // Alternanze penalità\r\n    penaltyAlternatives: {\r\n      questions: [\r\n        \"? Se non rispondi {count} penalità\",\r\n        \"? Se eviti la domanda {count} penalità\",\r\n        \"? Il silenzio costa {count} penalità\"\r\n      ],\r\n      statements: [\r\n        \"se ti rifiuti {count} penalità\",\r\n        \"se non lo fai {count} penalità\",\r\n        \"altrimenti sono {count} penalità\",\r\n        \"in caso contrario {count} penalità\",\r\n        \"o saranno {count} penalità\",\r\n        \"o riceverai {count} penalità\",\r\n        \"se non hai coraggio {count} penalità\",\r\n        \"o dovrai fare {count} penalità\",\r\n        \"rifiutare costa {count} penalità\"\r\n      ]\r\n    },\r\n    \r\n    // Debiti\r\n    debts: {\r\n      buttonLabel: \"💸\",\r\n      activeDebtsTitle: \"Debiti attivi:\",\r\n      debtDescription: \"Debito assegnato durante il gioco Obbligo Verità Debito\"\r\n    },\r\n    \r\n    // Messaggi di log\r\n    logMessages: {\r\n      neonRouletteStats: \"Neon Roulette stats:\",\r\n      redRoomStats: \"Red Room: {count} azioni\",\r\n      darkRoomStats: \"Dark Room: {count} azioni\",\r\n      coppieStats: \"Coppie: {count} azioni\",\r\n      partyStats: \"Party: {count} azioni\",\r\n      totalStats: \"Totale: {count} azioni\",\r\n      noActionsInPool: \"Nessuna azione nel pool, uso il fallback\",\r\n      missingSpecialGame: \"Manca la sezione specialGames.{type} nel backupActions.json!\"\r\n    },\r\n    \r\n    // Testi dinamici per ObligoVeritàDebito\r\n    truthDareIntro: \"OBBLIGO VERITÀ O DEBITO: È il turno di {player}. Se scegli Debito, eviti la penalità ma ti viene assegnato un debito che potrà essere riscattato in qualsiasi momento da chi dirige il gioco (es. \\\"Vai a prendermi da bere\\\" o \\\"Posta una storia imbarazzante\\\"). Scegli una delle opzioni!\",\r\n    truthDareNextPlayerIntro: \"OBBLIGO VERITÀ O DEBITO: È il turno di {player}. Scegli una delle opzioni!\"\r\n  },\r\n  \r\n  en: {\r\n    // General app texts\r\n    appName: \"FRIENZ\",\r\n    appDescription: \"This club is run by an AI. It will formulate new and unexpected questions.\",\r\n    \r\n    // Buttons and common actions\r\n    startButton: \"START\",\r\n    backButton: \"Back\",\r\n    nextButton: \"NEXT\",\r\n    doneButton: \"DONE\",\r\n    payButton: \"PAY\",\r\n    enterButton: \"ENTER\",\r\n    resetButton: \"Reset (Test Only)\",\r\n    startGameButton: \"START\",\r\n    startTimerButton: \"⏱️ START TIMER\",\r\n    \r\n    // Screen titles\r\n    playersScreenTitle: \"PLAYERS\",\r\n    roomsScreenTitle: \"ROOMS\",\r\n    unlockGameTitle: \"UNLOCK THE GAME\",\r\n    \r\n    // Placeholders and labels\r\n    playerInputPlaceholder: \"Enter player name\",\r\n    addPlayerLabel: \"Add Player\",\r\n    \r\n    // Messages\r\n    notEnoughPlayersError: \"Enter at least 2 players to start!\",\r\n    gameOverMessage: \"GAME OVER!\",\r\n    actionsCompletedMessage: \"You completed {count} actions!\",\r\n    tapToContinueMessage: \"Tap to {action}\",\r\n    returnToRoomsMessage: \"return to room selection\",\r\n    unlockMoreGamesMessage: \"unlock more games\",\r\n    \r\n    // Game selection section (now part of games room)\r\n    gameSelection: {\r\n      title: \"GAMES\",\r\n      description: \"Select the games you want to include in the match\",\r\n      continueButton: \"CONTINUE\",\r\n      selectedGamesTitle: \"SELECTED GAMES\",\r\n      selectedGamesDescription: \"Mix of the games you chose\",\r\n      noGamesSelectedError: \"Select at least one game to continue!\",\r\n      games: {\r\n        truthOrDare: {\r\n          name: \"Truth or Dare\",\r\n          description: \"The classic truth and dare game with debt option\"\r\n        },\r\n        wouldYouRather: {\r\n          name: \"Would You Rather\",\r\n          description: \"Difficult questions where you must choose between two options\"\r\n        },\r\n        nonHoMai: {\r\n          name: \"Never Have I Ever\",\r\n          description: \"Confess the things you have or have never done\"\r\n        }\r\n      }\r\n    },\r\n    \r\n    // Paywall screen\r\n    freeGameEndedTitle: \"Free game ended!\",\r\n    freeGameEndedMessage: \"You've used your free game. Unlock the app to play unlimited games with all your friends!\",\r\n    purchaseButton: \"PURCHASE\",\r\n    processingPayment: \"PROCESSING...\",\r\n    \r\n    // Timer Challenge\r\n    timerChallenge: {\r\n      timeUp: \"TIME'S UP!\",\r\n      timeRemaining: \"Time remaining: {seconds}s\",\r\n      startTimer: \"Click to start the timer!\",\r\n      timerStarted: \"Timer started! Begin the challenge!\",\r\n      completed: \"Challenge completed!\",\r\n      failed: \"Time's up! Pay the penalties!\"\r\n    },\r\n    \r\n    // Payment options\r\n    paymentOptions: [\r\n      { id: 'premium', name: 'Premium', price: '4.99', description: 'Unlock all rooms forever' },\r\n      { id: 'prive', name: 'VIP', price: '9.99', description: \"The AI will remember you and your friends, your tastes, your fears, and will ask increasingly personal questions\" }\r\n    ],\r\n    \r\n    // Loading\r\n    loadingMessage: \"Loading...\",\r\n    \r\n    // Rooms\r\n    rooms: [\r\n      { \r\n        id: 'party', \r\n        name: 'Party', \r\n        description: 'Fun questions to liven up the party',\r\n        color: '#2563EB'\r\n      },\r\n      { \r\n        id: 'redRoom', \r\n        name: 'Red Room', \r\n        description: 'Spicy and provocative questions',\r\n        color: '#DC2626'\r\n      },\r\n      { \r\n        id: 'darkRoom', \r\n        name: 'Dark Room', \r\n        description: \"Don't enter if you have something to hide\",\r\n        color: '#1F2937'\r\n      },\r\n      { \r\n        id: 'coppie', \r\n        name: 'Couples', \r\n        description: 'Romantic questions and challenges for lovers',\r\n        color: '#EAB308'\r\n      },\r\n      { \r\n        id: 'giochi', \r\n        name: 'Games', \r\n        description: 'Select and combine different mini-games',\r\n        color: '#8B5CF6'\r\n      },\r\n      { \r\n        id: 'neonRoulette', \r\n        name: 'Neon Roulette', \r\n        description: 'Random mix of all modes',\r\n        color: '#D946EF'\r\n      }\r\n    ],\r\n    \r\n    // Special games\r\n    specialGames: {\r\n      pointFinger: \"{player} is choosing a characteristic and everyone will vote...\",\r\n      infamata: \"{player} is deciding who to assign the question or challenge to...\",\r\n      truthOrDare: {\r\n        choosing: \"{player} must choose between Truth, Dare, or Debt!\",\r\n        truth: \"{player} chose Truth!\",\r\n        dare: \"{player} chose Dare!\",\r\n        debt: \"{player} chose Debt!\"\r\n      },\r\n      wouldYouRather: \"{player} asked the question: Would You Rather? Everyone must vote! The minority gets penalties\",\r\n      questoOQuello: \"{player} has activated THIS OR THAT! Everyone votes: raise your hand for the first option, keep it down for the second. The minority gets 3 penalties!\",\r\n      chatDetective: \"{player} is the WhatsApp detective!\",\r\n      tuttoHaUnPrezzo: \"{player} has started the EVERYTHING HAS A PRICE game!\",\r\n      tuttiQuelliChe: \"{player} has activated the ALL THOSE WHO game!\",\r\n      penitenzeGruppo: \"{player} has activated GROUP PENALTIES!\",\r\n      penitenzaRandom: \"{player} has activated RANDOM PENALTIES!\",\r\n      nonHoMai: \"{player} has started the I HAVE NEVER game! After them, it's the player on their right's turn, until everyone has played.\",\r\n      chiEPiuProbabile: \"{player} has activated the WHO IS MOST LIKELY TO game! Everyone votes simultaneously by pointing a finger. Whoever gets the most votes takes the penalties!\",\r\n      happyHour: \"{player} has activated HAPPY HOUR! Everyone receives {count} penalties! 🎉\",\r\n      oneVsOne: \"1V1!\",\r\n      timerChallenge: \"{player} has activated SPEED CHALLENGES! Click the timer to start the challenge!\"\r\n    },\r\n    \r\n    // Special games terminology\r\n    specialGamesTitles: {\r\n      pointFinger: \"POINT THE FINGER\",\r\n      infamata: \"SNITCH\",\r\n      truthOrDare: \"TRUTH, DARE OR DEBT\",\r\n      wouldYouRather: \"WOULD YOU RATHER\",\r\n      questoOQuello: \"THIS OR THAT\",\r\n      chatDetective: \"CHAT DETECTIVE\",\r\n      tuttoHaUnPrezzo: \"EVERYTHING HAS A PRICE\",\r\n      tuttiQuelliChe: \"ALL THOSE WHO\",\r\n      penitenzeGruppo: \"GROUP PENALTIES\",\r\n      penitenzaRandom: \"RANDOM PENALTIES\",\r\n      nonHoMai: \"I HAVE NEVER\",\r\n      chiEPiuProbabile: \"WHO IS MOST LIKELY TO\",\r\n      happyHour: \"HAPPY HOUR\",\r\n      oneVsOne: \"1V1!\",\r\n      timerChallenge: \"SPEED CHALLENGES\"\r\n    },\r\n    \r\n    // Would You Rather game explanation\r\n    wouldYouRatherExplanation: \"Everyone votes: raise your hand for the first option, keep it down for the second. Those in the minority get penalties!\",\r\n    \r\n    // Truth or Dare game options\r\n    truthDareOptions: {\r\n      selectOption: \"Select an option:\",\r\n      truth: \"TRUTH\",\r\n      dare: \"DARE\",\r\n      debt: \"DEBT\",\r\n      debtExplanation: \"You chose to take a debt! The group will decide when to redeem it.\",\r\n      chooseOption: \"CHOOSE AN OPTION\"\r\n    },\r\n    \r\n    // Fallback\r\n    noActionAvailable: \"No action available\",\r\n    \r\n    // Penalty alternatives\r\n    penaltyAlternatives: {\r\n      questions: [\r\n        \"? If you don't answer, {count} penalties\",\r\n        \"? If you avoid the question, {count} penalties\",\r\n        \"? Silence costs {count} penalties\"\r\n      ],\r\n      statements: [\r\n        \"if you refuse, {count} penalties\",\r\n        \"if you don't do it, {count} penalties\",\r\n        \"otherwise it's {count} penalties\",\r\n        \"or else {count} penalties\",\r\n        \"or you'll get {count} penalties\",\r\n        \"if you don't have the courage, {count} penalties\",\r\n        \"or you'll have to do {count} penalties\",\r\n        \"refusing costs {count} penalties\"\r\n      ]\r\n    },\r\n    \r\n    // Debts\r\n    debts: {\r\n      buttonLabel: \"💸\",\r\n      activeDebtsTitle: \"Active debts:\",\r\n      debtDescription: \"Debt assigned during the Truth, Dare or Debt game\"\r\n    },\r\n    \r\n    // Log messages\r\n    logMessages: {\r\n      neonRouletteStats: \"Neon Roulette stats:\",\r\n      redRoomStats: \"Red Room: {count} actions\",\r\n      darkRoomStats: \"Dark Room: {count} actions\",\r\n      coppieStats: \"Couples: {count} actions\",\r\n      partyStats: \"Party: {count} actions\",\r\n      totalStats: \"Total: {count} actions\",\r\n      noActionsInPool: \"No actions in the pool, using fallback\",\r\n      missingSpecialGame: \"Missing specialGames.{type} section in backupActions.json!\"\r\n    },\r\n    \r\n    // Dynamic texts for Truth/Dare/Debt\r\n    truthDareIntro: \"TRUTH, DARE OR DEBT: It's {player}'s turn. If you choose Debt, you avoid the penalty but you're assigned a debt that can be redeemed at any time by whoever is running the game (e.g., \\\"Get me a drink\\\" or \\\"Post an embarrassing story\\\"). Choose one of the options!\",\r\n    truthDareNextPlayerIntro: \"TRUTH, DARE OR DEBT: It's {player}'s turn. Choose one of the options!\"\r\n  },\r\n  \r\n  fr: {\r\n    // Textes généraux de l'application\r\n    appName: \"FRIENZ\",\r\n    appDescription: \"Ce club est géré par une IA. Elle formulera des questions nouvelles et inattendues.\",\r\n    \r\n    // Boutons et actions communes\r\n    startButton: \"COMMENCER\",\r\n    backButton: \"Retour\",\r\n    nextButton: \"SUIVANT\",\r\n    doneButton: \"TERMINÉ\",\r\n    payButton: \"PAYER\",\r\n    enterButton: \"ENTRER\",\r\n    resetButton: \"Réinitialiser (Test Uniquement)\",\r\n    startGameButton: \"DÉMARRER\",\r\n    startTimerButton: \"⏱️ LANCER TIMER\",\r\n    \r\n    // Titres des écrans\r\n    playersScreenTitle: \"JOUEURS\",\r\n    roomsScreenTitle: \"SALLES\",\r\n    unlockGameTitle: \"DÉBLOQUER LE JEU\",\r\n    \r\n    // Placeholders et labels\r\n    playerInputPlaceholder: \"Nom du joueur\",\r\n    addPlayerLabel: \"Ajouter Joueur\",\r\n    \r\n    // Messages\r\n    notEnoughPlayersError: \"Entrez au moins 2 joueurs pour commencer!\",\r\n    gameOverMessage: \"JEU TERMINÉ!\",\r\n    actionsCompletedMessage: \"Vous avez complété {count} actions!\",\r\n    tapToContinueMessage: \"Touchez pour {action}\",\r\n    returnToRoomsMessage: \"retourner à la sélection des salles\",\r\n    unlockMoreGamesMessage: \"débloquer plus de jeux\",\r\n    \r\n    // Section de sélection des jeux (maintenant partie de la salle de jeux)\r\n    gameSelection: {\r\n      title: \"JEUX\",\r\n      description: \"Sélectionnez les jeux que vous voulez inclure dans la partie\",\r\n      continueButton: \"CONTINUER\",\r\n      selectedGamesTitle: \"JEUX SÉLECTIONNÉS\",\r\n      selectedGamesDescription: \"Mélange des jeux que vous avez choisis\",\r\n      noGamesSelectedError: \"Sélectionnez au moins un jeu pour continuer!\",\r\n      games: {\r\n        truthOrDare: {\r\n          name: \"Vérité ou Action\",\r\n          description: \"Le jeu classique de vérité et action avec option dette\"\r\n        },\r\n        wouldYouRather: {\r\n          name: \"Préférerais-tu\",\r\n          description: \"Questions difficiles où vous devez choisir entre deux options\"\r\n        },\r\n        nonHoMai: {\r\n          name: \"Je n'ai jamais\",\r\n          description: \"Confessez les choses que vous avez ou n'avez jamais faites\"\r\n        }\r\n      }\r\n    },\r\n    \r\n    // Écran paywall\r\n    freeGameEndedTitle: \"Partie gratuite terminée!\",\r\n    freeGameEndedMessage: \"Vous avez utilisé votre partie gratuite. Débloquez l'application pour jouer de façon illimitée avec tous vos amis!\",\r\n    purchaseButton: \"ACHETER\",\r\n    processingPayment: \"TRAITEMENT...\",\r\n    \r\n    // Timer Challenge\r\n    timerChallenge: {\r\n      timeUp: \"TEMPS ÉCOULÉ!\",\r\n      timeRemaining: \"Temps restant: {seconds}s\",\r\n      startTimer: \"Cliquez pour lancer le timer!\",\r\n      timerStarted: \"Timer lancé! Commencez le défi!\",\r\n      completed: \"Défi terminé!\",\r\n      failed: \"Temps écoulé! Payez les pénalités!\"\r\n    },\r\n    \r\n    // Options de paiement\r\n    paymentOptions: [\r\n      { id: 'premium', name: 'Premium', price: '4.99', description: 'Débloque toutes les salles pour toujours' },\r\n      { id: 'prive', name: 'VIP', price: '9.99', description: \"L'IA se souviendra de vous et de vos amis, de vos goûts, de vos peurs, et posera des questions de plus en plus personnelles\" }\r\n    ],\r\n    \r\n    // Chargement\r\n    loadingMessage: \"Chargement en cours...\",\r\n    \r\n    // Salles\r\n    rooms: [\r\n      { \r\n        id: 'party', \r\n        name: 'Party', \r\n        description: 'Questions amusantes pour animer la fête',\r\n        color: '#2563EB'\r\n      },\r\n      { \r\n        id: 'redRoom', \r\n        name: 'Red Room', \r\n        description: 'Questions épicées et provocantes',\r\n        color: '#DC2626'\r\n      },\r\n      { \r\n        id: 'darkRoom', \r\n        name: 'Dark Room', \r\n        description: \"N'entrez pas si vous avez quelque chose à cacher\",\r\n        color: '#1F2937'\r\n      },\r\n      { \r\n        id: 'coppie', \r\n        name: 'Couples', \r\n        description: 'Questions et défis romantiques pour les amoureux',\r\n        color: '#EAB308'\r\n      },\r\n      { \r\n        id: 'giochi', \r\n        name: 'Jeux', \r\n        description: 'Sélectionnez et combinez différents mini-jeux',\r\n        color: '#8B5CF6'\r\n      },\r\n      { \r\n        id: 'neonRoulette', \r\n        name: 'Neon Roulette', \r\n        description: 'Mélange aléatoire de tous les modes',\r\n        color: '#D946EF'\r\n      }\r\n    ],\r\n    \r\n    // Jeux spéciaux\r\n    specialGames: {\r\n      pointFinger: \"{player} choisit une caractéristique et tout le monde va voter...\",\r\n      infamata: \"{player} décide à qui attribuer la question ou le défi...\",\r\n      truthOrDare: {\r\n        choosing: \"{player} doit choisir entre Vérité, Action ou Dette!\",\r\n        truth: \"{player} a choisi Vérité!\",\r\n        dare: \"{player} a choisi Action!\",\r\n        debt: \"{player} a choisi Dette!\"\r\n      },\r\n      wouldYouRather: \"{player} a posé la question: Préférerais-tu? Tout le monde doit voter! La minorité reçoit des pénalités\",\r\n      questoOQuello: \"{player} a activé CECI OU CELA! Tout le monde vote: levez la main pour la première option, gardez-la baissée pour la seconde. La minorité reçoit 3 pénalités!\",\r\n      chatDetective: \"{player} est le détective WhatsApp !\",\r\n      tuttoHaUnPrezzo: \"{player} a lancé le jeu TOUT A UN PRIX !\",\r\n      tuttiQuelliChe: \"{player} a activé le jeu TOUS CEUX QUI!\",\r\n      penitenzeGruppo: \"{player} a activé PÉNALITÉS DE GROUPE!\",\r\n      penitenzaRandom: \"{player} a activé les PÉNALITÉS ALÉATOIRES!\",\r\n      nonHoMai: \"{player} a commencé le jeu JE N'AI JAMAIS! Après lui, c'est au tour du joueur à sa droite, jusqu'à ce que tout le monde ait joué.\",\r\n      chiEPiuProbabile: \"{player} a activé le jeu QUI EST LE PLUS SUSCEPTIBLE DE! Tout le monde vote simultanément en pointant du doigt. Celui qui reçoit le plus de votes reçoit les pénalités!\",\r\n      happyHour: \"{player} a activé l'HAPPY HOUR ! Tout le monde reçoit {count} pénalités ! 🎉\",\r\n      oneVsOne: \"1V1!\",\r\n      timerChallenge: \"{player} a activé DÉFIS CHRONOMÉTRÉS! Cliquez sur le timer pour commencer le défi!\"\r\n    },\r\n    \r\n    // Terminologie des jeux spéciaux\r\n    specialGamesTitles: {\r\n      pointFinger: \"POINTER DU DOIGT\",\r\n      infamata: \"BALANCE\",\r\n      truthOrDare: \"VÉRITÉ, ACTION OU DETTE\",\r\n      wouldYouRather: \"PRÉFÉRERAIS-TU\",\r\n      questoOQuello: \"CECI OU CELA\",\r\n      chatDetective: \"DÉTECTIVE DE CHAT\",\r\n      tuttoHaUnPrezzo: \"TOUT A UN PRIX\",\r\n      tuttiQuelliChe: \"TOUS CEUX QUI\",\r\n      penitenzeGruppo: \"PÉNALITÉS DE GROUPE\",\r\n      penitenzaRandom: \"PÉNALITÉS ALÉATOIRES\",\r\n      nonHoMai: \"JE N'AI JAMAIS\",\r\n      chiEPiuProbabile: \"QUI EST LE PLUS SUSCEPTIBLE DE\",\r\n      happyHour: \"HAPPY HOUR\",\r\n      oneVsOne: \"1V1!\",\r\n      timerChallenge: \"DÉFIS CHRONOMÉTRÉS\"\r\n    },\r\n    \r\n    // Explication du jeu Préférerais-tu\r\n    wouldYouRatherExplanation: \"Tout le monde vote: levez la main pour la première option, gardez-la baissée pour la seconde. Ceux en minorité reçoivent des pénalités!\",\r\n    \r\n    // Options du jeu Vérité ou Action\r\n    truthDareOptions: {\r\n      selectOption: \"Sélectionnez une option:\",\r\n      truth: \"VÉRITÉ\",\r\n      dare: \"ACTION\",\r\n      debt: \"DETTE\",\r\n      debtExplanation: \"Vous avez choisi de prendre une dette! Le groupe décidera quand la racheter.\",\r\n      chooseOption: \"CHOISISSEZ UNE OPTION\"\r\n    },\r\n    \r\n    // Fallback\r\n    noActionAvailable: \"Aucune action disponible\",\r\n    \r\n    // Alternatives de pénalité\r\n    penaltyAlternatives: {\r\n      questions: [\r\n        \"? Si vous ne répondez pas, {count} pénalités\",\r\n        \"? Si vous évitez la question, {count} pénalités\",\r\n        \"? Le silence coûte {count} pénalités\"\r\n      ],\r\n      statements: [\r\n        \"si vous refusez, {count} pénalités\",\r\n        \"si vous ne le faites pas, {count} pénalités\",\r\n        \"sinon c'est {count} pénalités\",\r\n        \"ou alors {count} pénalités\",\r\n        \"ou vous recevrez {count} pénalités\",\r\n        \"si vous n'avez pas le courage, {count} pénalités\",\r\n        \"ou vous devrez faire {count} pénalités\",\r\n        \"refuser coûte {count} pénalités\"\r\n      ]\r\n    },\r\n    \r\n    // Dettes\r\n    debts: {\r\n      buttonLabel: \"💸\",\r\n      activeDebtsTitle: \"Dettes actives:\",\r\n      debtDescription: \"Dette assignée pendant le jeu Vérité, Action ou Dette\"\r\n    },\r\n    \r\n    // Messages de log\r\n    logMessages: {\r\n      neonRouletteStats: \"Statistiques Neon Roulette:\",\r\n      redRoomStats: \"Red Room: {count} actions\",\r\n      darkRoomStats: \"Dark Room: {count} actions\",\r\n      coppieStats: \"Couples: {count} actions\",\r\n      partyStats: \"Party: {count} actions\",\r\n      totalStats: \"Total: {count} actions\",\r\n      noActionsInPool: \"Pas d'actions dans le pool, utilisation du fallback\",\r\n      missingSpecialGame: \"Section specialGames.{type} manquante dans backupActions.json!\"\r\n    },\r\n    \r\n    // Textes dynamiques pour Vérité/Action/Dette\r\n    truthDareIntro: \"VÉRITÉ, ACTION OU DETTE: C'est le tour de {player}. Si vous choisissez Dette, vous évitez la pénalité mais une dette vous est assignée qui peut être rachetée à tout moment par celui qui dirige le jeu (ex., \\\"Va me chercher à boire\\\" ou \\\"Poste une histoire embarrassante\\\"). Choisissez une des options!\",\r\n    truthDareNextPlayerIntro: \"VÉRITÉ, ACTION OU DETTE: C'est le tour de {player}. Choisissez une des options!\"\r\n  },\r\n  \r\n  de: {\r\n    // Allgemeine App-Texte\r\n    appName: \"FRIENZ\",\r\n    appDescription: \"Dieser Club wird von einer KI geleitet. Sie wird neue und unerwartete Fragen formulieren.\",\r\n    \r\n    // Buttons und häufige Aktionen\r\n    startButton: \"STARTEN\",\r\n    backButton: \"Zurück\",\r\n    nextButton: \"WEITER\",\r\n    doneButton: \"ERLEDIGT\",\r\n    payButton: \"ZAHLEN\",\r\n    enterButton: \"EINTRETEN\",\r\n    resetButton: \"Zurücksetzen (Nur Test)\",\r\n    startGameButton: \"START\",\r\n    startTimerButton: \"⏱️ TIMER STARTEN\",\r\n    \r\n    // Bildschirmtitel\r\n    playersScreenTitle: \"SPIELER\",\r\n    roomsScreenTitle: \"RÄUME\",\r\n    unlockGameTitle: \"SPIEL FREISCHALTEN\",\r\n    \r\n    // Platzhalter und Labels\r\n    playerInputPlaceholder: \"Spielername eingeben\",\r\n    addPlayerLabel: \"Spieler hinzufügen\",\r\n    \r\n    // Nachrichten\r\n    notEnoughPlayersError: \"Geben Sie mindestens 2 Spieler ein, um zu beginnen!\",\r\n    gameOverMessage: \"SPIEL BEENDET!\",\r\n    actionsCompletedMessage: \"Sie haben {count} Aktionen abgeschlossen!\",\r\n    tapToContinueMessage: \"Tippen Sie, um {action}\",\r\n    returnToRoomsMessage: \"zur Raumauswahl zurückzukehren\",\r\n    unlockMoreGamesMessage: \"mehr Spiele freizuschalten\",\r\n    \r\n    // Sektion für Spielauswahl (jetzt Teil des Spielraums)\r\n    gameSelection: {\r\n      title: \"SPIELE\",\r\n      description: \"Wählen Sie die Spiele aus, die Sie in das Match einbeziehen möchten\",\r\n      continueButton: \"WEITER\",\r\n      selectedGamesTitle: \"AUSGEWÄHLTE SPIELE\",\r\n      selectedGamesDescription: \"Mix der Spiele, die Sie gewählt haben\",\r\n      noGamesSelectedError: \"Wählen Sie mindestens ein Spiel aus, um fortzufahren!\",\r\n      games: {\r\n        truthOrDare: {\r\n          name: \"Wahrheit oder Pflicht\",\r\n          description: \"Das klassische Wahrheit und Pflicht Spiel mit Schuld-Option\"\r\n        },\r\n        wouldYouRather: {\r\n          name: \"Was hättest du lieber\",\r\n          description: \"Schwierige Fragen, bei denen Sie zwischen zwei Optionen wählen müssen\"\r\n        },\r\n        nonHoMai: {\r\n          name: \"Ich habe nie\",\r\n          description: \"Gestehen Sie die Dinge, die Sie getan oder nie getan haben\"\r\n        }\r\n      }\r\n    },\r\n    \r\n    // Paywall-Bildschirm\r\n    freeGameEndedTitle: \"Kostenloses Spiel beendet!\",\r\n    freeGameEndedMessage: \"Sie haben Ihr kostenloses Spiel verwendet. Schalten Sie die App frei, um unbegrenzt mit all Ihren Freunden zu spielen!\",\r\n    purchaseButton: \"KAUFEN\",\r\n    processingPayment: \"VERARBEITUNG...\",\r\n    \r\n    // Timer Challenge\r\n    timerChallenge: {\r\n      timeUp: \"ZEIT IST UM!\",\r\n      timeRemaining: \"Verbleibende Zeit: {seconds}s\",\r\n      startTimer: \"Klicken Sie, um den Timer zu starten!\",\r\n      timerStarted: \"Timer gestartet! Beginnen Sie die Herausforderung!\",\r\n      completed: \"Herausforderung abgeschlossen!\",\r\n      failed: \"Zeit ist um! Zahlen Sie die Strafen!\"\r\n    },\r\n    \r\n    // Zahlungsoptionen\r\n    paymentOptions: [\r\n      { id: 'premium', name: 'Premium', price: '4.99', description: 'Schaltet alle Räume für immer frei' },\r\n      { id: 'prive', name: 'VIP', price: '9.99', description: \"Die KI wird sich an Sie und Ihre Freunde, Ihre Vorlieben, Ihre Ängste erinnern und immer persönlichere Fragen stellen\" }\r\n    ],\r\n    \r\n    // Laden\r\n    loadingMessage: \"Wird geladen...\",\r\n    \r\n    // Räume\r\n    rooms: [\r\n      { \r\n        id: 'party', \r\n        name: 'Party', \r\n        description: 'Lustige Fragen, um die Party zu beleben',\r\n        color: '#2563EB'\r\n      },\r\n      { \r\n        id: 'redRoom', \r\n        name: 'Red Room', \r\n        description: 'Pikante und provokante Fragen',\r\n        color: '#DC2626'\r\n      },\r\n      { \r\n        id: 'darkRoom', \r\n        name: 'Dark Room', \r\n        description: \"Betreten Sie nicht, wenn Sie etwas zu verbergen haben\",\r\n        color: '#1F2937'\r\n      },\r\n      { \r\n        id: 'coppie', \r\n        name: 'Paare', \r\n        description: 'Romantische Fragen und Herausforderungen für Verliebte',\r\n        color: '#EAB308'\r\n      },\r\n      { \r\n        id: 'giochi', \r\n        name: 'Spiele', \r\n        description: 'Wählen und kombinieren Sie verschiedene Mini-Spiele',\r\n        color: '#8B5CF6'\r\n      },\r\n      { \r\n        id: 'neonRoulette', \r\n        name: 'Neon Roulette', \r\n        description: 'Zufällige Mischung aller Modi',\r\n        color: '#D946EF'\r\n      }\r\n    ],\r\n    \r\n    // Spezielle Spiele\r\n    specialGames: {\r\n      pointFinger: \"{player} wählt ein Merkmal aus und alle werden abstimmen...\",\r\n      infamata: \"{player} entscheidet, wem die Frage oder Herausforderung zugewiesen wird...\",\r\n      truthOrDare: {\r\n        choosing: \"{player} muss zwischen Wahrheit, Pflicht oder Schuld wählen!\",\r\n        truth: \"{player} hat Wahrheit gewählt!\",\r\n        dare: \"{player} hat Pflicht gewählt!\",\r\n        debt: \"{player} hat Schuld gewählt!\"\r\n      },\r\n      wouldYouRather: \"{player} stellte die Frage: Was hättest du lieber? Alle müssen abstimmen! Die Minderheit erhält Strafen\",\r\n      questoOQuello: \"{player} hat DIES ODER DAS aktiviert! Alle stimmen ab: Hand heben für die erste Option, unten lassen für die zweite. Die Minderheit erhält 3 Strafen!\",\r\n      chatDetective: \"{player} ist der WhatsApp-Detektiv!\",\r\n      tuttoHaUnPrezzo: \"{player} hat das Spiel ALLES HAT SEINEN PREIS gestartet!\",\r\n      tuttiQuelliChe: \"{player} hat das Spiel ALLE, DIE aktiviert!\",\r\n      penitenzeGruppo: \"{player} hat GRUPPENSTRAFEN aktiviert!\",\r\n      penitenzaRandom: \"{player} hat ZUFÄLLIGE STRAFEN aktiviert!\",\r\n      nonHoMai: \"{player} hat das Spiel ICH HABE NIE gestartet! Nach ihm ist der Spieler zu seiner Rechten an der Reihe, bis alle dran waren.\",\r\n      chiEPiuProbabile: \"{player} hat das Spiel WER WÜRDE AM EHESTEN aktiviert! Alle stimmen gleichzeitig ab, indem sie mit dem Finger zeigen. Wer die meisten Stimmen erhält, bekommt die Strafen!\",\r\n      happyHour: \"{player} hat die HAPPY HOUR aktiviert! Jeder erhält {count} Strafen! 🎉\",\r\n      oneVsOne: \"1V1!\",\r\n      timerChallenge: \"{player} hat ZEITHERAUSFORDERUNGEN aktiviert! Klicken Sie auf den Timer, um die Herausforderung zu starten!\"\r\n    },\r\n    \r\n    // Spezielle Spiele Terminologie\r\n    specialGamesTitles: {\r\n      pointFinger: \"MIT DEM FINGER ZEIGEN\",\r\n      infamata: \"PETZE\",\r\n      truthOrDare: \"WAHRHEIT, PFLICHT ODER SCHULD\",\r\n      wouldYouRather: \"WAS HÄTTEST DU LIEBER\",\r\n      questoOQuello: \"DIES ODER DAS\",\r\n      chatDetective: \"CHAT-DETEKTIV\",\r\n      tuttoHaUnPrezzo: \"ALLES HAT SEINEN PREIS\",\r\n      tuttiQuelliChe: \"ALLE, DIE\",\r\n      penitenzeGruppo: \"GRUPPENSTRAFEN\",\r\n      penitenzaRandom: \"ZUFÄLLIGE STRAFEN\",\r\n      nonHoMai: \"ICH HABE NIE\",\r\n      chiEPiuProbabile: \"WER WÜRDE AM EHESTEN\",\r\n      happyHour: \"HAPPY HOUR\",\r\n      oneVsOne: \"1V1!\",\r\n      timerChallenge: \"ZEITHERAUSFORDERUNGEN\"\r\n    },\r\n    \r\n    // Erklärung des Spiels \"Was hättest du lieber\"\r\n    wouldYouRatherExplanation: \"Alle stimmen ab: Hand heben für die erste Option, unten lassen für die zweite. Wer in der Minderheit ist, erhält Strafen!\",\r\n    \r\n    // Wahrheit oder Pflicht Spieloptionen\r\n    truthDareOptions: {\r\n      selectOption: \"Wählen Sie eine Option:\",\r\n      truth: \"WAHRHEIT\",\r\n      dare: \"PFLICHT\",\r\n      debt: \"SCHULD\",\r\n      debtExplanation: \"Sie haben sich entschieden, eine Schuld zu übernehmen! Die Gruppe wird entscheiden, wann sie eingelöst wird.\",\r\n      chooseOption: \"WÄHLEN SIE EINE OPTION\"\r\n    },\r\n    \r\n    // Fallback\r\n    noActionAvailable: \"Keine Aktion verfügbar\",\r\n    \r\n    // Strafenalternativen\r\n    penaltyAlternatives: {\r\n      questions: [\r\n        \"? Wenn Sie nicht antworten, {count} Strafen\",\r\n        \"? Wenn Sie der Frage ausweichen, {count} Strafen\",\r\n        \"? Schweigen kostet {count} Strafen\"\r\n      ],\r\n      statements: [\r\n        \"wenn Sie sich weigern, {count} Strafen\",\r\n        \"wenn Sie es nicht tun, {count} Strafen\",\r\n        \"ansonsten sind es {count} Strafen\",\r\n        \"oder es sind {count} Strafen\",\r\n        \"oder Sie bekommen {count} Strafen\",\r\n        \"wenn Sie nicht den Mut haben, {count} Strafen\",\r\n        \"oder Sie müssen {count} Strafen machen\",\r\n        \"Weigerung kostet {count} Strafen\"\r\n      ]\r\n    },\r\n    \r\n    // Schulden\r\n    debts: {\r\n      buttonLabel: \"💸\",\r\n      activeDebtsTitle: \"Aktive Schulden:\",\r\n      debtDescription: \"Schuld, die während des Wahrheit, Pflicht oder Schuld-Spiels zugewiesen wurde\"\r\n    },\r\n    \r\n    // Log-Nachrichten\r\n    logMessages: {\r\n      neonRouletteStats: \"Neon Roulette Statistiken:\",\r\n      redRoomStats: \"Red Room: {count} Aktionen\",\r\n      darkRoomStats: \"Dark Room: {count} Aktionen\",\r\n      coppieStats: \"Paare: {count} Aktionen\",\r\n      partyStats: \"Party: {count} Aktionen\",\r\n      totalStats: \"Gesamt: {count} Aktionen\",\r\n      noActionsInPool: \"Keine Aktionen im Pool, verwende Fallback\",\r\n      missingSpecialGame: \"Fehlender specialGames.{type} Abschnitt in backupActions.json!\"\r\n    },\r\n    \r\n    // Dynamische Texte für Wahrheit/Pflicht/Schuld\r\n    truthDareIntro: \"WAHRHEIT, PFLICHT ODER SCHULD: {player} ist an der Reihe. Wenn Sie Schuld wählen, vermeiden Sie die Strafe, aber Ihnen wird eine Schuld zugewiesen, die jederzeit von demjenigen, der das Spiel leitet, eingelöst werden kann (z.B. \\\"Hol mir ein Getränk\\\" oder \\\"Poste eine peinliche Geschichte\\\"). Wählen Sie eine der Optionen!\",\r\n    truthDareNextPlayerIntro: \"WAHRHEIT, PFLICHT ODER SCHULD: {player} ist an der Reihe. Wählen Sie eine der Optionen!\"\r\n  }\r\n};\r\n\r\nexport default translations;","// useSpecialGames.js - Custom hook per gestire i giochi speciali (con supporto modalità giochi)\nimport { useState, useEffect } from 'react';\n\n/**\n * Custom hook per gestire i giochi speciali\n * @param {Object} props - Props passate dal componente principale\n */\nconst useSpecialGames = (props) => {\n  const {\n    t,\n    players,\n    selectedRoom,\n    currentPlayerIndex,\n    actionsCounter,\n    setCurrentAction,\n    loadBackupActions,\n    MAX_ACTIONS_PER_GAME,\n    gameMode,\n    selectedGames\n  } = props;\n\n  // Intervallo minimo di azioni tra un gioco speciale e l'altro\n  const MIN_ACTIONS_BETWEEN_SPECIAL_GAMES = 3; // Ridotto per modalità giochi\n\n  // Stati per i giochi speciali\n  const [activeSpecialGame, setActiveSpecialGame] = useState(null);\n  const [specialGamePlayer, setSpecialGamePlayer] = useState(null);\n  const [specialGamePositions, setSpecialGamePositions] = useState([]);\n  const [specialGamesShown, setSpecialGamesShown] = useState(0);\n  \n  // Stati per gioco 'Truth or Dare'\n  const [truthDarePlayers, setTruthDarePlayers] = useState([]);\n  const [currentTruthDareIndex, setCurrentTruthDareIndex] = useState(0);\n  const [currentTruthDareChoice, setCurrentTruthDareChoice] = useState(null);\n  const [truthDareContent, setTruthDareContent] = useState(null);\n  const [truthDareState, setTruthDareState] = useState(\"choosing\"); // \"choosing\" o \"executing\"\n  \n  // Stati per evitare domande duplicate\n  const [usedTruthQuestions, setUsedTruthQuestions] = useState([]);\n  const [usedDareQuestions, setUsedDareQuestions] = useState([]);\n  \n  // Stati per il gioco \"preferiresti\"\n  const [wouldYouRatherContent, setWouldYouRatherContent] = useState(null);\n  \n  // Stati per il gioco \"Questo o Quello\"\n  const [questoOQuelloContent, setQuestoOQuelloContent] = useState(null);\n  \n  // Stati per timer challenge\n  const [isTimerActive, setIsTimerActive] = useState(false);\n  const [timerSeconds, setTimerSeconds] = useState(20);\n  const [timerChallengeContent, setTimerChallengeContent] = useState(null);\n  \n  // Debiti per Truth or Dare\n  const [debtList, setDebtList] = useState([]);\n  \n  // Inizializza i giochi speciali all'inizio di una nuova partita\n  const initializeSpecialGames = async (roomId) => {\n    console.log(\"=== DEBUG initializeSpecialGames ===\");\n    console.log(\"roomId:\", roomId);\n    console.log(\"gameMode:\", gameMode);\n    console.log(\"selectedGames:\", selectedGames);\n    \n    setActiveSpecialGame(null);\n    setSpecialGamePlayer(null);\n    setTruthDarePlayers([]);\n    setCurrentTruthDareIndex(0);\n    setCurrentTruthDareChoice(null);\n    setTruthDareContent(null);\n    setTruthDareState(\"choosing\");\n    setDebtList([]);\n    setWouldYouRatherContent(null);\n    setQuestoOQuelloContent(null);\n    setIsTimerActive(false);\n    setTimerSeconds(20);\n    setTimerChallengeContent(null);\n    setSpecialGamesShown(0);\n    \n    // Reset delle domande utilizzate\n    setUsedTruthQuestions([]);\n    setUsedDareQuestions([]);\n    \n    // Determina le posizioni in cui dovrebbero apparire i giochi speciali\n    const positions = [];\n    \n    // Se siamo in modalità giochi, usa solo i giochi selezionati\n    if (gameMode === 'games') {\n      const validSpecialGames = getValidSpecialGamesForGameMode();\n      \n      if (validSpecialGames.length === 0) {\n        console.log(\"No games selected for games mode\");\n        setSpecialGamePositions([]);\n        return;\n      }\n      \n      // In modalità giochi, mostriamo i giochi speciali più frequentemente\n      const numSpecialGames = Math.min(20, validSpecialGames.length * 7); // Più giochi speciali\n      \n      // Distribuiamo i giochi speciali in modo più frequente\n      const startPosition = 1; // Iniziamo quasi subito\n      const endPosition = MAX_ACTIONS_PER_GAME - 2;\n      const availableRange = endPosition - startPosition;\n      \n      // Intervallo più piccolo tra i giochi speciali\n      const interval = Math.max(2, Math.floor(availableRange / numSpecialGames));\n      \n      for (let i = 0; i < numSpecialGames; i++) {\n        const basePosition = startPosition + (i * interval);\n        const randomOffset = Math.floor(Math.random() * 2); // Meno randomicità\n        \n        // Cicla attraverso i giochi selezionati\n        const gameType = validSpecialGames[i % validSpecialGames.length];\n        \n        positions.push({\n          position: basePosition + randomOffset,\n          gameType: gameType\n        });\n      }\n    } else {\n      // Logica originale per modalità stanze\n      const validSpecialGames = getValidSpecialGames(roomId);\n      const numSpecialGames = Math.min(10, validSpecialGames.length);\n      \n      const startPosition = 5;\n      const endPosition = MAX_ACTIONS_PER_GAME - 5;\n      const availableRange = endPosition - startPosition;\n      const interval = Math.floor(availableRange / numSpecialGames);\n      const minSpacing = MIN_ACTIONS_BETWEEN_SPECIAL_GAMES;\n      \n      for (let i = 0; i < numSpecialGames; i++) {\n        const basePosition = startPosition + (i * interval);\n        const maxOffset = Math.max(0, Math.min(interval - minSpacing, 3));\n        const randomOffset = Math.floor(Math.random() * maxOffset);\n        \n        positions.push({\n          position: basePosition + randomOffset,\n          gameType: validSpecialGames[i % validSpecialGames.length]\n        });\n      }\n    }\n    \n    console.log(\"Generated special game positions:\", positions);\n    setSpecialGamePositions(positions);\n  };\n  \n  // Ottiene i giochi speciali validi per la modalità giochi\n  const getValidSpecialGamesForGameMode = () => {\n    if (!selectedGames) return [];\n    \n    const validGames = [];\n    \n    if (selectedGames.truthOrDare) {\n      validGames.push(\"truthOrDare\");\n    }\n    \n    if (selectedGames.wouldYouRather) {\n      validGames.push(\"wouldYouRather\");\n    }\n    \n    if (selectedGames.nonHoMai) {\n      validGames.push(\"nonHoMai\");\n    }\n    \n    console.log(\"Valid games for game mode:\", validGames);\n    return validGames;\n  };\n  \n  // Ottiene i giochi speciali validi per la stanza corrente (logica originale)\n  const getValidSpecialGames = (roomId) => {\n    // Default giochi per tutte le stanze\n    const commonGames = [\n      \"truthOrDare\",\n      \"wouldYouRather\",\n      \"questoOQuello\",\n      \"timerChallenge\"\n    ];\n    \n    // Giochi specifici per ogni stanza\n    const roomSpecificGames = {\n      redRoom: [\n        \"infamata\",\n        \"tuttoHaUnPrezzo\",\n        \"tuttiQuelliChe\",\n        \"penitenzaRandom\"\n      ],\n      darkRoom: [\n        \"pointFinger\",\n        \"nonHoMai\",\n        \"chiEPiuProbabile\"\n      ],\n      party: [\n        \"chatDetective\",\n        \"penitenzeGruppo\",\n        \"happyHour\",\n        \"newRule\"\n      ],\n      coppie: [\n        \"oneVsOne\"\n      ],\n      neonRoulette: [\n        \"infamata\",\n        \"pointFinger\",\n        \"chatDetective\",\n        \"tuttoHaUnPrezzo\",\n        \"tuttiQuelliChe\",\n        \"penitenzeGruppo\",\n        \"nonHoMai\",\n        \"chiEPiuProbabile\",\n        \"happyHour\",\n        \"oneVsOne\",\n        \"penitenzaRandom\",\n        \"newRule\"\n      ]\n    };\n    \n    // Combina i giochi comuni con quelli specifici della stanza\n    const validGames = [\n      ...commonGames,\n      ...(roomSpecificGames[roomId] || [])\n    ];\n    \n    // Mescola l'array per avere un ordine casuale\n    return validGames.sort(() => Math.random() - 0.5);\n  };\n  \n  // Verifica se è il momento di mostrare un gioco speciale\n  const shouldShowSpecialGame = (counter, roomId) => {\n    console.log(\"=== DEBUG shouldShowSpecialGame ===\");\n    console.log(\"counter:\", counter);\n    console.log(\"roomId:\", roomId);\n    console.log(\"gameMode:\", gameMode);\n    console.log(\"activeSpecialGame:\", activeSpecialGame);\n    console.log(\"specialGamePositions:\", specialGamePositions);\n    \n    if (!roomId || activeSpecialGame) {\n      console.log(\"Returning false - no roomId or activeSpecialGame already set\");\n      return false;\n    }\n    \n    // Cerca se c'è un gioco speciale programmato per questo contatore\n    const matchingPosition = specialGamePositions.find(\n      pos => pos.position === counter\n    );\n    \n    console.log(\"matchingPosition:\", matchingPosition);\n    \n    return !!matchingPosition;\n  };\n  \n  // Trova il prossimo gioco speciale da mostrare\n  const findNextSpecialGame = (counter, roomId) => {\n    console.log(\"=== DEBUG findNextSpecialGame ===\");\n    console.log(\"counter:\", counter);\n    console.log(\"roomId:\", roomId);\n    console.log(\"gameMode:\", gameMode);\n    \n    if (!roomId) return null;\n    \n    // Cerca se c'è un gioco speciale programmato per questo contatore\n    const matchingPosition = specialGamePositions.find(\n      pos => pos.position === counter\n    );\n    \n    console.log(\"findNextSpecialGame matchingPosition:\", matchingPosition);\n    \n    return matchingPosition ? matchingPosition.gameType : null;\n  };\n  \n  // Gestisce l'attivazione di un gioco speciale\n  const handleSpecialGame = async (gameType) => {\n    console.log(\"=== DEBUG handleSpecialGame ===\");\n    console.log(\"gameType:\", gameType);\n    console.log(\"gameMode:\", gameMode);\n    console.log(\"Current activeSpecialGame:\", activeSpecialGame);\n    \n    // Se c'è già un gioco speciale attivo, non fare nulla\n    if (activeSpecialGame) {\n      console.log(\"Special game already active, returning\");\n      return;\n    }\n    \n    // Carica il file backupActions nella lingua corrente\n    const backupActions = await loadBackupActions();\n    \n    // Verifica se il tipo di gioco speciale esiste nel file di backup\n    if (!backupActions.specialGames || !backupActions.specialGames[gameType]) {\n      console.error(`${t.logMessages.missingSpecialGame.replace('{type}', gameType)}`);\n      return;\n    }\n    \n    // Seleziona un giocatore casuale per il gioco speciale\n    // (potrebbe essere diverso dal giocatore corrente)\n    const randomPlayerIndex = Math.floor(Math.random() * players.length);\n    setSpecialGamePlayer(players[randomPlayerIndex]);\n    \n    // Imposta il gioco speciale attivo\n    setActiveSpecialGame(gameType);\n    \n    // Incrementa il contatore dei giochi speciali mostrati\n    setSpecialGamesShown(prev => prev + 1);\n    \n    console.log(\"Setting activeSpecialGame to:\", gameType);\n    console.log(\"specialGamePlayer set to:\", players[randomPlayerIndex]);\n    \n    // Gestisci la logica specifica per ogni tipo di gioco\n    switch (gameType) {\n      case \"truthOrDare\":\n        // Prepara il gioco Truth or Dare\n        handleTruthOrDareGame(randomPlayerIndex, backupActions);\n        break;\n      \n      case \"wouldYouRather\":\n        // Prepara il gioco \"Preferiresti\"\n        handleWouldYouRatherGame(backupActions, randomPlayerIndex);\n        break;\n        \n      case \"questoOQuello\":\n        // Prepara il gioco \"Questo o Quello\"\n        handleQuestoOQuelloGame(backupActions, randomPlayerIndex);\n        break;\n        \n      case \"timerChallenge\":\n        // Prepara il gioco \"Timer Challenge\"\n        handleTimerChallengeGame(backupActions, randomPlayerIndex);\n        break;\n        \n      case \"nonHoMai\":\n        // Prepara il gioco \"Non ho mai\"\n        handleNonHoMaiGame(backupActions, randomPlayerIndex);\n        break;\n        \n      default:\n        // Per gli altri giochi speciali, mostra semplicemente il messaggio\n        const gameText = backupActions.specialGames[gameType].text;\n        \n        // Sostituisce {player} con il nome del giocatore selezionato casualmente\n        const playerName = players[randomPlayerIndex];\n        const formattedText = gameText.replace(/{player}/g, playerName);\n        \n        // Sostituisci {count} con un numero casuale da 1 a 5 (per giochi che lo richiedono)\n        const randomCount = Math.floor(Math.random() * 5) + 1;\n        const finalText = formattedText.replace(/{count}/g, randomCount);\n        \n        // Imposta l'azione corrente\n        setCurrentAction({ text: finalText });\n        break;\n    }\n  };\n  \n  // Funzione per gestire il gioco \"Truth or Dare\"\n  const handleTruthOrDareGame = (playerIndex, backupActions) => {\n    console.log(\"=== DEBUG handleTruthOrDareGame ===\");\n    console.log(\"playerIndex:\", playerIndex);\n    \n    // Seleziona tutti i giocatori nell'ordine in cui giocheranno\n    const allPlayers = [...players];\n    const startIndex = playerIndex;\n    \n    // Organizziamo i giocatori in ordine, a partire dal giocatore selezionato\n    const orderedPlayers = [\n      ...allPlayers.slice(startIndex),\n      ...allPlayers.slice(0, startIndex)\n    ];\n    \n    // Imposta l'elenco dei giocatori per Truth or Dare\n    setTruthDarePlayers(orderedPlayers);\n    setCurrentTruthDareIndex(0);\n    setCurrentTruthDareChoice(null);\n    setTruthDareContent(null);\n    setTruthDareState(\"choosing\");\n    \n    // Reset delle domande utilizzate quando inizia un nuovo gioco Truth or Dare\n    setUsedTruthQuestions([]);\n    setUsedDareQuestions([]);\n    \n    console.log(\"truthDarePlayers set to:\", orderedPlayers);\n    console.log(\"Reset used questions arrays\");\n    \n    // Ottieni il testo introduttivo dal file di backup o usa uno predefinito\n    const introText = t.truthDareIntro.replace('{player}', orderedPlayers[0]);\n    \n    // Imposta l'azione corrente\n    setCurrentAction({ text: introText });\n  };\n  \n  // Funzione per gestire il gioco \"Non ho mai\"\n  const handleNonHoMaiGame = (backupActions, randomPlayerIndex) => {\n    // Usa il testo dal backup actions o da specialGames\n    const gameText = t.specialGames.nonHoMai;\n    const playerName = players[randomPlayerIndex];\n    const formattedText = gameText.replace(/{player}/g, playerName);\n    \n    // Imposta l'azione corrente\n    setCurrentAction({ text: formattedText });\n  };\n  \n  // Funzione helper per selezionare una domanda non utilizzata\n  const selectUnusedQuestion = (allOptions, usedQuestions) => {\n    console.log(\"=== DEBUG selectUnusedQuestion ===\");\n    console.log(\"Total options:\", allOptions.length);\n    console.log(\"Used questions:\", usedQuestions.length);\n    \n    // Filtra le opzioni escludendo quelle già utilizzate\n    const availableOptions = allOptions.filter(option => \n      !usedQuestions.includes(option)\n    );\n    \n    console.log(\"Available options:\", availableOptions.length);\n    \n    // Se tutte le domande sono state utilizzate, resetta l'array e usa tutte le opzioni\n    if (availableOptions.length === 0) {\n      console.log(\"All questions used, resetting...\");\n      return {\n        selectedContent: allOptions[Math.floor(Math.random() * allOptions.length)],\n        shouldResetUsedList: true\n      };\n    }\n    \n    // Seleziona una domanda casuale tra quelle disponibili\n    const randomIndex = Math.floor(Math.random() * availableOptions.length);\n    const selectedContent = availableOptions[randomIndex];\n    \n    console.log(\"Selected question:\", selectedContent.substring(0, 50) + \"...\");\n    \n    return {\n      selectedContent,\n      shouldResetUsedList: false\n    };\n  };\n  \n  // Funzione per gestire la scelta in Truth or Dare\n  const handleTruthDareChoice = async (choice) => {\n    console.log(\"=== DEBUG handleTruthDareChoice ===\");\n    console.log(\"choice:\", choice);\n    console.log(\"currentTruthDareIndex:\", currentTruthDareIndex);\n    \n    setCurrentTruthDareChoice(choice);\n    setTruthDareState(\"executing\");\n    \n    // Carica il file backupActions nella lingua corrente\n    const backupActions = await loadBackupActions();\n    \n    // Se la scelta è \"debt\", gestisci un debito\n    if (choice === \"debt\") {\n      // Aggiungi il giocatore alla lista dei debiti\n      const currentPlayer = truthDarePlayers[currentTruthDareIndex];\n      \n      // Aggiungi un nuovo debito alla lista\n      setDebtList(prev => [\n        ...prev,\n        {\n          player: currentPlayer,\n          description: t.debts.debtDescription,\n          status: 'active',\n          createdAt: new Date().toISOString()\n        }\n      ]);\n      \n      // Imposta un messaggio specifico per il debito\n      setTruthDareContent(t.truthDareOptions.debtExplanation);\n      \n      // Aggiorna l'azione corrente per riflettere la scelta\n      const debtText = t.specialGames.truthOrDare.debt.replace('{player}', currentPlayer);\n      setCurrentAction({ text: debtText });\n      \n      return;\n    }\n    \n    // Altrimenti, gestisci truth o dare\n    // In modalità giochi usa sempre 'party' come fallback\n    const selectedRoomId = gameMode === 'games' ? 'party' : (selectedRoom?.id || 'party');\n    \n    // Verifica se la stanza corrente ha contenuti truth/dare specifici\n    if (backupActions.truthDareGame && \n        backupActions.truthDareGame[choice] && \n        backupActions.truthDareGame[choice][selectedRoomId]) {\n      \n      // Seleziona una domanda evitando duplicati\n      const allOptions = backupActions.truthDareGame[choice][selectedRoomId];\n      const currentUsedQuestions = choice === \"truth\" ? usedTruthQuestions : usedDareQuestions;\n      \n      const { selectedContent, shouldResetUsedList } = selectUnusedQuestion(allOptions, currentUsedQuestions);\n      \n      // Aggiorna l'array delle domande utilizzate\n      if (choice === \"truth\") {\n        if (shouldResetUsedList) {\n          setUsedTruthQuestions([selectedContent]);\n        } else {\n          setUsedTruthQuestions(prev => [...prev, selectedContent]);\n        }\n      } else {\n        if (shouldResetUsedList) {\n          setUsedDareQuestions([selectedContent]);\n        } else {\n          setUsedDareQuestions(prev => [...prev, selectedContent]);\n        }\n      }\n      \n      // Imposta il contenuto scelto\n      setTruthDareContent(selectedContent);\n      \n      // Aggiorna l'azione corrente per riflettere la scelta\n      const choiceText = choice === \"truth\" \n        ? t.specialGames.truthOrDare.truth\n        : t.specialGames.truthOrDare.dare;\n      \n      const currentPlayer = truthDarePlayers[currentTruthDareIndex];\n      const formattedText = choiceText.replace('{player}', currentPlayer);\n      setCurrentAction({ text: formattedText });\n    } else {\n      // Fallback se non ci sono contenuti specifici per la stanza\n      setTruthDareContent(\"Contenuto non disponibile per questa stanza\");\n    }\n  };\n  \n  // Funzione per gestire il gioco \"Preferiresti\"\n  const handleWouldYouRatherGame = (backupActions, randomPlayerIndex) => {\n    // Verifica se ci sono domande disponibili per la stanza corrente\n    // In modalità giochi usa sempre 'party' come fallback\n    const roomId = gameMode === 'games' ? 'party' : (selectedRoom?.id || 'party');\n    \n    if (backupActions.wouldYouRather && \n        backupActions.wouldYouRather[roomId]) {\n      \n      // Seleziona una domanda casuale per la stanza corrente\n      const options = backupActions.wouldYouRather[roomId];\n      const randomIndex = Math.floor(Math.random() * options.length);\n      const selectedContent = options[randomIndex].text;\n      \n      // Imposta il contenuto selezionato\n      setWouldYouRatherContent(selectedContent);\n      \n      // Ottieni il messaggio per il gioco \"Preferiresti\"\n      const playerName = players[randomPlayerIndex];\n      let gameText = t.specialGames.wouldYouRather.replace('{player}', playerName);\n      \n      // Imposta l'azione corrente\n      setCurrentAction({ \n        text: `${gameText}\\n\\n${selectedContent}\\n\\n${t.wouldYouRatherExplanation}` \n      });\n    } else {\n      // Fallback se non ci sono domande per questa stanza\n      setWouldYouRatherContent(\"Domanda non disponibile per questa stanza\");\n      setCurrentAction({ text: t.specialGames.wouldYouRather.replace('{player}', players[randomPlayerIndex]) });\n    }\n  };\n  \n  // Funzione per gestire il gioco \"Questo o Quello\"\n  const handleQuestoOQuelloGame = (backupActions, randomPlayerIndex) => {\n    // Verifica se ci sono domande disponibili per la stanza corrente\n    const roomId = gameMode === 'games' ? 'party' : (selectedRoom?.id || 'party');\n    \n    if (backupActions.specialGames && \n        backupActions.specialGames.questoOQuello &&\n        backupActions.specialGames.questoOQuello[roomId]) {\n      \n      // Seleziona una domanda casuale per la stanza corrente\n      const options = backupActions.specialGames.questoOQuello[roomId];\n      const randomIndex = Math.floor(Math.random() * options.length);\n      const selectedContent = options[randomIndex];\n      \n      // Imposta il contenuto selezionato\n      setQuestoOQuelloContent(selectedContent);\n      \n      // Ottieni il messaggio introduttivo dal file di backup\n      const introText = backupActions.specialGames.questoOQuello.text || \"QUESTO o QUELLO!\";\n      \n      // Sostituisci {player} con il nome del giocatore selezionato casualmente\n      const playerName = players[randomPlayerIndex];\n      const formattedText = introText.replace(/{player}/g, playerName);\n      \n      // Imposta l'azione corrente\n      setCurrentAction({ \n        text: `${formattedText}\\n\\n${selectedContent}` \n      });\n    } else {\n      // Fallback se non ci sono domande per questa stanza\n      const introText = backupActions.specialGames.questoOQuello.text || \"QUESTO o QUELLO!\";\n      const playerName = players[randomPlayerIndex];\n      const formattedText = introText.replace(/{player}/g, playerName);\n      \n      setQuestoOQuelloContent(\"Domanda non disponibile per questa stanza\");\n      setCurrentAction({ text: formattedText });\n    }\n  };\n  \n  // Funzione per gestire il gioco \"Timer Challenge\"\n  const handleTimerChallengeGame = (backupActions, randomPlayerIndex) => {\n    // Verifica se ci sono sfide disponibili per la stanza corrente\n    const roomId = gameMode === 'games' ? 'party' : (selectedRoom?.id || 'party');\n    \n    if (backupActions.specialGames && \n        backupActions.specialGames.timerChallenge &&\n        backupActions.specialGames.timerChallenge[roomId]) {\n      \n      // Seleziona una sfida casuale per la stanza corrente\n      const options = backupActions.specialGames.timerChallenge[roomId];\n      const randomIndex = Math.floor(Math.random() * options.length);\n      const selectedContent = options[randomIndex];\n      \n      // Imposta il contenuto selezionato\n      setTimerChallengeContent(selectedContent);\n      setIsTimerActive(false);\n      setTimerSeconds(20);\n      \n      // Ottieni il messaggio introduttivo dal file di backup\n      const introText = backupActions.specialGames.timerChallenge.text;\n      \n      // Sostituisci {player} con il nome del giocatore selezionato casualmente\n      const playerName = players[randomPlayerIndex];\n      const formattedText = introText.replace(/{player}/g, playerName);\n      \n      // Imposta l'azione corrente\n      setCurrentAction({ text: formattedText });\n    } else {\n      // Fallback se non ci sono sfide per questa stanza\n      setTimerChallengeContent(\"Sfida non disponibile per questa stanza\");\n      const fallbackText = t.specialGames.timerChallenge.replace('{player}', players[randomPlayerIndex]);\n      setCurrentAction({ text: fallbackText });\n    }\n  };\n  \n  // Funzione per avviare il timer\n  const startTimer = () => {\n    setIsTimerActive(true);\n    setTimerSeconds(20);\n    \n    // Avvia il timer\n    const timer = setInterval(() => {\n      setTimerSeconds(prevSeconds => {\n        if (prevSeconds <= 1) {\n          clearInterval(timer);\n          setIsTimerActive(false);\n          return 0;\n        }\n        return prevSeconds - 1;\n      });\n    }, 1000);\n  };\n  \n  // Funzione per ottenere un messaggio appropriato per il gioco speciale attivo\n  const getSpecialGameMessage = () => {\n    if (!activeSpecialGame) return \"\";\n    \n    switch (activeSpecialGame) {\n      case \"truthOrDare\":\n        if (truthDareState === \"choosing\") {\n          return t.specialGames.truthOrDare.choosing.replace('{player}', truthDarePlayers[currentTruthDareIndex]);\n        } else {\n          return currentTruthDareChoice === \"truth\" \n            ? t.specialGames.truthOrDare.truth.replace('{player}', truthDarePlayers[currentTruthDareIndex])\n            : currentTruthDareChoice === \"dare\"\n              ? t.specialGames.truthOrDare.dare.replace('{player}', truthDarePlayers[currentTruthDareIndex])\n              : t.specialGames.truthOrDare.debt.replace('{player}', truthDarePlayers[currentTruthDareIndex]);\n        }\n        \n      case \"wouldYouRather\":\n        return t.specialGames.wouldYouRather.replace('{player}', specialGamePlayer);\n        \n      case \"questoOQuello\":\n        return t.specialGames.questoOQuello.replace('{player}', specialGamePlayer);\n        \n      case \"timerChallenge\":\n        return t.specialGames.timerChallenge.replace('{player}', specialGamePlayer);\n        \n      case \"nonHoMai\":\n        return t.specialGames.nonHoMai.replace('{player}', specialGamePlayer);\n        \n      default:\n        if (t.specialGames[activeSpecialGame]) {\n          return t.specialGames[activeSpecialGame].replace('{player}', specialGamePlayer);\n        }\n        return \"\";\n    }\n  };\n  \n  // Passa al turno successivo dopo un gioco speciale\n  const nextTurnAfterSpecialGame = (nextTurnCallback) => {\n    console.log(\"=== DEBUG nextTurnAfterSpecialGame ===\");\n    console.log(\"Current activeSpecialGame:\", activeSpecialGame);\n    console.log(\"truthDareState:\", truthDareState);\n    console.log(\"currentTruthDareIndex:\", currentTruthDareIndex);\n    console.log(\"truthDarePlayers length:\", truthDarePlayers.length);\n    console.log(\"gameMode:\", gameMode);\n    \n    // Logica specifica per ogni tipo di gioco\n    if (activeSpecialGame === \"truthOrDare\") {\n      // In modalità giochi, Truth or Dare non gira tra tutti i giocatori\n      // ma fa solo una domanda per volta\n      if (gameMode === 'games') {\n        console.log(\"Games mode - ending truth or dare after one question\");\n        // Termina subito il gioco speciale - il reset avverrà dopo\n      } else {\n        // Modalità stanze - comportamento originale\n        if (currentTruthDareIndex < truthDarePlayers.length - 1) {\n          console.log(\"Moving to next truth/dare player\");\n          // Passa al giocatore successivo\n          setCurrentTruthDareIndex(prev => prev + 1);\n          setCurrentTruthDareChoice(null);\n          setTruthDareContent(null);\n          setTruthDareState(\"choosing\");\n          \n          // Aggiorna il messaggio per il prossimo giocatore\n          const nextPlayer = truthDarePlayers[currentTruthDareIndex + 1];\n          const nextIntroText = t.truthDareNextPlayerIntro.replace('{player}', nextPlayer);\n          setCurrentAction({ text: nextIntroText });\n          \n          return;\n        }\n      }\n    }\n    \n    console.log(\"Ending special game, resetting states\");\n    \n    // Per tutti gli altri giochi speciali o per terminare Truth or Dare\n    setActiveSpecialGame(null);\n    setSpecialGamePlayer(null);\n    setCurrentTruthDareChoice(null);\n    setTruthDareContent(null);\n    setTruthDareState(\"choosing\");\n    setWouldYouRatherContent(null);\n    setQuestoOQuelloContent(null);\n    setIsTimerActive(false);\n    setTimerSeconds(20);\n    setTimerChallengeContent(null);\n    \n    // Reset delle domande utilizzate quando il gioco Truth or Dare finisce completamente\n    if (activeSpecialGame === \"truthOrDare\") {\n      setUsedTruthQuestions([]);\n      setUsedDareQuestions([]);\n      console.log(\"Reset used questions arrays after Truth or Dare game ended\");\n    }\n    \n    console.log(\"Calling nextTurnCallback with true\");\n    \n    // Passa al turno successivo utilizzando il callback fornito\n    if (nextTurnCallback) {\n      nextTurnCallback(true);\n    }\n  };\n  \n  return {\n    // Costanti\n    MIN_ACTIONS_BETWEEN_SPECIAL_GAMES,\n    \n    // Stati dei giochi speciali\n    activeSpecialGame,\n    specialGamePlayer,\n    debtList,\n    truthDarePlayers,\n    currentTruthDareChoice,\n    truthDareContent,\n    truthDareState,\n    wouldYouRatherContent,\n    questoOQuelloContent,\n    isTimerActive,\n    timerSeconds,\n    timerChallengeContent,\n    specialGamePositions,\n    \n    // Stati per domande utilizzate (per debug se necessario)\n    usedTruthQuestions,\n    usedDareQuestions,\n    \n    // Funzioni\n    initializeSpecialGames,\n    shouldShowSpecialGame,\n    findNextSpecialGame,\n    handleSpecialGame,\n    handleTruthDareChoice,\n    getSpecialGameMessage,\n    nextTurnAfterSpecialGame,\n    startTimer\n  };\n};\n\nexport default useSpecialGames;","// useGameLogic.js - Custom hook per gestire lo stato e la logica del gioco\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport translations from './translations';\r\nimport useSpecialGames from './useSpecialGames';\r\n\r\n/**\r\n * Custom hook per gestire tutta la logica e lo stato del gioco\r\n */\r\nconst useGameLogic = () => {\r\n  // Stato per la lingua selezionata (default: italiano)\r\n  const [language, setLanguage] = useState('it');\r\n  // Riferimento alle traduzioni nella lingua corrente\r\n  const t = translations[language];\r\n  \r\n  // Game states: 'welcome', 'gameSelection', 'playerSetup', 'roomSelection', 'playing', 'gameOver', 'paywall', 'languageSelection'\r\n  const [gameState, setGameState] = useState('welcome');\r\n  const [players, setPlayers] = useState([]);\r\n  const [inputPlayers, setInputPlayers] = useState([{ id: 1, name: '' }]);\r\n  const [currentPlayerIndex, setCurrentPlayerIndex] = useState(0);\r\n  const [currentAction, setCurrentAction] = useState(null);\r\n  const [selectedRoom, setSelectedRoom] = useState(null);\r\n  const [previousAction, setPreviousAction] = useState(null);\r\n  \r\n  // Stati per la selezione giochi (usati quando si entra nella stanza \"giochi\")\r\n  const [selectedGames, setSelectedGames] = useState({\r\n    truthOrDare: false,\r\n    wouldYouRather: false,\r\n    nonHoMai: false\r\n  });\r\n  \r\n  // Contatore per le azioni giocate in una partita (nascosto dall'UI)\r\n  const [actionsCounter, setActionsCounter] = useState(0);\r\n  // Costante per il numero massimo di azioni per partita\r\n  const MAX_ACTIONS_PER_GAME = 50;\r\n  \r\n  // State for the loading\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [loadingProgress, setLoadingProgress] = useState(0);\r\n  \r\n  // State for selected room index (for swiper)\r\n  const [currentRoomIndex, setCurrentRoomIndex] = useState(0);\r\n  \r\n  // Generated actions for each room\r\n  const [roomActionsPool, setRoomActionsPool] = useState({\r\n    redRoom: [],\r\n    darkRoom: [],\r\n    coppie: [],\r\n    party: [],\r\n    giochi: [], // Nuovo pool per la stanza giochi\r\n    neonRoulette: []\r\n  });\r\n  \r\n  // Current index for tracking which action to use from the pool\r\n  const [currentActionIndex, setCurrentActionIndex] = useState({\r\n    redRoom: 0,\r\n    darkRoom: 0,\r\n    coppie: 0,\r\n    party: 0,\r\n    giochi: 0,\r\n    neonRoulette: 0\r\n  });\r\n  \r\n  // Stato per le azioni di gruppo\r\n  const [groupActionsPool, setGroupActionsPool] = useState([]);\r\n  // Indici per quando devono apparire le azioni di gruppo\r\n  const [groupActionPositions, setGroupActionPositions] = useState([]);\r\n  // Contatore per le azioni di gruppo mostrate\r\n  const [groupActionsShown, setGroupActionsShown] = useState(0);\r\n  \r\n  // Nuovi stati per il paywall\r\n  const [hasPlayedFreeGame, setHasPlayedFreeGame] = useState(false);\r\n  const [hasPaid, setHasPaid] = useState(false);\r\n  const [selectedPaymentOption, setSelectedPaymentOption] = useState(null);\r\n  const [isProcessingPayment, setIsProcessingPayment] = useState(false);\r\n  \r\n  // Flag per controllare se è stata caricata la prima azione\r\n  const [isFirstActionLoaded, setIsFirstActionLoaded] = useState(false);\r\n  \r\n  // Inizializza lo hook per i giochi speciali\r\n  const specialGames = useSpecialGames({\r\n    t,\r\n    players,\r\n    selectedRoom,\r\n    currentPlayerIndex,\r\n    actionsCounter,\r\n    setCurrentAction,\r\n    loadBackupActions,\r\n    MAX_ACTIONS_PER_GAME,\r\n    gameMode: selectedRoom?.id === 'giochi' ? 'games' : 'rooms',\r\n    selectedGames\r\n  });\r\n  \r\n  // Verifica lo stato del paywall quando il componente si monta\r\n  useEffect(() => {\r\n    // Recupera lo stato del pagamento da localStorage\r\n    const storedHasPaid = localStorage.getItem('hasPaid') === 'true';\r\n    const storedHasPlayedFreeGame = localStorage.getItem('hasPlayedFreeGame') === 'true';\r\n    const storedLanguage = localStorage.getItem('language');\r\n    \r\n    if (storedHasPaid) {\r\n      setHasPaid(true);\r\n    }\r\n    \r\n    if (storedHasPlayedFreeGame) {\r\n      setHasPlayedFreeGame(true);\r\n    }\r\n    \r\n    if (storedLanguage && translations[storedLanguage]) {\r\n      setLanguage(storedLanguage);\r\n    }\r\n  }, []);\r\n  \r\n  // Effetto per caricare la prima domanda quando lo stato è 'playing'\r\n  useEffect(() => {\r\n    if (gameState === 'playing' && selectedRoom && !isFirstActionLoaded) {\r\n      console.log(\"=== DEBUG useEffect for first action ===\");\r\n      console.log(\"gameState:\", gameState);\r\n      console.log(\"selectedRoom:\", selectedRoom?.id);\r\n      console.log(\"isFirstActionLoaded:\", isFirstActionLoaded);\r\n      \r\n      const poolKey = selectedRoom.id;\r\n      console.log(\"poolKey:\", poolKey);\r\n      console.log(\"roomActionsPool for key:\", roomActionsPool[poolKey]?.length);\r\n      \r\n      // Verifica che il pool di azioni sia caricato prima di procedere\r\n      if (roomActionsPool[poolKey] && roomActionsPool[poolKey].length > 0) {\r\n        console.log(\"Pool is ready, loading first action\");\r\n        setTimeout(() => {\r\n          updateCurrentAction();\r\n          setIsFirstActionLoaded(true);\r\n        }, 100);\r\n      } else {\r\n        console.log(\"Pool not ready yet, waiting...\");\r\n        // Se il pool non è ancora pronto, riprova dopo un breve delay\r\n        const retryTimeout = setTimeout(() => {\r\n          if (roomActionsPool[poolKey] && roomActionsPool[poolKey].length > 0) {\r\n            console.log(\"Pool ready on retry, loading first action\");\r\n            updateCurrentAction();\r\n            setIsFirstActionLoaded(true);\r\n          }\r\n        }, 300);\r\n        \r\n        return () => clearTimeout(retryTimeout);\r\n      }\r\n    }\r\n  }, [gameState, selectedRoom, isFirstActionLoaded, roomActionsPool]);\r\n  \r\n  // Funzione per cambiare la lingua dell'app\r\n  const changeLanguage = (newLanguage) => {\r\n    if (translations[newLanguage]) {\r\n      setLanguage(newLanguage);\r\n      localStorage.setItem('language', newLanguage);\r\n      \r\n      // Se si stava visualizzando una stanza, aggiorna la selezione\r\n      if (selectedRoom && currentRoomIndex >= 0) {\r\n        // Trova l'indice della stanza con lo stesso ID nella nuova lingua\r\n        const roomId = selectedRoom.id;\r\n        const newRooms = translations[newLanguage].rooms;\r\n        const newRoomIndex = newRooms.findIndex(room => room.id === roomId);\r\n        \r\n        if (newRoomIndex >= 0) {\r\n          setCurrentRoomIndex(newRoomIndex);\r\n          setSelectedRoom(newRooms[newRoomIndex]);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  \r\n  // Funzione per aprire il selettore di lingua\r\n  const openLanguageSelector = () => {\r\n    setGameState('languageSelection');\r\n  };\r\n  \r\n  // Mostra la schermata di setup giocatori\r\n  const enterPlayerSetup = () => {\r\n    // Verifica se l'utente ha già giocato la partita gratuita e non ha pagato\r\n    if (hasPlayedFreeGame && !hasPaid) {\r\n      setGameState('paywall');\r\n    } else {\r\n      setGameState('playerSetup');\r\n    }\r\n  };\r\n  \r\n  // Funzioni per gestire la selezione dei giochi (per la stanza \"giochi\")\r\n  const toggleGameSelection = (gameType) => {\r\n    setSelectedGames(prev => ({\r\n      ...prev,\r\n      [gameType]: !prev[gameType]\r\n    }));\r\n  };\r\n  \r\n  const proceedWithSelectedGames = () => {\r\n    // Verifica che almeno un gioco sia selezionato\r\n    const hasSelectedGames = Object.values(selectedGames).some(selected => selected);\r\n    \r\n    if (!hasSelectedGames) {\r\n      alert(t.gameSelection.noGamesSelectedError);\r\n      return;\r\n    }\r\n    \r\n    // Avvia la modalità giochi con i giochi selezionati\r\n    startGamesMode();\r\n  };\r\n  \r\n  // Aggiunge un nuovo input box per un giocatore\r\n  const addPlayerInput = () => {\r\n    if (inputPlayers.length < 15) {\r\n      const newId = inputPlayers.length > 0 \r\n        ? Math.max(...inputPlayers.map(p => p.id)) + 1 \r\n        : 1;\r\n      setInputPlayers([...inputPlayers, { id: newId, name: '' }]);\r\n    }\r\n  };\r\n  \r\n  // Aggiorna il nome di un giocatore negli input\r\n  const updatePlayerName = (id, name) => {\r\n    setInputPlayers(\r\n      inputPlayers.map(input => \r\n        input.id === id ? { ...input, name } : input\r\n      )\r\n    );\r\n  };\r\n  \r\n  // Rimuove un input di giocatore\r\n  const removePlayerInput = (id) => {\r\n    if (inputPlayers.length > 1) {\r\n      setInputPlayers(inputPlayers.filter(input => input.id !== id));\r\n    }\r\n  };\r\n  \r\n  // Avvia una nuova partita\r\n  const startGame = () => {\r\n    // Verifica che ci siano almeno 2 giocatori validi\r\n    const validPlayers = inputPlayers\r\n      .filter(input => input.name.trim() !== '')\r\n      .map(input => input.name.trim());\r\n    \r\n    if (validPlayers.length < 2) {\r\n      alert(t.notEnoughPlayersError);\r\n      return;\r\n    }\r\n    \r\n    setPlayers(validPlayers);\r\n    \r\n    // Vai alla selezione stanze\r\n    setGameState('roomSelection');\r\n  };\r\n  \r\n  // Avvia la modalità giochi selezionati\r\n  const startGamesMode = async () => {\r\n    console.log(\"=== DEBUG startGamesMode ===\");\r\n    console.log(\"selectedGames:\", selectedGames);\r\n    \r\n    setIsLoading(true);\r\n    setIsFirstActionLoaded(false);\r\n    \r\n    try {\r\n      // Simulazione caricamento\r\n      for (let i = 0; i <= 100; i += 10) {\r\n        setLoadingProgress(i);\r\n        await new Promise(resolve => setTimeout(resolve, 100));\r\n      }\r\n      \r\n      // Resetta il contatore delle azioni\r\n      setActionsCounter(0);\r\n      \r\n      // Inizializza gli stati per i giochi speciali\r\n      specialGames.initializeSpecialGames('giochi');\r\n      \r\n      // Prepara il pool di azioni per la modalità giochi\r\n      await prepareGamesPool();\r\n      \r\n      // Resetta l'indice delle azioni\r\n      setCurrentActionIndex(prev => ({\r\n        ...prev,\r\n        giochi: 0\r\n      }));\r\n      \r\n      // Resetta l'azione precedente\r\n      setPreviousAction(null);\r\n      \r\n      // Seleziona un giocatore casuale per iniziare\r\n      const randomPlayerIndex = Math.floor(Math.random() * players.length);\r\n      setCurrentPlayerIndex(randomPlayerIndex);\r\n      \r\n      // Attendiamo un momento per assicurarci che gli stati siano aggiornati\r\n      await new Promise(resolve => setTimeout(resolve, 100));\r\n      \r\n      // Vai alla schermata di gioco\r\n      setGameState('playing');\r\n      \r\n      // Carica immediatamente la prima azione\r\n      setTimeout(() => {\r\n        console.log(\"=== Loading first action for games mode ===\");\r\n        updateCurrentAction();\r\n        setIsFirstActionLoaded(true);\r\n      }, 200);\r\n      \r\n    } catch (error) {\r\n      console.error('Errore nell\\'avvio modalità giochi:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Prepara il pool di azioni per la modalità giochi\r\n  const prepareGamesPool = async () => {\r\n    const backupActions = await loadBackupActions();\r\n    const gamesPool = [];\r\n    \r\n    // Conta quanti giochi sono selezionati\r\n    const selectedGamesCount = Object.values(selectedGames).filter(selected => selected).length;\r\n    \r\n    console.log(\"Games mode - adding ONLY selected games\");\r\n    \r\n    // Calcola quante istanze di ogni gioco aggiungere per riempire la partita\r\n    const totalInstances = 50; // Abbastanza per una lunga partita\r\n    const instancesPerGame = Math.floor(totalInstances / selectedGamesCount);\r\n    const extraInstances = totalInstances % selectedGamesCount;\r\n    \r\n    let gameIndex = 0;\r\n    \r\n    if (selectedGames.truthOrDare) {\r\n      const instances = instancesPerGame + (gameIndex < extraInstances ? 1 : 0);\r\n      for (let i = 0; i < instances; i++) {\r\n        gamesPool.push({ text: \"SPECIAL_GAME:truthOrDare\" });\r\n      }\r\n      gameIndex++;\r\n    }\r\n    \r\n    if (selectedGames.wouldYouRather) {\r\n      const instances = instancesPerGame + (gameIndex < extraInstances ? 1 : 0);\r\n      for (let i = 0; i < instances; i++) {\r\n        gamesPool.push({ text: \"SPECIAL_GAME:wouldYouRather\" });\r\n      }\r\n      gameIndex++;\r\n    }\r\n    \r\n    if (selectedGames.nonHoMai) {\r\n      const instances = instancesPerGame + (gameIndex < extraInstances ? 1 : 0);\r\n      for (let i = 0; i < instances; i++) {\r\n        gamesPool.push({ text: \"SPECIAL_GAME:nonHoMai\" });\r\n      }\r\n      gameIndex++;\r\n    }\r\n    \r\n    // Mescola il pool per randomizzare l'ordine dei giochi\r\n    const finalPool = gamesPool.sort(() => Math.random() - 0.5);\r\n    \r\n    // Aggiorna il pool\r\n    setRoomActionsPool(prev => ({\r\n      ...prev,\r\n      giochi: finalPool\r\n    }));\r\n    \r\n    console.log(\"Games pool prepared with\", finalPool.length, \"actions\");\r\n    console.log(\"Selected games count:\", selectedGamesCount);\r\n    console.log(\"Special games instances:\", finalPool.filter(a => a.text.startsWith(\"SPECIAL_GAME:\")).length);\r\n    console.log(\"Normal actions:\", finalPool.filter(a => !a.text.startsWith(\"SPECIAL_GAME:\")).length);\r\n  };\r\n  \r\n  // Gestisce il tasto Enter negli input dei giocatori\r\n  const handleKeyPress = (e, id, index) => {\r\n    if (e.key === 'Enter') {\r\n      if (index === inputPlayers.length - 1) {\r\n        // Se siamo sull'ultimo input, aggiungiamo un nuovo campo\r\n        addPlayerInput();\r\n      } else {\r\n        // Altrimenti spostiamo il focus al campo successivo\r\n        const nextInput = document.getElementById(`player-input-${index + 1}`);\r\n        if (nextInput) nextInput.focus();\r\n      }\r\n    }\r\n  };\r\n  \r\n  // Carica il file backupActions nella lingua corrente\r\n  async function loadBackupActions() {\r\n    try {\r\n      // Determina il nome del file in base alla lingua corrente\r\n      const backupActionsFileName = `backupActions_${language}.json`;\r\n      let backupActionsModule;\r\n      \r\n      // Prima tenta di caricare dalla cartella actions\r\n      try {\r\n        // Importa il file dalla cartella actions\r\n        backupActionsModule = await import(`./actions/${backupActionsFileName}`);\r\n        console.log(`Caricato con successo: ./actions/${backupActionsFileName}`);\r\n        return backupActionsModule.default;\r\n      } catch (error) {\r\n        console.warn(`Errore nel caricamento di ./actions/${backupActionsFileName}:`, error);\r\n        \r\n        // Se non riesce, prova con la lingua inglese come fallback\r\n        try {\r\n          backupActionsModule = await import('./actions/backupActions_en.json');\r\n          console.log('Fallback: Caricato backupActions_en.json');\r\n          return backupActionsModule.default;\r\n        } catch (enError) {\r\n          console.warn('Errore nel caricamento del fallback inglese:', enError);\r\n          \r\n          // Ultimo tentativo: italiano\r\n          try {\r\n            backupActionsModule = await import('./actions/backupActions_it.json');\r\n            console.log('Fallback: Caricato backupActions_it.json');\r\n            return backupActionsModule.default;\r\n          } catch (itError) {\r\n            console.error('Impossibile caricare qualsiasi file di backup:', itError);\r\n            return {}; // Restituisce un oggetto vuoto se tutti i tentativi falliscono\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Errore generale nel caricamento dei file backupActions:', error);\r\n      return {}; // Restituisce un oggetto vuoto in caso di errore generale\r\n    }\r\n  }\r\n  \r\n  // Seleziona una stanza e prepara il gioco\r\n  const selectRoom = async (room) => {\r\n    console.log(\"=== DEBUG selectRoom ===\");\r\n    console.log(\"Selected room:\", room.id);\r\n    \r\n    setSelectedRoom(room);\r\n    \r\n    // Se la stanza selezionata è \"giochi\", mostra la schermata di selezione giochi\r\n    if (room.id === 'giochi') {\r\n      // Reset della selezione dei giochi\r\n      setSelectedGames({\r\n        truthOrDare: false,\r\n        wouldYouRather: false,\r\n        nonHoMai: false\r\n      });\r\n      setGameState('gameSelection');\r\n      return;\r\n    }\r\n    \r\n    setIsLoading(true);\r\n    setIsFirstActionLoaded(false);\r\n    \r\n    try {\r\n      // Carica il file backupActions nella lingua corrente\r\n      const backupActions = await loadBackupActions();\r\n      \r\n      // Simulazione caricamento\r\n      for (let i = 0; i <= 100; i += 10) {\r\n        setLoadingProgress(i);\r\n        await new Promise(resolve => setTimeout(resolve, 100));\r\n      }\r\n      \r\n      // Resetta il contatore delle azioni\r\n      setActionsCounter(0);\r\n      \r\n      // Inizializza gli stati per i giochi speciali\r\n      specialGames.initializeSpecialGames(room.id);\r\n      \r\n      // Carica le azioni di gruppo dal backup\r\n      if (backupActions.groupActions && backupActions.groupActions.length > 0) {\r\n        // Mescola le azioni di gruppo e seleziona fino a 15 per questa partita\r\n        const shuffledGroupActions = [...backupActions.groupActions]\r\n          .sort(() => Math.random() - 0.5)\r\n          .slice(0, 15);\r\n        \r\n        setGroupActionsPool(shuffledGroupActions);\r\n        \r\n        // Determina in quali posizioni dovrebbero apparire le azioni di gruppo\r\n        const positions = [];\r\n        \r\n        // Dividiamo la partita in segmenti per distribuire le azioni di gruppo\r\n        // Escludiamo le prime 2 azioni e le ultime 5 per non avere azioni di gruppo all'inizio o alla fine\r\n        const startPosition = 2;\r\n        const endPosition = MAX_ACTIONS_PER_GAME - 5;\r\n        const availableRange = endPosition - startPosition;\r\n        \r\n        // Calcoliamo quante azioni normali dovrebbero esserci tra ogni azione di gruppo\r\n        // Per avere 8 azioni di gruppo, avremo bisogno di 7 intervalli\r\n        const interval = Math.floor(availableRange / 8);\r\n        \r\n        // Garantiamo almeno 2 azioni normali tra ogni azione di gruppo\r\n        const minSpacing = 2;\r\n        \r\n        // Generiamo le 8 posizioni con un po' di randomicità ma mantenendo la distanza minima\r\n        for (let i = 0; i < 8; i++) {\r\n          // Base position nel suo segmento\r\n          const basePosition = startPosition + (i * interval);\r\n          \r\n          // Aggiungiamo un po' di randomicità ma manteniamo la distanza minima\r\n          // La randomicità è limitata per non sconfinare nel segmento successivo\r\n          const maxOffset = Math.max(0, Math.min(interval - minSpacing, 3));\r\n          const randomOffset = Math.floor(Math.random() * maxOffset);\r\n          \r\n          positions.push(basePosition + randomOffset);\r\n        }\r\n        \r\n        setGroupActionPositions(positions);\r\n        setGroupActionsShown(0);\r\n      }\r\n      \r\n      // Creiamo una variabile temporanea per il nuovo pool di azioni\r\n      let newRoomActionsPool = {};\r\n      \r\n      // Se è la modalità Neon Roulette, combina azioni da tutte le altre stanze\r\n      if (room.id === 'neonRoulette') {\r\n        // Preparazione degli array per le azioni da ciascuna stanza\r\n        let redRoomActions = [];\r\n        let darkRoomActions = [];\r\n        let coppieActions = [];\r\n        let partyActions = [];\r\n        let specialGameActions = [];\r\n        \r\n        // Raccogli azioni dal file backup per ogni stanza\r\n        if (backupActions.redRoom && backupActions.redRoom.length > 0) {\r\n          redRoomActions = [...backupActions.redRoom];\r\n        }\r\n        \r\n        if (backupActions.darkRoom && backupActions.darkRoom.length > 0) {\r\n          darkRoomActions = [...backupActions.darkRoom];\r\n        }\r\n        \r\n        if (backupActions.coppie && backupActions.coppie.length > 0) {\r\n          coppieActions = [...backupActions.coppie];\r\n        }\r\n        \r\n        if (backupActions.party && backupActions.party.length > 0) {\r\n          partyActions = [...backupActions.party];\r\n        }\r\n        \r\n        // Raccogliamo anche le azioni dai giochi speciali\r\n        if (backupActions.specialGames) {\r\n          // Raccogliamo tutte le azioni dei giochi speciali\r\n          Object.values(backupActions.specialGames).forEach(gameData => {\r\n            if (typeof gameData === 'object' && gameData.text) {\r\n              specialGameActions.push({ text: gameData.text });\r\n            }\r\n            \r\n            // Per i giochi con sottosezioni (come tuttoHaUnPrezzo o tuttiQuelliChe)\r\n            if (typeof gameData === 'object') {\r\n              if (gameData.redRoom && Array.isArray(gameData.redRoom)) {\r\n                specialGameActions = [...specialGameActions, ...gameData.redRoom.map(text => ({ text }))];\r\n              }\r\n              if (gameData.darkRoom && Array.isArray(gameData.darkRoom)) {\r\n                specialGameActions = [...specialGameActions, ...gameData.darkRoom.map(text => ({ text }))];\r\n              }\r\n              if (gameData.party && Array.isArray(gameData.party)) {\r\n                specialGameActions = [...specialGameActions, ...gameData.party.map(text => ({ text }))];\r\n              }\r\n              if (gameData.rules && Array.isArray(gameData.rules)) {\r\n                specialGameActions = [...specialGameActions, ...gameData.rules.map(text => ({ text }))];\r\n              }\r\n              if (gameData.actions && Array.isArray(gameData.actions)) {\r\n                specialGameActions = [...specialGameActions, ...gameData.actions.map(text => ({ text }))];\r\n              }\r\n            }\r\n          });\r\n        }\r\n        \r\n        // Se qualche categoria ha poche o nessuna azione, usa il fallback\r\n        const roomContent = {\r\n          redRoom: { text: t.noActionAvailable },\r\n          darkRoom: { text: t.noActionAvailable },\r\n          coppie: { text: t.noActionAvailable },\r\n          party: { text: t.noActionAvailable }\r\n        };\r\n        \r\n        if (redRoomActions.length < 5 && roomContent.redRoom) {\r\n          redRoomActions = [...redRoomActions, ...roomContent.redRoom];\r\n        }\r\n        \r\n        if (darkRoomActions.length < 5 && roomContent.darkRoom) {\r\n          darkRoomActions = [...darkRoomActions, ...roomContent.darkRoom];\r\n        }\r\n        \r\n        if (coppieActions.length < 5 && roomContent.coppie) {\r\n          coppieActions = [...coppieActions, ...roomContent.coppie];\r\n        }\r\n        \r\n        if (partyActions.length < 5 && roomContent.party) {\r\n          partyActions = [...partyActions, ...roomContent.party];\r\n        }\r\n        \r\n        // Mescola ciascun gruppo di azioni separatamente\r\n        redRoomActions = redRoomActions.sort(() => Math.random() - 0.5);\r\n        darkRoomActions = darkRoomActions.sort(() => Math.random() - 0.5);\r\n        coppieActions = coppieActions.sort(() => Math.random() - 0.5);\r\n        partyActions = partyActions.sort(() => Math.random() - 0.5);\r\n        specialGameActions = specialGameActions.sort(() => Math.random() - 0.5);\r\n        \r\n        // Calcola quante azioni prendere da ciascuna categoria per un totale di circa 100\r\n        const maxPerCategory = 20; // 20 azioni per categoria per fare spazio ai giochi speciali\r\n        \r\n        // Prendi un numero bilanciato di azioni da ciascuna categoria\r\n        const selectedRedRoomActions = redRoomActions.slice(0, Math.min(maxPerCategory, redRoomActions.length));\r\n        const selectedDarkRoomActions = darkRoomActions.slice(0, Math.min(maxPerCategory, darkRoomActions.length));\r\n        const selectedCoppieActions = coppieActions.slice(0, Math.min(maxPerCategory, coppieActions.length));\r\n        const selectedPartyActions = partyActions.slice(0, Math.min(maxPerCategory, partyActions.length));\r\n        const selectedSpecialGameActions = specialGameActions.slice(0, Math.min(maxPerCategory, specialGameActions.length));\r\n        \r\n        // Combina tutte le azioni selezionate\r\n        const combinedActions = [\r\n          ...selectedRedRoomActions,\r\n          ...selectedDarkRoomActions,\r\n          ...selectedCoppieActions,\r\n          ...selectedPartyActions,\r\n          ...selectedSpecialGameActions\r\n        ];\r\n        \r\n        // Mescola le azioni combinate\r\n        const shuffledActions = combinedActions.sort(() => Math.random() - 0.5);\r\n        \r\n        console.log(t.logMessages.neonRouletteStats);\r\n        console.log(t.logMessages.redRoomStats.replace('{count}', selectedRedRoomActions.length));\r\n        console.log(t.logMessages.darkRoomStats.replace('{count}', selectedDarkRoomActions.length));\r\n        console.log(t.logMessages.coppieStats.replace('{count}', selectedCoppieActions.length));\r\n        console.log(t.logMessages.partyStats.replace('{count}', selectedPartyActions.length));\r\n        console.log(\"Special Games: \" + selectedSpecialGameActions.length + \" azioni\");\r\n        console.log(t.logMessages.totalStats.replace('{count}', shuffledActions.length));\r\n        \r\n        newRoomActionsPool = {\r\n          ...roomActionsPool,\r\n          neonRoulette: shuffledActions\r\n        };\r\n      } \r\n      // Altrimenti, carica le azioni normali della stanza\r\n      else {\r\n        // Ottieni azioni dal backup file\r\n        const backupActionsForRoom = backupActions[room.id] || [];\r\n        \r\n        if (backupActionsForRoom.length > 0) {\r\n          // Mescola e seleziona azioni casuali\r\n          const shuffledBackupActions = [...backupActionsForRoom]\r\n            .sort(() => Math.random() - 0.5)\r\n            .slice(0, Math.max(MAX_ACTIONS_PER_GAME * 2, 50));\r\n          \r\n          newRoomActionsPool = {\r\n            ...roomActionsPool,\r\n            [room.id]: shuffledBackupActions\r\n          };\r\n        } else {\r\n          // Se non ci sono azioni nel backup, almeno inizializza con un array vuoto\r\n          newRoomActionsPool = {\r\n            ...roomActionsPool,\r\n            [room.id]: []\r\n          };\r\n        }\r\n      }\r\n      \r\n      console.log(\"=== DEBUG newRoomActionsPool ===\");\r\n      console.log(\"Room:\", room.id);\r\n      console.log(\"Actions count:\", newRoomActionsPool[room.id]?.length);\r\n      console.log(\"First action:\", newRoomActionsPool[room.id]?.[0]?.text?.substring(0, 50));\r\n      \r\n      // Aggiorna tutti gli stati necessari in una sola operazione\r\n      setRoomActionsPool(newRoomActionsPool);\r\n      \r\n      // Resetta l'indice delle azioni\r\n      setCurrentActionIndex(prev => ({\r\n        ...prev,\r\n        [room.id]: 0\r\n      }));\r\n      \r\n      // Resetta l'azione precedente\r\n      setPreviousAction(null);\r\n      \r\n      // Seleziona un giocatore casuale per iniziare\r\n      const randomPlayerIndex = Math.floor(Math.random() * players.length);\r\n      setCurrentPlayerIndex(randomPlayerIndex);\r\n      \r\n      // Attendiamo un momento per assicurarci che gli stati siano aggiornati\r\n      await new Promise(resolve => setTimeout(resolve, 100));\r\n      \r\n      // Vai alla schermata di gioco\r\n      setGameState('playing');\r\n      \r\n      // Carica immediatamente la prima azione dopo aver impostato lo stato\r\n      setTimeout(() => {\r\n        console.log(\"=== Loading first action directly ===\");\r\n        console.log(\"Pool ready:\", newRoomActionsPool[room.id]?.length);\r\n        if (newRoomActionsPool[room.id] && newRoomActionsPool[room.id].length > 0) {\r\n          console.log(\"Calling updateCurrentAction directly\");\r\n          updateCurrentActionWithPool(newRoomActionsPool);\r\n          setIsFirstActionLoaded(true);\r\n        }\r\n      }, 200);\r\n      \r\n    } catch (error) {\r\n      console.error('Errore:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Versione di updateCurrentAction che accetta il pool come parametro\r\n  const updateCurrentActionWithPool = async (poolToUse = null) => {\r\n    const actualPool = poolToUse || roomActionsPool;\r\n    const roomId = selectedRoom?.id;\r\n    \r\n    if (!roomId) return;\r\n    \r\n    console.log(\"=== DEBUG updateCurrentActionWithPool ===\");\r\n    console.log(\"roomId:\", roomId);\r\n    console.log(\"actionsCounter:\", actionsCounter);\r\n    console.log(\"poolToUse provided:\", !!poolToUse);\r\n    console.log(\"actualPool for room:\", actualPool[roomId]?.length);\r\n    \r\n    // Carica le azioni dal file di backup\r\n    const backupActions = await loadBackupActions();\r\n\r\n    // In modalità giochi, mostra solo i giochi speciali selezionati\r\n    if (roomId === 'giochi') {\r\n      const currentPool = actualPool[roomId];\r\n      let index = currentActionIndex[roomId];\r\n      \r\n      if (!currentPool || currentPool.length === 0) {\r\n        setCurrentAction({ text: t.noActionAvailable });\r\n        setActionsCounter(prev => prev + 1);\r\n        return;\r\n      }\r\n      \r\n      // Se abbiamo esaurito le azioni, ricomincia dal primo\r\n      let adjustedIndex = index % currentPool.length;\r\n      \r\n      // Ottieni l'azione\r\n      const currentPoolAction = currentPool[adjustedIndex];\r\n      let actionText = currentPoolAction.text;\r\n      \r\n      // Controlla se è un gioco speciale\r\n      if (actionText.startsWith(\"SPECIAL_GAME:\")) {\r\n        const gameType = actionText.replace(\"SPECIAL_GAME:\", \"\");\r\n        console.log(\"Triggering special game from games mode:\", gameType);\r\n        \r\n        // Attiva il gioco speciale\r\n        await specialGames.handleSpecialGame(gameType);\r\n        return;\r\n      }\r\n      \r\n      // Gestisci il segnaposto playerB per azioni normali\r\n      if (actionText.includes(\"{playerB}\")) {\r\n        const currentPlayer = players[currentPlayerIndex];\r\n        let otherPlayers = players.filter(player => player !== currentPlayer);\r\n        \r\n        if (otherPlayers.length > 0) {\r\n          const randomPlayerIndex = Math.floor(Math.random() * otherPlayers.length);\r\n          const randomPlayerName = otherPlayers[randomPlayerIndex];\r\n          actionText = actionText.replace(/{playerB}/g, randomPlayerName);\r\n        } else {\r\n          actionText = actionText.replace(/{playerB}/g, \"qualcun altro\");\r\n        }\r\n      }\r\n      \r\n      // Salva l'azione corrente per confrontarla la prossima volta\r\n      setPreviousAction(currentPoolAction.text);\r\n      \r\n      // Imposta l'azione corrente\r\n      setCurrentAction({ text: actionText });\r\n      \r\n      // Incrementa il contatore delle azioni\r\n      setActionsCounter(prev => prev + 1);\r\n      \r\n      return;\r\n    }\r\n\r\n    // Codice originale per modalità stanze...\r\n    // Verifica se è il momento di mostrare un'azione di gruppo\r\n    if (groupActionsPool.length > 0 && \r\n        groupActionPositions.includes(actionsCounter) && \r\n        groupActionsShown < 8) {\r\n      \r\n      // Seleziona un'azione di gruppo casuale\r\n      const randomIndex = Math.floor(Math.random() * groupActionsPool.length);\r\n      const groupAction = groupActionsPool[randomIndex];\r\n      \r\n      // Rimuovi questa azione dal pool per evitare duplicati\r\n      const updatedPool = [...groupActionsPool];\r\n      updatedPool.splice(randomIndex, 1);\r\n      setGroupActionsPool(updatedPool);\r\n      \r\n      // Imposta l'azione di gruppo come azione corrente\r\n      setCurrentAction({ text: groupAction.text });\r\n      \r\n      // Incrementa il contatore di azioni di gruppo mostrate\r\n      setGroupActionsShown(prev => prev + 1);\r\n      \r\n      // Incrementa il contatore delle azioni\r\n      setActionsCounter(prev => prev + 1);\r\n      \r\n      return;\r\n    }\r\n    \r\n    // Verifica se è il momento di mostrare un gioco speciale\r\n    console.log(\"Checking for special game...\");\r\n    if (specialGames.shouldShowSpecialGame(actionsCounter, roomId)) {\r\n      console.log(\"Should show special game!\");\r\n      \r\n      // Trova il prossimo gioco da mostrare\r\n      const nextGameToShow = specialGames.findNextSpecialGame(actionsCounter, roomId);\r\n      console.log(\"Next game to show:\", nextGameToShow);\r\n      \r\n      // Se abbiamo trovato un gioco da mostrare, mostralo\r\n      if (nextGameToShow) {\r\n        console.log(\"Handling special game:\", nextGameToShow);\r\n        await specialGames.handleSpecialGame(nextGameToShow);\r\n        return;\r\n      }\r\n    }\r\n    \r\n    const currentPool = actualPool[roomId];\r\n    let index = currentActionIndex[roomId];\r\n    \r\n    console.log(\"=== DEBUG normal action selection ===\");\r\n    console.log(\"currentPool length:\", currentPool?.length);\r\n    console.log(\"index:\", index);\r\n    \r\n    // Se non ci sono azioni nel pool, usa quelle predefinite\r\n    if (!currentPool || currentPool.length === 0) {\r\n      console.log(t.logMessages.noActionsInPool);\r\n      \r\n      // Per Neon Roulette, raccogliamo azioni dal fallback di tutte le stanze in modo bilanciato\r\n      if (roomId === 'neonRoulette') {\r\n        // Crea un pool di fallback per ogni stanza\r\n        const fallbackTexts = [\r\n          { text: t.noActionAvailable },\r\n          { text: t.noActionAvailable },\r\n          { text: t.noActionAvailable }\r\n        ];\r\n        \r\n        if (fallbackTexts.length > 0) {\r\n          const randomIndex = Math.floor(Math.random() * fallbackTexts.length);\r\n          setCurrentAction({ text: fallbackTexts[randomIndex].text });\r\n        } else {\r\n          setCurrentAction({ text: t.noActionAvailable });\r\n        }\r\n      } \r\n      // Per altre stanze, usa il fallback normale\r\n      else {\r\n        setCurrentAction({ text: t.noActionAvailable });\r\n      }\r\n      \r\n      // Incrementa il contatore delle azioni (anche per il fallback)\r\n      setActionsCounter(prev => prev + 1);\r\n      \r\n      return;\r\n    }\r\n    \r\n    // Se abbiamo esaurito le azioni, ricomincia\r\n    let adjustedIndex = index % currentPool.length;\r\n    \r\n    // Verifica se è la stessa dell'azione precedente ed evita duplicati\r\n    if (previousAction !== null) {\r\n      // Prova fino a 5 volte a trovare un'azione diversa (per evitare loop infiniti)\r\n      let attempts = 0;\r\n      let tempAction = currentPool[adjustedIndex].text;\r\n      \r\n      while (tempAction === previousAction && attempts < 5 && currentPool.length > 1) {\r\n        // Incrementa l'indice e prova con un'altra azione\r\n        index = (index + 1) % currentPool.length;\r\n        adjustedIndex = index;\r\n        tempAction = currentPool[adjustedIndex].text;\r\n        attempts++;\r\n      }\r\n      \r\n      // Aggiorna l'indice se è stato cambiato\r\n      if (adjustedIndex !== currentActionIndex[roomId]) {\r\n        setCurrentActionIndex(prev => ({\r\n          ...prev,\r\n          [roomId]: adjustedIndex\r\n        }));\r\n      }\r\n    }\r\n    \r\n    // Ottieni l'azione\r\n    let actionText = currentPool[adjustedIndex].text;\r\n    \r\n    console.log(\"=== DEBUG selected action ===\");\r\n    console.log(\"adjustedIndex:\", adjustedIndex);\r\n    console.log(\"actionText:\", actionText?.substring(0, 100));\r\n    \r\n    // Gestisci il segnaposto playerB\r\n    if (actionText.includes(\"{playerB}\")) {\r\n      // Ottieni il nome del giocatore corrente\r\n      const currentPlayer = players[currentPlayerIndex];\r\n      \r\n      // Crea una lista di tutti gli altri giocatori (escluso quello corrente)\r\n      let otherPlayers = players.filter(player => player !== currentPlayer);\r\n      \r\n      if (otherPlayers.length > 0) {\r\n        // Seleziona un giocatore casuale tra gli altri\r\n        const randomPlayerIndex = Math.floor(Math.random() * otherPlayers.length);\r\n        const randomPlayerName = otherPlayers[randomPlayerIndex];\r\n        \r\n        // Sostituisci il segnaposto con il nome del giocatore scelto\r\n        actionText = actionText.replace(/{playerB}/g, randomPlayerName);\r\n      } else {\r\n        // Fallback se non ci sono altri giocatori\r\n        actionText = actionText.replace(/{playerB}/g, \"qualcun altro\");\r\n      }\r\n    }\r\n    \r\n    // Controlla prima se la frase contiene un punto interrogativo\r\n    if (actionText.includes(\"?\")) {\r\n      // Espressione regolare per catturare domande con penalità alla fine\r\n      const questionPenaltyRegex = /\\?.*?(\\d+)\\s*penal(i|i)t(à|a)/i;\r\n      const match = actionText.match(questionPenaltyRegex);\r\n      \r\n      if (match) {\r\n        const penaltyCount = match[1];\r\n        \r\n        // Scegli una formulazione casuale\r\n        const randomQuestionAlt = t.penaltyAlternatives.questions[\r\n          Math.floor(Math.random() * t.penaltyAlternatives.questions.length)\r\n        ].replace('{count}', penaltyCount);\r\n        \r\n        // Sostituisci tutto ciò che viene dopo ? fino a \"penalità\" con la nuova formulazione\r\n        actionText = actionText.replace(/\\?(.*?)(\\d+)\\s*penal(i|i)t(à|a)/i, randomQuestionAlt);\r\n      }\r\n    }\r\n    // Se non è una domanda, controlla se termina con \"oppure X penalità\"\r\n    else {\r\n      const penaltyRegex = /\\s(oppure|o saranno|o)\\s*(\\d+)\\s*penal(i|i)t(à|a)$/i;\r\n      const match = actionText.match(penaltyRegex);\r\n      \r\n      if (match) {\r\n        const penaltyCount = match[2]; // Il secondo gruppo è il numero\r\n        \r\n        // Scegli una formulazione casuale\r\n        const randomAlt = t.penaltyAlternatives.statements[\r\n          Math.floor(Math.random() * t.penaltyAlternatives.statements.length)\r\n        ].replace('{count}', penaltyCount);\r\n        \r\n        // Sostituisci \"oppure X penalità\" con la nuova formulazione\r\n        actionText = actionText.replace(penaltyRegex, ` ${randomAlt}`);\r\n      }\r\n    }\r\n    \r\n    // Salva l'azione corrente per confrontarla la prossima volta\r\n    setPreviousAction(currentPool[adjustedIndex].text);\r\n    \r\n    // Imposta l'azione corrente\r\n    setCurrentAction({ text: actionText });\r\n    \r\n    console.log(\"=== DEBUG final action set ===\");\r\n    console.log(\"Final actionText:\", actionText?.substring(0, 100));\r\n    \r\n    // Incrementa il contatore delle azioni\r\n    setActionsCounter(prev => prev + 1);\r\n  };\r\n  \r\n  // Funzione dedicata per aggiornare l'azione corrente (versione originale per i turni successivi)\r\n  const updateCurrentAction = () => updateCurrentActionWithPool(null);\r\n  \r\n  // Passa al turno successivo\r\n  const nextTurn = (afterSpecialAction = false) => {\r\n    const roomId = selectedRoom?.id;\r\n    \r\n    console.log(\"=== DEBUG nextTurn ===\");\r\n    console.log(\"afterSpecialAction:\", afterSpecialAction);\r\n    console.log(\"activeSpecialGame:\", specialGames.activeSpecialGame);\r\n    console.log(\"actionsCounter:\", actionsCounter);\r\n    console.log(\"roomId:\", roomId);\r\n    \r\n    // Verifica se il numero massimo di azioni è stato raggiunto\r\n    if (actionsCounter >= MAX_ACTIONS_PER_GAME - 1) {\r\n      // Segna che l'utente ha giocato la partita gratuita\r\n      setHasPlayedFreeGame(true);\r\n      localStorage.setItem('hasPlayedFreeGame', 'true');\r\n      \r\n      // Vai direttamente al game over\r\n      setGameState('gameOver');\r\n      return;\r\n    }\r\n    \r\n    // Incrementa l'indice per la prossima volta, ma solo se non siamo in una fase speciale\r\n    if (!specialGames.activeSpecialGame || afterSpecialAction) {\r\n      setCurrentActionIndex(prev => ({\r\n        ...prev,\r\n        [roomId]: prev[roomId] + 1\r\n      }));\r\n    }\r\n    \r\n    // Se c'è solo un giocatore, non cambia\r\n    if (players.length <= 1) {\r\n      setTimeout(() => {\r\n        updateCurrentAction();\r\n      }, 50);\r\n      return;\r\n    }\r\n    \r\n    // Se non siamo in un turno speciale o stiamo procedendo dopo un'azione speciale,\r\n    // seleziona un nuovo giocatore casuale\r\n    if (!specialGames.activeSpecialGame || afterSpecialAction) {\r\n      // Seleziona un giocatore casuale diverso da quello attuale\r\n      let nextPlayerIndex;\r\n      do {\r\n        nextPlayerIndex = Math.floor(Math.random() * players.length);\r\n      } while (nextPlayerIndex === currentPlayerIndex);\r\n      \r\n      setCurrentPlayerIndex(nextPlayerIndex);\r\n    }\r\n    \r\n    // Piccolo timeout per assicurarsi che l'indice sia aggiornato prima di chiamare updateCurrentAction\r\n    setTimeout(() => {\r\n      updateCurrentAction();\r\n    }, 50);\r\n  };\r\n  \r\n  // Funzione per continuare dopo un'azione speciale\r\n  const nextTurnAfterSpecialGame = () => {\r\n    specialGames.nextTurnAfterSpecialGame(nextTurn);\r\n  };\r\n  \r\n  // Navigazione tra le schermate\r\n  const goBack = () => {\r\n    switch (gameState) {\r\n      case 'gameSelection':\r\n        setGameState('roomSelection');\r\n        break;\r\n      case 'playerSetup':\r\n        setGameState('welcome');\r\n        break;\r\n      case 'roomSelection':\r\n        setGameState('playerSetup');\r\n        break;\r\n      case 'playing':\r\n        setGameState('roomSelection');\r\n        break;\r\n      case 'gameOver':\r\n        // Se l'utente ha già giocato e non ha pagato, mostra il paywall\r\n        if (hasPlayedFreeGame && !hasPaid) {\r\n          setGameState('paywall');\r\n        } else {\r\n          setGameState('roomSelection');\r\n        }\r\n        break;\r\n      case 'paywall':\r\n        setGameState('welcome');\r\n        break;\r\n      case 'languageSelection':\r\n        setGameState('welcome');\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  \r\n  // Resetta il gioco\r\n  const resetGame = () => {\r\n    setGameState('welcome');\r\n    setPlayers([]);\r\n    setInputPlayers([{ id: 1, name: '' }]);\r\n    setCurrentPlayerIndex(0);\r\n    setCurrentAction(null);\r\n    setSelectedRoom(null);\r\n    setPreviousAction(null);\r\n    setActionsCounter(0);\r\n    setIsFirstActionLoaded(false);\r\n    setSelectedGames({\r\n      truthOrDare: false,\r\n      wouldYouRather: false,\r\n      nonHoMai: false\r\n    });\r\n    \r\n    // Resetta le azioni di gruppo\r\n    setGroupActionsPool([]);\r\n    setGroupActionPositions([]);\r\n    setGroupActionsShown(0);\r\n  };\r\n  \r\n  // Seleziona un'opzione di pagamento\r\n  const selectPaymentOption = (option) => {\r\n    setSelectedPaymentOption(option);\r\n  };\r\n  \r\n  // Processa il pagamento\r\n  const processPayment = () => {\r\n    if (!selectedPaymentOption) return;\r\n    \r\n    setIsProcessingPayment(true);\r\n    \r\n    // Simulazione del processo di pagamento\r\n    setTimeout(() => {\r\n      // Imposta hasPaid a true e salva in localStorage\r\n      setHasPaid(true);\r\n      localStorage.setItem('hasPaid', 'true');\r\n      \r\n      setIsProcessingPayment(false);\r\n      setSelectedPaymentOption(null);\r\n      \r\n      // Vai alla schermata iniziale\r\n      setGameState('welcome');\r\n    }, 2000);\r\n  };\r\n  \r\n  // Reimposta lo stato di gioco per test\r\n  const resetPaywallState = () => {\r\n    localStorage.removeItem('hasPaid');\r\n    localStorage.removeItem('hasPlayedFreeGame');\r\n    setHasPaid(false);\r\n    setHasPlayedFreeGame(false);\r\n    resetGame();\r\n  };\r\n\r\n  // Export everything that will be needed by the UI component\r\n  return {\r\n    // Constants\r\n    MAX_ACTIONS_PER_GAME,\r\n    MIN_ACTIONS_BETWEEN_SPECIAL_GAMES: specialGames.MIN_ACTIONS_BETWEEN_SPECIAL_GAMES,\r\n    \r\n    // State\r\n    language,\r\n    t,\r\n    gameState,\r\n    players,\r\n    inputPlayers,\r\n    currentPlayerIndex,\r\n    currentAction,\r\n    selectedRoom,\r\n    isLoading,\r\n    loadingProgress,\r\n    currentRoomIndex,\r\n    hasPlayedFreeGame,\r\n    hasPaid,\r\n    selectedPaymentOption,\r\n    isProcessingPayment,\r\n    actionsCounter,\r\n    \r\n    // Stati per la selezione giochi (della stanza giochi)\r\n    selectedGames,\r\n    \r\n    // Stati dai giochi speciali\r\n    activeSpecialGame: specialGames.activeSpecialGame,\r\n    specialGamePlayer: specialGames.specialGamePlayer,\r\n    debtList: specialGames.debtList,\r\n    truthDarePlayers: specialGames.truthDarePlayers,\r\n    currentTruthDareChoice: specialGames.currentTruthDareChoice,\r\n    truthDareContent: specialGames.truthDareContent,\r\n    truthDareState: specialGames.truthDareState,\r\n    wouldYouRatherContent: specialGames.wouldYouRatherContent,\r\n    isTimerActive: specialGames.isTimerActive,\r\n    timerSeconds: specialGames.timerSeconds,\r\n    timerChallengeContent: specialGames.timerChallengeContent,\r\n    \r\n    // Functions\r\n    changeLanguage,\r\n    openLanguageSelector,\r\n    enterPlayerSetup,\r\n    addPlayerInput,\r\n    updatePlayerName,\r\n    removePlayerInput,\r\n    startGame,\r\n    handleKeyPress,\r\n    selectRoom,\r\n    nextTurn,\r\n    nextTurnAfterSpecialGame,\r\n    goBack,\r\n    resetGame,\r\n    selectPaymentOption,\r\n    processPayment,\r\n    resetPaywallState,\r\n    \r\n    // Funzioni per la selezione giochi (della stanza giochi)\r\n    toggleGameSelection,\r\n    proceedWithSelectedGames,\r\n    \r\n    // Funzioni dai giochi speciali\r\n    handleTruthDareChoice: specialGames.handleTruthDareChoice,\r\n    getSpecialGameMessage: specialGames.getSpecialGameMessage,\r\n    startTimer: specialGames.startTimer,\r\n    \r\n    // Additional state setters che devono essere esposti\r\n    setCurrentRoomIndex,\r\n    setGameState\r\n  };\r\n};\r\n\r\nexport default useGameLogic;","// TimerChallengeComponent.js\nimport React, { useState, useEffect, useRef } from 'react';\n\nconst TimerChallengeComponent = ({ timerChallengeContent }) => {\n  const [isTimerActive, setIsTimerActive] = useState(false);\n  const [timerSeconds, setTimerSeconds] = useState(20);\n  const timerIntervalRef = useRef(null);\n  \n  // Funzione per avviare il timer\n  const startTimer = () => {\n    console.log(\"Timer avviato!\");\n    \n    // Resetta e avvia il timer\n    setTimerSeconds(20);\n    setIsTimerActive(true);\n    \n    // Cancella eventuali intervalli precedenti\n    if (timerIntervalRef.current) {\n      clearInterval(timerIntervalRef.current);\n      timerIntervalRef.current = null;\n    }\n    \n    // Avvia il nuovo intervallo\n    timerIntervalRef.current = setInterval(() => {\n      setTimerSeconds(prev => {\n        if (prev <= 1) {\n          clearInterval(timerIntervalRef.current);\n          timerIntervalRef.current = null;\n          setIsTimerActive(false);\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n  };\n  \n  // Pulisci l'intervallo quando il componente viene smontato\n  useEffect(() => {\n    return () => {\n      if (timerIntervalRef.current) {\n        clearInterval(timerIntervalRef.current);\n      }\n    };\n  }, []);\n\n  return (\n    <div className=\"timer-challenge-container\">\n      {!isTimerActive ? (\n        <button\n          onClick={startTimer}\n          style={{\n            backgroundColor: '#FF6B35',\n            color: 'white',\n            border: 'none',\n            borderRadius: '50%',\n            width: '80px',\n            height: '80px',\n            fontSize: '24px',\n            cursor: 'pointer',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            boxShadow: '0 4px 15px rgba(255, 107, 53, 0.3)',\n            transition: 'all 0.2s'\n          }}\n          onMouseOver={(e) => e.target.style.transform = 'scale(1.1)'}\n          onMouseOut={(e) => e.target.style.transform = 'scale(1)'}\n        >\n          ⏱️\n        </button>\n      ) : (\n        <div style={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          gap: '10px'\n        }}>\n          <div style={{\n            width: '100px',\n            height: '100px',\n            borderRadius: '50%',\n            backgroundColor: timerSeconds > 10 ? '#2ECC71' : timerSeconds > 5 ? '#F39C12' : '#E74C3C',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            fontSize: '28px',\n            fontWeight: 'bold',\n            color: 'white',\n            boxShadow: `0 0 20px ${timerSeconds > 10 ? '#2ECC71' : timerSeconds > 5 ? '#F39C12' : '#E74C3C'}50`,\n            animation: timerSeconds <= 5 ? 'pulse 1s infinite' : 'none'\n          }}>\n            {timerSeconds}\n          </div>\n          <p style={{\n            fontSize: '14px',\n            color: '#AAAAAA',\n            textAlign: 'center'\n          }}>\n            Tempo rimanente: {timerSeconds}s\n          </p>\n        </div>\n      )}\n      \n      {timerChallengeContent && (\n        <div style={{\n          marginTop: '15px',\n          padding: '15px',\n          backgroundColor: '#FF6B3520',\n          borderRadius: '10px',\n          textAlign: 'center'\n        }}>\n          <p style={{ fontSize: '16px', fontWeight: 'bold' }}>\n            {timerChallengeContent}\n          </p>\n        </div>\n      )}\n      \n      {!isTimerActive && timerSeconds === 0 && (\n        <p style={{\n          fontSize: '16px',\n          color: '#E74C3C',\n          fontWeight: 'bold',\n          textAlign: 'center'\n        }}>\n          Tempo scaduto! Paga le penalità!\n        </p>\n      )}\n      \n      <style jsx=\"true\">{`\n        @keyframes pulse {\n          0% { transform: scale(1); }\n          50% { transform: scale(1.1); }\n          100% { transform: scale(1); }\n        }\n        \n        .timer-challenge-container {\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          gap: 15px;\n          margin-top: 20px;\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default TimerChallengeComponent;","// GameUI.js - Componente per la parte visuale del gioco (con modalità giochi)\r\nimport React from 'react';\r\nimport './App.css';\r\nimport TimerChallengeComponent from './TimerChallengeComponent';\r\n\r\n// Importa l'immagine del guanto che punta\r\nimport pointingGlove from './assets/pointing-glove.png';\r\n\r\n/**\r\n * Componente per la UI del gioco\r\n * @param {Object} props - Props passate dal componente principale\r\n */\r\nconst GameUI = (props) => {\r\n  const {\r\n    // Riferimento alle traduzioni\r\n    t,\r\n    language,\r\n    \r\n    // Stati del gioco\r\n    gameState,\r\n    players,\r\n    inputPlayers,\r\n    currentPlayerIndex,\r\n    currentAction,\r\n    selectedRoom,\r\n    isLoading,\r\n    currentRoomIndex,\r\n    \r\n    // Stati per modalità giochi\r\n    gameMode,\r\n    selectedGames,\r\n    \r\n    // Stati per giochi speciali\r\n    activeSpecialGame,\r\n    specialGamePlayer,\r\n    debtList,\r\n    truthDarePlayers,\r\n    currentTruthDareChoice,\r\n    truthDareContent,\r\n    truthDareState,\r\n    \r\n    // Contenuto del gioco \"preferiresti\"\r\n    wouldYouRatherContent,\r\n    \r\n    // Stati per il timer challenge\r\n    isTimerActive,\r\n    timerSeconds,\r\n    timerChallengeContent,\r\n    \r\n    // Stati per paywall\r\n    hasPlayedFreeGame,\r\n    hasPaid,\r\n    selectedPaymentOption,\r\n    isProcessingPayment,\r\n    \r\n    // Funzioni\r\n    changeLanguage,\r\n    openLanguageSelector,\r\n    enterPlayerSetup,\r\n    addPlayerInput,\r\n    updatePlayerName,\r\n    removePlayerInput,\r\n    startGame,\r\n    handleKeyPress,\r\n    selectRoom,\r\n    nextTurn,\r\n    nextTurnAfterSpecialGame,\r\n    handleTruthDareChoice,\r\n    goBack,\r\n    resetPaywallState,\r\n    getSpecialGameMessage,\r\n    \r\n    // Funzioni per modalità giochi\r\n    toggleGameSelection,\r\n    proceedWithSelectedGames,\r\n    \r\n    // Funzioni per il timer\r\n    startTimer,\r\n    \r\n    // Props aggiuntive che potrebbero essere necessarie\r\n    setCurrentRoomIndex,\r\n    selectPaymentOption,\r\n    processPayment,\r\n    MAX_ACTIONS_PER_GAME\r\n  } = props;\r\n\r\n  // Rendering condizionale in base allo stato del gioco\r\n  return (\r\n    <div className=\"app-container\">\r\n      {/* Welcome Screen */}\r\n      {gameState === 'welcome' && (\r\n        <div className=\"screen welcome-screen\" style={{ \r\n          backgroundColor: '#000000', \r\n          color: '#FFFFFF',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          height: '100vh',\r\n          padding: '20px'\r\n        }}>\r\n          <div style={{\r\n            textAlign: 'center',\r\n            maxWidth: '340px'\r\n          }}>\r\n            <h1 style={{ \r\n              fontSize: '36px', \r\n              marginBottom: '20px',\r\n              fontWeight: 'bold'\r\n            }}>{t.appName}</h1>\r\n            <p style={{ \r\n              fontSize: '18px', \r\n              marginBottom: '40px',\r\n              color: '#CCCCCC',\r\n              lineHeight: '1.5'\r\n            }}>{t.appDescription}</p>\r\n            \r\n            <button \r\n              onClick={enterPlayerSetup}\r\n              style={{\r\n                width: '100%',\r\n                backgroundColor: '#3498db',\r\n                color: '#FFFFFF',\r\n                border: 'none',\r\n                borderRadius: '10px',\r\n                padding: '16px',\r\n                fontSize: '18px',\r\n                fontWeight: 'bold',\r\n                cursor: 'pointer',\r\n                marginBottom: '15px'\r\n              }}\r\n            >\r\n              {t.startButton}\r\n            </button>\r\n            \r\n            <button \r\n              onClick={openLanguageSelector}\r\n              style={{\r\n                width: '100%',\r\n                backgroundColor: 'transparent',\r\n                color: '#FFFFFF',\r\n                border: '1px solid #3498db',\r\n                borderRadius: '10px',\r\n                padding: '16px',\r\n                fontSize: '18px',\r\n                fontWeight: 'bold',\r\n                cursor: 'pointer'\r\n              }}\r\n            >\r\n              {language === 'it' ? '🇮🇹 Italiano' : \r\n               language === 'en' ? '🇬🇧 English' : \r\n               language === 'fr' ? '🇫🇷 Français' : \r\n               '🇩🇪 Deutsch'} - {language === 'it' ? 'Cambia lingua' : \r\n                                 language === 'en' ? 'Change language' : \r\n                                 language === 'fr' ? 'Changer de langue' : \r\n                                 'Sprache ändern'}\r\n            </button>\r\n            \r\n            {/* Pulsante nascosto per reset (solo per testing) */}\r\n            <div style={{ marginTop: '20px', opacity: 0.5 }}>\r\n              <button\r\n                onClick={resetPaywallState}\r\n                style={{\r\n                  background: 'none',\r\n                  border: '1px solid #555',\r\n                  color: '#888',\r\n                  padding: '8px 16px',\r\n                  fontSize: '12px',\r\n                  borderRadius: '5px',\r\n                  cursor: 'pointer'\r\n                }}\r\n              >\r\n                {t.resetButton}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Game Selection Screen */}\r\n      {gameState === 'gameSelection' && (\r\n        <div className=\"screen game-selection-screen\" style={{ \r\n          backgroundColor: '#000000', \r\n          color: '#FFFFFF',\r\n          padding: '20px 0 0 0',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          height: '100vh'\r\n        }}>\r\n          <div style={{ \r\n            display: 'grid',\r\n            gridTemplateColumns: '50px 1fr 50px',\r\n            alignItems: 'center',\r\n            padding: '15px 0',\r\n            marginBottom: '20px'\r\n          }}>\r\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n              <button \r\n                onClick={goBack}\r\n                style={{\r\n                  background: 'none',\r\n                  border: 'none',\r\n                  color: '#FFFFFF',\r\n                  fontSize: '24px',\r\n                  cursor: 'pointer',\r\n                  padding: '5px'\r\n                }}\r\n              >\r\n                ←\r\n              </button>\r\n            </div>\r\n            \r\n            <h1 style={{ \r\n              margin: 0, \r\n              textAlign: 'center',\r\n              fontWeight: 'normal',\r\n              fontSize: '28px',\r\n              letterSpacing: '1px'\r\n            }}>\r\n              {t.gameSelection.title}\r\n            </h1>\r\n            \r\n            <div></div>\r\n          </div>\r\n          \r\n          <div style={{ \r\n            flex: 1,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            padding: '0 20px',\r\n            marginBottom: '80px'\r\n          }}>\r\n            <p style={{\r\n              fontSize: '16px',\r\n              color: '#CCCCCC',\r\n              textAlign: 'center',\r\n              marginBottom: '30px',\r\n              lineHeight: '1.5'\r\n            }}>\r\n              {t.gameSelection.description}\r\n            </p>\r\n            \r\n            <div style={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              gap: '20px'\r\n            }}>\r\n              {/* Obbligo o Verità */}\r\n              <div \r\n                onClick={() => toggleGameSelection('truthOrDare')}\r\n                style={{\r\n                  backgroundColor: selectedGames.truthOrDare ? '#8B5CF620' : '#2A2A2A',\r\n                  border: selectedGames.truthOrDare ? '2px solid #8B5CF6' : '2px solid transparent',\r\n                  borderRadius: '15px',\r\n                  padding: '20px',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  cursor: 'pointer',\r\n                  transition: 'all 0.2s'\r\n                }}\r\n              >\r\n                <div style={{\r\n                  width: '24px',\r\n                  height: '24px',\r\n                  border: '2px solid #8B5CF6',\r\n                  borderRadius: '4px',\r\n                  marginRight: '15px',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  backgroundColor: selectedGames.truthOrDare ? '#8B5CF6' : 'transparent'\r\n                }}>\r\n                  {selectedGames.truthOrDare && (\r\n                    <span style={{ color: '#FFFFFF', fontSize: '16px' }}>✓</span>\r\n                  )}\r\n                </div>\r\n                <div style={{ flex: 1 }}>\r\n                  <h3 style={{\r\n                    fontSize: '20px',\r\n                    fontWeight: 'bold',\r\n                    margin: 0,\r\n                    marginBottom: '5px'\r\n                  }}>\r\n                    {t.gameSelection.games.truthOrDare.name}\r\n                  </h3>\r\n                  <p style={{\r\n                    fontSize: '14px',\r\n                    color: '#AAAAAA',\r\n                    margin: 0\r\n                  }}>\r\n                    {t.gameSelection.games.truthOrDare.description}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Preferiresti */}\r\n              <div \r\n                onClick={() => toggleGameSelection('wouldYouRather')}\r\n                style={{\r\n                  backgroundColor: selectedGames.wouldYouRather ? '#8B5CF620' : '#2A2A2A',\r\n                  border: selectedGames.wouldYouRather ? '2px solid #8B5CF6' : '2px solid transparent',\r\n                  borderRadius: '15px',\r\n                  padding: '20px',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  cursor: 'pointer',\r\n                  transition: 'all 0.2s'\r\n                }}\r\n              >\r\n                <div style={{\r\n                  width: '24px',\r\n                  height: '24px',\r\n                  border: '2px solid #8B5CF6',\r\n                  borderRadius: '4px',\r\n                  marginRight: '15px',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  backgroundColor: selectedGames.wouldYouRather ? '#8B5CF6' : 'transparent'\r\n                }}>\r\n                  {selectedGames.wouldYouRather && (\r\n                    <span style={{ color: '#FFFFFF', fontSize: '16px' }}>✓</span>\r\n                  )}\r\n                </div>\r\n                <div style={{ flex: 1 }}>\r\n                  <h3 style={{\r\n                    fontSize: '20px',\r\n                    fontWeight: 'bold',\r\n                    margin: 0,\r\n                    marginBottom: '5px'\r\n                  }}>\r\n                    {t.gameSelection.games.wouldYouRather.name}\r\n                  </h3>\r\n                  <p style={{\r\n                    fontSize: '14px',\r\n                    color: '#AAAAAA',\r\n                    margin: 0\r\n                  }}>\r\n                    {t.gameSelection.games.wouldYouRather.description}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Non ho mai */}\r\n              <div \r\n                onClick={() => toggleGameSelection('nonHoMai')}\r\n                style={{\r\n                  backgroundColor: selectedGames.nonHoMai ? '#8B5CF620' : '#2A2A2A',\r\n                  border: selectedGames.nonHoMai ? '2px solid #8B5CF6' : '2px solid transparent',\r\n                  borderRadius: '15px',\r\n                  padding: '20px',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  cursor: 'pointer',\r\n                  transition: 'all 0.2s'\r\n                }}\r\n              >\r\n                <div style={{\r\n                  width: '24px',\r\n                  height: '24px',\r\n                  border: '2px solid #8B5CF6',\r\n                  borderRadius: '4px',\r\n                  marginRight: '15px',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  backgroundColor: selectedGames.nonHoMai ? '#8B5CF6' : 'transparent'\r\n                }}>\r\n                  {selectedGames.nonHoMai && (\r\n                    <span style={{ color: '#FFFFFF', fontSize: '16px' }}>✓</span>\r\n                  )}\r\n                </div>\r\n                <div style={{ flex: 1 }}>\r\n                  <h3 style={{\r\n                    fontSize: '20px',\r\n                    fontWeight: 'bold',\r\n                    margin: 0,\r\n                    marginBottom: '5px'\r\n                  }}>\r\n                    {t.gameSelection.games.nonHoMai.name}\r\n                  </h3>\r\n                  <p style={{\r\n                    fontSize: '14px',\r\n                    color: '#AAAAAA',\r\n                    margin: 0\r\n                  }}>\r\n                    {t.gameSelection.games.nonHoMai.description}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div style={{ \r\n            padding: '0',\r\n            position: 'fixed',\r\n            bottom: 0,\r\n            left: 0,\r\n            right: 0,\r\n            backgroundColor: 'transparent',\r\n            zIndex: 10\r\n          }}>\r\n            <button \r\n              onClick={proceedWithSelectedGames}\r\n              disabled={!Object.values(selectedGames).some(selected => selected)}\r\n              style={{\r\n                width: '100%',\r\n                backgroundColor: Object.values(selectedGames).some(selected => selected) ? '#8B5CF6' : '#555555',\r\n                color: '#FFFFFF',\r\n                border: 'none',\r\n                borderRadius: '0',\r\n                padding: '16px',\r\n                fontSize: '18px',\r\n                fontWeight: 'bold',\r\n                cursor: Object.values(selectedGames).some(selected => selected) ? 'pointer' : 'not-allowed',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                gap: '10px'\r\n              }}\r\n            >\r\n              <span style={{ fontSize: '20px' }}>▶</span> {t.gameSelection.continueButton}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Language Selection Screen */}\r\n      {gameState === 'languageSelection' && (\r\n        <div className=\"screen language-selection-screen\" style={{ \r\n          backgroundColor: '#000000', \r\n          color: '#FFFFFF',\r\n          padding: '20px 0 0 0',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          height: '100vh'\r\n        }}>\r\n          <div style={{ \r\n            display: 'grid',\r\n            gridTemplateColumns: '50px 1fr 50px',\r\n            alignItems: 'center',\r\n            padding: '15px 0',\r\n            marginBottom: '20px'\r\n          }}>\r\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n              <button \r\n                onClick={goBack}\r\n                style={{\r\n                  background: 'none',\r\n                  border: 'none',\r\n                  color: '#FFFFFF',\r\n                  fontSize: '24px',\r\n                  cursor: 'pointer',\r\n                  padding: '5px'\r\n                }}\r\n              >\r\n                ←\r\n              </button>\r\n            </div>\r\n            \r\n            <h1 style={{ \r\n              margin: 0, \r\n              textAlign: 'center',\r\n              fontWeight: 'normal',\r\n              fontSize: '28px',\r\n              letterSpacing: '1px'\r\n            }}>\r\n              {language === 'it' ? 'LINGUA' : \r\n               language === 'en' ? 'LANGUAGE' : \r\n               language === 'fr' ? 'LANGUE' : \r\n               'SPRACHE'}\r\n            </h1>\r\n            \r\n            <div></div>\r\n          </div>\r\n          \r\n          <div style={{ \r\n            flex: 1,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            padding: '0 20px',\r\n            marginBottom: '20px',\r\n            overflowY: 'auto'\r\n          }}>\r\n            <div style={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              gap: '15px',\r\n              marginTop: '20px'\r\n            }}>\r\n              <button \r\n                onClick={() => changeLanguage('it')}\r\n                style={{\r\n                  backgroundColor: language === 'it' ? '#3498db' : '#2A2A2A',\r\n                  border: 'none',\r\n                  borderRadius: '10px',\r\n                  padding: '20px',\r\n                  display: 'flex',\r\n                  flexDirection: 'row',\r\n                  alignItems: 'center',\r\n                  gap: '15px',\r\n                  cursor: 'pointer'\r\n                }}\r\n              >\r\n                <span style={{ fontSize: '24px' }}>🇮🇹</span>\r\n                <div style={{\r\n                  textAlign: 'left',\r\n                  flex: 1\r\n                }}>\r\n                  <h3 style={{\r\n                    fontSize: '18px',\r\n                    color: '#FFFFFF',\r\n                    margin: 0,\r\n                    marginBottom: '5px'\r\n                  }}>\r\n                    Italiano\r\n                  </h3>\r\n                  <p style={{\r\n                    fontSize: '14px',\r\n                    color: '#AAAAAA',\r\n                    margin: 0\r\n                  }}>\r\n                    Gioca in Italiano\r\n                  </p>\r\n                </div>\r\n                {language === 'it' && (\r\n                  <span style={{ fontSize: '24px', color: '#FFFFFF' }}>✓</span>\r\n                )}\r\n              </button>\r\n              \r\n              <button \r\n                onClick={() => changeLanguage('en')}\r\n                style={{\r\n                  backgroundColor: language === 'en' ? '#3498db' : '#2A2A2A',\r\n                  border: 'none',\r\n                  borderRadius: '10px',\r\n                  padding: '20px',\r\n                  display: 'flex',\r\n                  flexDirection: 'row',\r\n                  alignItems: 'center',\r\n                  gap: '15px',\r\n                  cursor: 'pointer'\r\n                }}\r\n              >\r\n                <span style={{ fontSize: '24px' }}>🇬🇧</span>\r\n                <div style={{\r\n                  textAlign: 'left',\r\n                  flex: 1\r\n                }}>\r\n                  <h3 style={{\r\n                    fontSize: '18px',\r\n                    color: '#FFFFFF',\r\n                    margin: 0,\r\n                    marginBottom: '5px'\r\n                  }}>\r\n                    English\r\n                  </h3>\r\n                  <p style={{\r\n                    fontSize: '14px',\r\n                    color: '#AAAAAA',\r\n                    margin: 0\r\n                  }}>\r\n                    Play in English\r\n                  </p>\r\n                </div>\r\n                {language === 'en' && (\r\n                  <span style={{ fontSize: '24px', color: '#FFFFFF' }}>✓</span>\r\n                )}\r\n              </button>\r\n\r\n              {/* Aggiungiamo l'opzione per il francese */}\r\n              <button \r\n                onClick={() => changeLanguage('fr')}\r\n                style={{\r\n                  backgroundColor: language === 'fr' ? '#3498db' : '#2A2A2A',\r\n                  border: 'none',\r\n                  borderRadius: '10px',\r\n                  padding: '20px',\r\n                  display: 'flex',\r\n                  flexDirection: 'row',\r\n                  alignItems: 'center',\r\n                  gap: '15px',\r\n                  cursor: 'pointer'\r\n                }}\r\n              >\r\n                <span style={{ fontSize: '24px' }}>🇫🇷</span>\r\n                <div style={{\r\n                  textAlign: 'left',\r\n                  flex: 1\r\n                }}>\r\n                  <h3 style={{\r\n                    fontSize: '18px',\r\n                    color: '#FFFFFF',\r\n                    margin: 0,\r\n                    marginBottom: '5px'\r\n                  }}>\r\n                    Français\r\n                  </h3>\r\n                  <p style={{\r\n                    fontSize: '14px',\r\n                    color: '#AAAAAA',\r\n                    margin: 0\r\n                  }}>\r\n                    Jouer en Français\r\n                  </p>\r\n                </div>\r\n                {language === 'fr' && (\r\n                  <span style={{ fontSize: '24px', color: '#FFFFFF' }}>✓</span>\r\n                )}\r\n              </button>\r\n\r\n              {/* Aggiungiamo l'opzione per il tedesco */}\r\n              <button \r\n                onClick={() => changeLanguage('de')}\r\n                style={{\r\n                  backgroundColor: language === 'de' ? '#3498db' : '#2A2A2A',\r\n                  border: 'none',\r\n                  borderRadius: '10px',\r\n                  padding: '20px',\r\n                  display: 'flex',\r\n                  flexDirection: 'row',\r\n                  alignItems: 'center',\r\n                  gap: '15px',\r\n                  cursor: 'pointer'\r\n                }}\r\n              >\r\n                <span style={{ fontSize: '24px' }}>🇩🇪</span>\r\n                <div style={{\r\n                  textAlign: 'left',\r\n                  flex: 1\r\n                }}>\r\n                  <h3 style={{\r\n                    fontSize: '18px',\r\n                    color: '#FFFFFF',\r\n                    margin: 0,\r\n                    marginBottom: '5px'\r\n                  }}>\r\n                    Deutsch\r\n                  </h3>\r\n                  <p style={{\r\n                    fontSize: '14px',\r\n                    color: '#AAAAAA',\r\n                    margin: 0\r\n                  }}>\r\n                    Auf Deutsch spielen\r\n                  </p>\r\n                </div>\r\n                {language === 'de' && (\r\n                  <span style={{ fontSize: '24px', color: '#FFFFFF' }}>✓</span>\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n          \r\n          <div style={{ \r\n            padding: '0',\r\n            position: 'fixed',\r\n            bottom: 0,\r\n            left: 0,\r\n            right: 0,\r\n            backgroundColor: 'transparent',\r\n            zIndex: 10\r\n          }}>\r\n            <button \r\n              onClick={goBack}\r\n              style={{\r\n                width: '100%',\r\n                backgroundColor: '#3498db',\r\n                color: '#FFFFFF',\r\n                border: 'none',\r\n                borderRadius: '0',\r\n                padding: '16px',\r\n                fontSize: '18px',\r\n                fontWeight: 'bold',\r\n                cursor: 'pointer'\r\n              }}\r\n            >\r\n              {language === 'it' ? 'CONFERMA' : \r\n               language === 'en' ? 'CONFIRM' : \r\n               language === 'fr' ? 'CONFIRMER' : \r\n               'BESTÄTIGEN'}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Player Setup Screen */}\r\n      {gameState === 'playerSetup' && (\r\n        <div className=\"screen player-setup-screen\" style={{ \r\n          backgroundColor: '#000000', \r\n          color: '#FFFFFF',\r\n          padding: '0',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          height: '100vh'\r\n        }}>\r\n          <div style={{ \r\n            display: 'grid',\r\n            gridTemplateColumns: '50px 1fr 50px',\r\n            alignItems: 'center',\r\n            padding: '15px 0',\r\n            marginBottom: '20px'\r\n          }}>\r\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n              <button \r\n                onClick={goBack}\r\n                style={{\r\n                  background: 'none',\r\n                  border: 'none',\r\n                  color: '#FFFFFF',\r\n                  fontSize: '24px',\r\n                  cursor: 'pointer',\r\n                  padding: '5px'\r\n                }}\r\n              >\r\n                ←\r\n              </button>\r\n            </div>\r\n            \r\n            <h1 style={{ \r\n              margin: 0, \r\n              textAlign: 'center',\r\n              fontWeight: 'normal',\r\n              fontSize: '28px',\r\n              letterSpacing: '1px'\r\n            }}>\r\n              {t.playersScreenTitle}\r\n            </h1>\r\n            \r\n            <div></div> {/* Colonna vuota a destra per equilibrio */}\r\n          </div>\r\n          \r\n          <div style={{ \r\n            flex: 1,\r\n            padding: '0',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            overflow: 'auto',\r\n            marginBottom: '80px'\r\n          }}>\r\n            {inputPlayers.map((input, index) => (\r\n              <div key={input.id} style={{ \r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                gap: '10px',\r\n                width: '100%',\r\n                maxWidth: '340px',\r\n                marginBottom: '16px',\r\n                padding: '0 20px'\r\n              }}>\r\n                <input\r\n                  id={`player-input-${index}`}\r\n                  type=\"text\"\r\n                  value={input.name}\r\n                  onChange={(e) => updatePlayerName(input.id, e.target.value)}\r\n                  onKeyPress={(e) => handleKeyPress(e, input.id, index)}\r\n                  placeholder={t.playerInputPlaceholder}\r\n                  style={{\r\n                    flex: 1,\r\n                    backgroundColor: '#1A1A1A',\r\n                    color: '#FFFFFF',\r\n                    border: 'none',\r\n                    borderRadius: '10px',\r\n                    padding: '16px 20px',\r\n                    fontSize: '16px',\r\n                  }}\r\n                />\r\n                <button \r\n                  onClick={() => removePlayerInput(input.id)}\r\n                  disabled={inputPlayers.length <= 1}\r\n                  style={{\r\n                    background: 'none',\r\n                    border: 'none',\r\n                    color: '#808080',\r\n                    fontSize: '24px',\r\n                    cursor: 'pointer',\r\n                    padding: '10px',\r\n                    opacity: inputPlayers.length <= 1 ? 0.5 : 1\r\n                  }}\r\n                >\r\n                  🗑️\r\n                </button>\r\n              </div>\r\n            ))}\r\n            \r\n            <button \r\n              onClick={addPlayerInput}\r\n              disabled={inputPlayers.length >= 15}\r\n              style={{\r\n                margin: '5px 0 20px 0',\r\n                backgroundColor: 'transparent',\r\n                color: '#FFFFFF',\r\n                border: '1px dashed #808080',\r\n                borderRadius: '10px',\r\n                padding: '15px',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                gap: '10px',\r\n                cursor: 'pointer',\r\n                fontSize: '16px',\r\n                width: '340px'\r\n              }}\r\n            >\r\n              <span style={{ fontSize: '20px' }}>⊕</span> {t.addPlayerLabel}\r\n            </button>\r\n          </div>\r\n          \r\n          <div style={{ \r\n            position: 'fixed',\r\n            bottom: 0,\r\n            left: 0,\r\n            right: 0,\r\n            backgroundColor: 'transparent'\r\n          }}>\r\n            <button \r\n              onClick={startGame}\r\n              style={{\r\n                width: '100%',\r\n                backgroundColor: gameMode === 'games' ? '#8B5CF6' : '#3498db',\r\n                color: '#FFFFFF',\r\n                border: 'none',\r\n                borderRadius: '0',\r\n                padding: '16px',\r\n                fontSize: '18px',\r\n                fontWeight: 'bold',\r\n                cursor: 'pointer',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                gap: '10px'\r\n              }}\r\n            >\r\n              <span style={{ fontSize: '20px' }}>▶</span> {t.startGameButton}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Room Selection Screen */}\r\n      {gameState === 'roomSelection' && (\r\n        <div className=\"screen room-selection-screen\" style={{ \r\n          backgroundColor: '#000000', \r\n          color: '#FFFFFF',\r\n          padding: '0',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          height: '100vh',\r\n          overflowY: 'auto'\r\n        }}>\r\n          <div style={{ \r\n            display: 'grid',\r\n            gridTemplateColumns: '50px 1fr 50px',\r\n            alignItems: 'center',\r\n            padding: '15px 0',\r\n            marginBottom: '10px'\r\n          }}>\r\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n              <button \r\n                onClick={goBack}\r\n                style={{\r\n                  background: 'none',\r\n                  border: 'none',\r\n                  color: '#FFFFFF',\r\n                  fontSize: '24px',\r\n                  cursor: 'pointer',\r\n                  padding: '5px'\r\n                }}\r\n              >\r\n                ←\r\n              </button>\r\n            </div>\r\n            \r\n            <h1 style={{ \r\n              margin: 0, \r\n              textAlign: 'center',\r\n              fontWeight: 'normal',\r\n              fontSize: '28px',\r\n              letterSpacing: '1px'\r\n            }}>\r\n              {t.roomsScreenTitle}\r\n            </h1>\r\n            \r\n            <div></div>\r\n          </div>\r\n          \r\n          <div style={{ \r\n            flex: 1,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            padding: '0 20px',\r\n            minHeight: '450px',\r\n            marginBottom: '20px'\r\n          }}>\r\n            <div style={{\r\n              width: '300px',\r\n              height: 'auto',\r\n              minHeight: '300px',\r\n              maxHeight: '70vh',\r\n              backgroundColor: t.rooms[currentRoomIndex].color,\r\n              borderRadius: '15px',\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              justifyContent: 'space-between',\r\n              alignItems: 'center',\r\n              padding: '30px',\r\n              marginBottom: '15px'\r\n            }}>\r\n              <div style={{ flex: 1, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                <h2 style={{\r\n                  fontSize: '36px',\r\n                  fontWeight: 'bold',\r\n                  textAlign: 'center',\r\n                  color: t.rooms[currentRoomIndex].color === '#1F2937' || \r\n                        t.rooms[currentRoomIndex].color === '#DC2626' || \r\n                        t.rooms[currentRoomIndex].color === '#D946EF' ||\r\n                        t.rooms[currentRoomIndex].color === '#8B5CF6' ? '#FFFFFF' : '#000000'\r\n                }}>\r\n                  {t.rooms[currentRoomIndex].name}\r\n                </h2>\r\n              </div>\r\n              \r\n              <div style={{ marginBottom: '20px' }}>\r\n                <button \r\n                  onClick={() => selectRoom(t.rooms[currentRoomIndex])}\r\n                  style={{\r\n                    backgroundColor: '#FFFFFF',\r\n                    color: '#000000',\r\n                    border: 'none',\r\n                    borderRadius: '10px',\r\n                    padding: '14px 40px',\r\n                    fontSize: '16px',\r\n                    fontWeight: 'bold',\r\n                    cursor: 'pointer'\r\n                  }}\r\n                >\r\n                  {t.enterButton}\r\n                </button>\r\n              </div>\r\n              \r\n              <div style={{ minHeight: '40px', display: 'flex', alignItems: 'center' }}>\r\n                <p style={{\r\n                  fontSize: '16px',\r\n                  textAlign: 'center',\r\n                  color: t.rooms[currentRoomIndex].color === '#1F2937' ? '#9CA3AF' :\r\n                        t.rooms[currentRoomIndex].color === '#DC2626' ? 'rgba(255,255,255,0.8)' :\r\n                        t.rooms[currentRoomIndex].color === '#D946EF' ? '#f5d0fe' : \r\n                        t.rooms[currentRoomIndex].color === '#8B5CF6' ? 'rgba(255,255,255,0.8)' :\r\n                        'rgba(0,0,0,0.7)'\r\n                }}>\r\n                  {t.rooms[currentRoomIndex].description}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            \r\n            <div style={{ \r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              gap: '20px',\r\n              marginBottom: '20px'\r\n            }}>\r\n              <button \r\n                onClick={() => {\r\n                  const newIndex = currentRoomIndex === 0 ? t.rooms.length - 1 : currentRoomIndex - 1;\r\n                  setCurrentRoomIndex(newIndex);\r\n                }}\r\n                style={{\r\n                  background: 'none',\r\n                  border: 'none',\r\n                  color: '#AAAAAA',\r\n                  fontSize: '36px',\r\n                  cursor: 'pointer',\r\n                  padding: '10px'\r\n                }}\r\n              >\r\n                ‹\r\n              </button>\r\n              \r\n              <div style={{ \r\n                display: 'flex',\r\n                gap: '8px'\r\n              }}>\r\n                {t.rooms.map((_, index) => (\r\n                  <div \r\n                    key={index}\r\n                    onClick={() => setCurrentRoomIndex(index)}\r\n                    style={{\r\n                      width: '10px',\r\n                      height: '10px',\r\n                      borderRadius: '50%',\r\n                      backgroundColor: index === currentRoomIndex ? '#FFFFFF' : '#555555',\r\n                      cursor: 'pointer'\r\n                    }}\r\n                  ></div>\r\n                ))}\r\n              </div>\r\n              \r\n              <button \r\n                onClick={() => {\r\n                  const newIndex = currentRoomIndex === t.rooms.length - 1 ? 0 : currentRoomIndex + 1;\r\n                  setCurrentRoomIndex(newIndex);\r\n                }}\r\n                style={{\r\n                  background: 'none',\r\n                  border: 'none',\r\n                  color: '#AAAAAA',\r\n                  fontSize: '36px',\r\n                  cursor: 'pointer',\r\n                  padding: '10px'\r\n                }}\r\n              >\r\n                ›\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Playing Screen */}\r\n      {gameState === 'playing' && (selectedRoom || gameMode === 'games') && (\r\n        <div className=\"screen playing-screen\" style={{ \r\n          backgroundColor: '#000000', \r\n          color: '#FFFFFF',\r\n          padding: '20px 0 0 0',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          height: '100vh'\r\n        }}>\r\n          <div style={{ \r\n            display: 'grid',\r\n            gridTemplateColumns: '50px 1fr 50px',\r\n            alignItems: 'center',\r\n            padding: '15px 0',\r\n            marginBottom: '20px'\r\n          }}>\r\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n              <button \r\n                onClick={goBack}\r\n                style={{\r\n                  background: 'none',\r\n                  border: 'none',\r\n                  color: '#FFFFFF',\r\n                  fontSize: '24px',\r\n                  cursor: 'pointer',\r\n                  padding: '5px'\r\n                }}\r\n              >\r\n                ←\r\n              </button>\r\n            </div>\r\n            \r\n            <h1 style={{ \r\n              margin: 0, \r\n              textAlign: 'center',\r\n              fontWeight: 'normal',\r\n              fontSize: '28px',\r\n              letterSpacing: '1px'\r\n            }}>\r\n              {gameMode === 'games' ? t.gameSelection.selectedGamesTitle : selectedRoom.name.toUpperCase()}\r\n            </h1>\r\n            \r\n            <div></div> {/* Colonna vuota a destra per equilibrio */}\r\n          </div>\r\n          \r\n          <div style={{ \r\n            flex: 1,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            padding: '0 20px',\r\n            marginBottom: '80px'\r\n          }}>\r\n            <h2 style={{\r\n              fontSize: '26px',\r\n              fontWeight: 'bold',\r\n              textAlign: 'center',\r\n              margin: '10px 0 30px 0'\r\n            }}>\r\n              {activeSpecialGame ? (t.specialGamesTitles ? t.specialGamesTitles[activeSpecialGame] : activeSpecialGame) : players[currentPlayerIndex]}\r\n            </h2>\r\n            \r\n            <div style={{\r\n              backgroundColor: '#1A1A1A',\r\n              borderRadius: '15px',\r\n              padding: '30px 20px',\r\n              marginBottom: '30px',\r\n              minHeight: '180px',\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              justifyContent: 'center',\r\n              alignItems: 'center'\r\n            }}>\r\n              {currentAction && (\r\n                <p style={{\r\n                  fontSize: '20px',\r\n                  lineHeight: '1.4',\r\n                  textAlign: 'center',\r\n                  whiteSpace: 'pre-wrap'\r\n                }}>\r\n                  {currentAction.text}\r\n                </p>\r\n              )}\r\n              \r\n              {/* Timer Challenge Component */}\r\n              {activeSpecialGame === \"timerChallenge\" && (\r\n                <div style={{\r\n                  marginTop: '20px',\r\n                  display: 'flex',\r\n                  flexDirection: 'column',\r\n                  alignItems: 'center',\r\n                  gap: '15px'\r\n                }}>\r\n                  <TimerChallengeComponent timerChallengeContent={timerChallengeContent} />\r\n                </div>\r\n              )}\r\n              \r\n              {/* Messaggio unificato per i giochi speciali attivi */}\r\n              {activeSpecialGame && activeSpecialGame !== \"wouldYouRather\" && activeSpecialGame !== \"timerChallenge\" && (\r\n                <p style={{ \r\n                  marginTop: '15px', \r\n                  fontSize: '16px', \r\n                  color: '#AAAAAA',\r\n                  textAlign: 'center'\r\n                }}>\r\n                  {getSpecialGameMessage && getSpecialGameMessage()}\r\n                </p>\r\n              )}\r\n              \r\n              {/* Pulsanti per la scelta Obbligo/Verità/Debito */}\r\n              {activeSpecialGame === \"truthOrDare\" && truthDareState === \"choosing\" && (\r\n                <div style={{\r\n                  display: 'flex',\r\n                  flexDirection: 'column',\r\n                  alignItems: 'center',\r\n                  gap: '15px',\r\n                  marginTop: '20px'\r\n                }}>\r\n                  <p style={{ fontSize: '16px', color: '#AAAAAA' }}>\r\n                    {t.truthDareOptions.selectOption}\r\n                  </p>\r\n                  <div style={{\r\n                    display: 'flex',\r\n                    gap: '10px',\r\n                    justifyContent: 'center'\r\n                  }}>\r\n                    <button\r\n                      onClick={() => handleTruthDareChoice(\"truth\")}\r\n                      style={{\r\n                        backgroundColor: '#E74C3C',\r\n                        color: 'white',\r\n                        border: 'none',\r\n                        borderRadius: '8px',\r\n                        padding: '12px 20px',\r\n                        fontSize: '16px',\r\n                        fontWeight: 'bold',\r\n                        cursor: 'pointer'\r\n                      }}\r\n                    >\r\n                      {t.truthDareOptions.truth}\r\n                    </button>\r\n                    <button\r\n                      onClick={() => handleTruthDareChoice(\"dare\")}\r\n                      style={{\r\n                        backgroundColor: '#3498DB',\r\n                        color: 'white',\r\n                        border: 'none',\r\n                        borderRadius: '8px',\r\n                        padding: '12px 20px',\r\n                        fontSize: '16px',\r\n                        fontWeight: 'bold',\r\n                        cursor: 'pointer'\r\n                      }}\r\n                    >\r\n                      {t.truthDareOptions.dare}\r\n                    </button>\r\n                    <button\r\n                      onClick={() => handleTruthDareChoice(\"debt\")}\r\n                      style={{\r\n                        backgroundColor: '#2ECC71',\r\n                        color: 'white',\r\n                        border: 'none',\r\n                        borderRadius: '8px',\r\n                        padding: '12px 20px',\r\n                        fontSize: '16px',\r\n                        fontWeight: 'bold',\r\n                        cursor: 'pointer'\r\n                      }}\r\n                    >\r\n                      {t.truthDareOptions.debt}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {/* Mostra il contenuto della scelta */}\r\n              {activeSpecialGame === \"truthOrDare\" && truthDareState === \"executing\" && (\r\n                <div style={{\r\n                  marginTop: '20px',\r\n                  padding: '15px',\r\n                  backgroundColor: currentTruthDareChoice === \"truth\" ? '#E74C3C20' :\r\n                                currentTruthDareChoice === \"dare\" ? '#3498DB20' :\r\n                                '#2ECC7120',\r\n                  borderRadius: '10px',\r\n                  textAlign: 'center'\r\n                }}>\r\n                  <h3 style={{\r\n                    marginBottom: '10px',\r\n                    color: currentTruthDareChoice === \"truth\" ? '#E74C3C' :\r\n                        currentTruthDareChoice === \"dare\" ? '#3498DB' :\r\n                        '#2ECC71'\r\n                  }}>\r\n                    {currentTruthDareChoice === \"truth\" ? t.truthDareOptions.truth :\r\n                    currentTruthDareChoice === \"dare\" ? t.truthDareOptions.dare :\r\n                    t.truthDareOptions.debt}\r\n                  </h3>\r\n                  \r\n                  {truthDareContent && (\r\n                    <p style={{ fontSize: '18px' }}>\r\n                      {truthDareContent}\r\n                    </p>\r\n                  )}\r\n                  \r\n                  {currentTruthDareChoice === \"debt\" && (\r\n                    <p style={{ fontSize: '16px', color: '#AAAAAA', marginTop: '10px' }}>\r\n                      {t.truthDareOptions.debtExplanation}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          \r\n          <div style={{ \r\n            padding: '0',\r\n            position: 'fixed',\r\n            bottom: 0,\r\n            left: 0,\r\n            right: 0,\r\n            backgroundColor: 'transparent',\r\n            zIndex: 10\r\n          }}>\r\n            {/* Gestione dei pulsanti in base al tipo di gioco speciale */}\r\n            {activeSpecialGame === \"truthOrDare\" && truthDareState === \"choosing\" ? (\r\n              // Manteniamo il pulsante originale durante la scelta Truth/Dare/Debt\r\n              <button \r\n                style={{\r\n                  width: '100%',\r\n                  backgroundColor: '#AAAAAA',\r\n                  color: '#FFFFFF',\r\n                  border: 'none',\r\n                  borderRadius: '0',\r\n                  padding: '16px',\r\n                  fontSize: '18px',\r\n                  fontWeight: 'bold',\r\n                  cursor: 'not-allowed',\r\n                  opacity: 0.5\r\n                }}\r\n              >\r\n                {t.truthDareOptions.chooseOption}\r\n              </button>\r\n            ) : activeSpecialGame === \"timerChallenge\" && !isTimerActive && timerSeconds > 0 ? (\r\n              // Per Timer Challenge quando il timer non è ancora stato avviato\r\n              <button \r\n                onClick={() => startTimer()}\r\n                style={{\r\n                  width: '100%',\r\n                  backgroundColor: '#FF6B35',\r\n                  color: '#FFFFFF',\r\n                  border: 'none',\r\n                  borderRadius: '0',\r\n                  padding: '16px',\r\n                  fontSize: '18px',\r\n                  fontWeight: 'bold',\r\n                  cursor: 'pointer'\r\n                }}\r\n              >\r\n                {t.startTimerButton}\r\n              </button>\r\n            ) : (\r\n              // Pulsante NEXT normale\r\n              <button \r\n                onClick={() => {\r\n                  if (activeSpecialGame) {\r\n                    nextTurnAfterSpecialGame();\r\n                  } else {\r\n                    nextTurn();\r\n                  }\r\n                }}\r\n                style={{\r\n                  width: '100%',\r\n                  backgroundColor: gameMode === 'games' ? '#8B5CF6' : '#3498db',\r\n                  color: '#FFFFFF',\r\n                  border: 'none',\r\n                  borderRadius: '0',\r\n                  padding: '16px',\r\n                  fontSize: '18px',\r\n                  fontWeight: 'bold',\r\n                  cursor: 'pointer'\r\n                }}\r\n              >\r\n                {t.nextButton}\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Game Over Screen */}\r\n      {gameState === 'gameOver' && (\r\n        <div \r\n          className=\"screen game-over-screen\" \r\n          onClick={() => {\r\n            // Se l'utente ha già giocato la partita gratuita e non ha pagato, mostra il paywall\r\n            if (hasPlayedFreeGame && !hasPaid) {\r\n              goBack(); // Utilizza la funzione goBack passata dalle props\r\n            } else {\r\n              goBack(); // Utilizza la funzione goBack passata dalle props\r\n            }\r\n          }}\r\n          style={{\r\n            backgroundColor: '#000000',\r\n            color: '#FFFFFF',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            height: '100vh',\r\n            padding: '20px',\r\n            cursor: 'pointer'\r\n          }}\r\n        >\r\n          <div style={{\r\n            textAlign: 'center',\r\n            maxWidth: '340px'\r\n          }}>\r\n            <h1 style={{ \r\n              fontSize: '36px', \r\n              marginBottom: '30px',\r\n              fontWeight: 'bold'\r\n            }}>\r\n              {t.gameOverMessage}\r\n            </h1>\r\n            \r\n            <p style={{ \r\n              fontSize: '18px', \r\n              marginBottom: '50px',\r\n              color: '#CCCCCC',\r\n              lineHeight: '1.5'\r\n            }}>\r\n              {t.actionsCompletedMessage && MAX_ACTIONS_PER_GAME ?\r\n                t.actionsCompletedMessage.replace('{count}', MAX_ACTIONS_PER_GAME) :\r\n                `Partita completata!`}\r\n            </p>\r\n            \r\n            <div style={{ \r\n              width: '120px',\r\n              height: '120px',\r\n              margin: '0 auto 40px',\r\n              animation: 'float 2s infinite ease-in-out'\r\n            }}>\r\n              <img \r\n                src={pointingGlove} \r\n                alt=\"Guanto che punta\" \r\n                style={{\r\n                  width: '100%',\r\n                  height: '100%',\r\n                  objectFit: 'contain',\r\n                  filter: 'brightness(0) invert(1)'\r\n                }}\r\n              />\r\n            </div>\r\n            \r\n            <p style={{ \r\n              fontSize: '16px', \r\n              color: gameMode === 'games' ? '#8B5CF6' : '#3498db'\r\n            }}>\r\n              {t.tapToContinueMessage ? t.tapToContinueMessage.replace(\r\n                '{action}', \r\n                hasPlayedFreeGame && !hasPaid \r\n                  ? (t.unlockMoreGamesMessage || 'sbloccare altre partite')\r\n                  : gameMode === 'games' \r\n                    ? (t.returnToGamesMessage || 'tornare alla selezione dei giochi')\r\n                    : (t.returnToRoomsMessage || 'tornare alla selezione delle stanze')\r\n              ) : 'Tocca per continuare'}\r\n            </p>\r\n          </div>\r\n          \r\n          {/* Add CSS animation for the floating effect */}\r\n          <style jsx=\"true\">{`\r\n            @keyframes float {\r\n              0% { transform: translateY(0px); }\r\n              50% { transform: translateY(-10px); }\r\n              100% { transform: translateY(0px); }\r\n            }\r\n            @keyframes pulse {\r\n              0% { transform: scale(1); }\r\n              50% { transform: scale(1.1); }\r\n              100% { transform: scale(1); }\r\n            }\r\n          `}</style>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Paywall Screen */}\r\n      {gameState === 'paywall' && (\r\n        <div className=\"screen paywall-screen\" style={{ \r\n          backgroundColor: '#000000', \r\n          color: '#FFFFFF',\r\n          padding: '20px 0 0 0',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          height: '100vh'\r\n        }}>\r\n          <div style={{ \r\n            display: 'grid',\r\n            gridTemplateColumns: '50px 1fr 50px',\r\n            alignItems: 'center',\r\n            padding: '15px 0',\r\n            marginBottom: '20px'\r\n          }}>\r\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n              <button \r\n                onClick={goBack}\r\n                style={{\r\n                  background: 'none',\r\n                  border: 'none',\r\n                  color: '#FFFFFF',\r\n                  fontSize: '24px',\r\n                  cursor: 'pointer',\r\n                  padding: '5px'\r\n                }}\r\n              >\r\n                ←\r\n              </button>\r\n            </div>\r\n            \r\n            <h1 style={{ \r\n              margin: 0, \r\n              textAlign: 'center',\r\n              fontWeight: 'normal',\r\n              fontSize: '28px',\r\n              letterSpacing: '1px'\r\n            }}>\r\n              {t.unlockGameTitle}\r\n            </h1>\r\n            \r\n            <div></div> {/* Colonna vuota a destra per equilibrio */}\r\n          </div>\r\n          \r\n          <div style={{ \r\n            flex: 1,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            padding: '0 20px'\r\n          }}>\r\n            <div style={{\r\n              backgroundColor: '#1A1A1A',\r\n              borderRadius: '15px',\r\n              padding: '25px 20px',\r\n              marginBottom: '30px',\r\n              textAlign: 'center'\r\n            }}>\r\n              <h2 style={{\r\n                fontSize: '24px',\r\n                fontWeight: 'bold',\r\n                marginBottom: '15px'\r\n              }}>\r\n                {t.freeGameEndedTitle}\r\n              </h2>\r\n              <p style={{\r\n                fontSize: '16px',\r\n                color: '#CCCCCC',\r\n                lineHeight: '1.5',\r\n                marginBottom: '20px'\r\n              }}>\r\n                {t.freeGameEndedMessage}\r\n              </p>\r\n              \r\n              <div style={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                gap: '15px',\r\n                marginTop: '25px'\r\n              }}>\r\n                {t.paymentOptions && t.paymentOptions.map(option => (\r\n                  <div \r\n                    key={option.id}\r\n                    onClick={() => selectPaymentOption && selectPaymentOption(option)}\r\n                    style={{\r\n                      backgroundColor: selectedPaymentOption?.id === option.id ? '#3498db20' : '#2A2A2A',\r\n                      border: selectedPaymentOption?.id === option.id ? '2px solid #3498db' : '2px solid transparent',\r\n                      borderRadius: '10px',\r\n                      padding: '20px',\r\n                      display: 'flex',\r\n                      flexDirection: 'column',\r\n                      cursor: 'pointer',\r\n                      transition: 'all 0.2s'\r\n                    }}\r\n                  >\r\n                    <div style={{\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between',\r\n                      alignItems: 'center',\r\n                      marginBottom: '10px'\r\n                    }}>\r\n                      <h3 style={{\r\n                        fontSize: '18px',\r\n                        fontWeight: 'bold'\r\n                      }}>\r\n                        {option.name}\r\n                      </h3>\r\n                      <div style={{\r\n                        fontSize: '20px',\r\n                        fontWeight: 'bold',\r\n                        color: '#3498db'\r\n                      }}>\r\n                        €{option.price}\r\n                      </div>\r\n                    </div>\r\n                    <p style={{\r\n                      fontSize: '14px',\r\n                      color: '#AAAAAA',\r\n                      textAlign: 'left'\r\n                    }}>\r\n                      {option.description}\r\n                    </p>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div style={{ \r\n            padding: '0',\r\n            position: 'fixed',\r\n            bottom: 0,\r\n            left: 0,\r\n            right: 0,\r\n            backgroundColor: 'transparent',\r\n            zIndex: 10\r\n          }}>\r\n            <button \r\n              onClick={processPayment}\r\n              disabled={!selectedPaymentOption || isProcessingPayment}\r\n              style={{\r\n                width: '100%',\r\n                backgroundColor: selectedPaymentOption ? '#3498db' : '#555555',\r\n                color: '#FFFFFF',\r\n                border: 'none',\r\n                borderRadius: '0',\r\n                padding: '16px',\r\n                fontSize: '18px',\r\n                fontWeight: 'bold',\r\n                cursor: selectedPaymentOption ? 'pointer' : 'not-allowed',\r\n                opacity: isProcessingPayment ? 0.7 : 1,\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                gap: '10px'\r\n              }}\r\n            >\r\n              {isProcessingPayment ? t.processingPayment : t.purchaseButton}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Interfaccia per i debiti */}\r\n      {gameState === 'playing' && debtList && debtList.length > 0 && (\r\n        <div style={{\r\n          position: 'fixed',\r\n          bottom: '70px',\r\n          right: '20px',\r\n          zIndex: 100\r\n        }}>\r\n          <button\r\n            onClick={() => alert(`${t.debts.activeDebtsTitle}\\n${debtList.filter(d => d.status === 'active').map(d => `- ${d.player}: ${d.description}`).join('\\n')}`)}\r\n            style={{\r\n              backgroundColor: '#EAB308',\r\n              color: 'black',\r\n              border: 'none',\r\n              borderRadius: '50%',\r\n              width: '40px',\r\n              height: '40px',\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              fontSize: '20px',\r\n              boxShadow: '0 2px 10px rgba(0,0,0,0.2)',\r\n              cursor: 'pointer'\r\n            }}\r\n          >\r\n            {t.debts.buttonLabel}\r\n          </button>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Loading Screen */}\r\n      {isLoading && (\r\n        <div style={{\r\n          position: 'fixed',\r\n          top: 0,\r\n          left: 0,\r\n          right: 0,\r\n          bottom: 0,\r\n          backgroundColor: 'rgba(0, 0, 0, 0.8)',\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          zIndex: 1000\r\n        }}>\r\n          <div style={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            color: '#FFFFFF'\r\n          }}>\r\n            <div style={{\r\n              width: '40px',\r\n              height: '40px',\r\n              borderRadius: '50%',\r\n              border: '3px solid rgba(255,255,255,0.3)',\r\n              borderTopColor: '#FFFFFF',\r\n              animation: 'spin 1s ease-in-out infinite',\r\n              marginBottom: '15px'\r\n            }}></div>\r\n            <p style={{\r\n              fontSize: '16px'\r\n            }}>{t.loadingMessage}</p>\r\n            \r\n            <style jsx=\"true\">{`\r\n              @keyframes spin {\r\n                to { transform: rotate(360deg); }\r\n              }\r\n            `}</style>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameUI;","// DrinkingGameApp.js - Componente principale che collega la logica con l'interfaccia utente\nimport React from 'react';\nimport './App.css';\nimport useGameLogic from './useGameLogic';\nimport GameUI from './GameUI';\n\n/**\n * Componente principale dell'applicazione\n * Collega la logica di gioco (useGameLogic) con l'interfaccia utente (GameUI)\n */\nconst DrinkingGameApp = () => {\n  // Utilizziamo il custom hook per ottenere tutta la logica e lo stato del gioco\n  const gameLogic = useGameLogic();\n  \n  // Passiamo tutti i valori e le funzioni al componente UI\n  return <GameUI {...gameLogic} />;\n};\n\nexport default DrinkingGameApp;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './App.css';\nimport DrinkingGameApp from './DrinkingGameApp';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <DrinkingGameApp />\n  </React.StrictMode>\n);","module.exports = __webpack_public_path__ + \"static/media/pointing-glove.f00b599b.png\";"],"sourceRoot":""}